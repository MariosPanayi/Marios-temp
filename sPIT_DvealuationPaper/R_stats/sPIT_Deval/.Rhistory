#     filter(Experiment_Devaluation == "Taste_Aversion")
#
#   summary <- summary %>%
#     mutate(RewardName = str_replace(string = RewardName, pattern = "maltodextrin",replacement = "Maltodextrin"),
#            RewardName = factor(RewardName, levels = levelorder)) %>%
#     arrange(RewardName,Day)
#
#   ### Filter relevant Group
#   summary <- summary %>%
#     filter(Experiment_Devaluation == "Taste_Aversion")
#
#   # Return Summary Data
#     mutate(RewardName = str_replace(string = RewardName, pattern = "maltodextrin",replacement = "Maltodextrin"),
#            RewardName = factor(RewardName, levels = levelorder)) %>%
#     arrange(RewardName,Day)
#
#   ### Filter relevant Group
#   summary <- summary %>%
#     filter(Experiment_Devaluation == "Taste_Aversion")
#
#   # Return Summary Data
#   return(summary)
#            RewardName = factor(RewardName, levels = levelorder)) %>%
#     arrange(RewardName,Day)
#
#   ### Filter relevant Group
#   summary <- summary %>%
#     filter(Experiment_Devaluation == "Taste_Aversion")
#
#   # Return Summary Data
#   return(summary)
# }
#     arrange(RewardName,Day)
#
#   ### Filter relevant Group
#   summary <- summary %>%
#     filter(Experiment_Devaluation == "Taste_Aversion")
#
#   # Return Summary Data
#   return(summary)
# }
#
#
#   ### Filter relevant Group
#   summary <- summary %>%
#     filter(Experiment_Devaluation == "Taste_Aversion")
#
#   # Return Summary Data
#   return(summary)
# }
#
# # Save data for analysis
#   ### Filter relevant Group
#   summary <- summary %>%
#     filter(Experiment_Devaluation == "Taste_Aversion")
#
#   # Return Summary Data
#   return(summary)
# }
#
# # Save data for analysis
# summary <- plot_data(data_path)
#   summary <- summary %>%
#     filter(Experiment_Devaluation == "Taste_Aversion")
#
#   # Return Summary Data
#   return(summary)
# }
#
# # Save data for analysis
# summary <- plot_data(data_path)
# save_path <- here("rawdata", "processed_data", "SKR216_LiCL_InstrumentalAcquisition.csv")
#     filter(Experiment_Devaluation == "Taste_Aversion")
#
#   # Return Summary Data
#   return(summary)
# }
#
# # Save data for analysis
# summary <- plot_data(data_path)
# save_path <- here("rawdata", "processed_data", "SKR216_LiCL_InstrumentalAcquisition.csv")
# write_csv(summary, save_path)
#
#   # Return Summary Data
#   return(summary)
# }
#
# # Save data for analysis
# summary <- plot_data(data_path)
# save_path <- here("rawdata", "processed_data", "SKR216_LiCL_InstrumentalAcquisition.csv")
# write_csv(summary, save_path)
#
#   # Return Summary Data
#   return(summary)
# }
#
# # Save data for analysis
# summary <- plot_data(data_path)
# save_path <- here("rawdata", "processed_data", "SKR216_LiCL_InstrumentalAcquisition.csv")
# write_csv(summary, save_path)
#
# # Plot Data
#   return(summary)
# }
#
# # Save data for analysis
# summary <- plot_data(data_path)
# save_path <- here("rawdata", "processed_data", "SKR216_LiCL_InstrumentalAcquisition.csv")
# write_csv(summary, save_path)
#
# # Plot Data
# scalelims = c(0,35)
# }
#
# # Save data for analysis
# summary <- plot_data(data_path)
# save_path <- here("rawdata", "processed_data", "SKR216_LiCL_InstrumentalAcquisition.csv")
# write_csv(summary, save_path)
#
# # Plot Data
# scalelims = c(0,35)
# scalelims_breaks = 5
#
# # Save data for analysis
# summary <- plot_data(data_path)
# save_path <- here("rawdata", "processed_data", "SKR216_LiCL_InstrumentalAcquisition.csv")
# write_csv(summary, save_path)
#
# # Plot Data
# scalelims = c(0,35)
# scalelims_breaks = 5
#
# # Save data for analysis
# summary <- plot_data(data_path)
# save_path <- here("rawdata", "processed_data", "SKR216_LiCL_InstrumentalAcquisition.csv")
# write_csv(summary, save_path)
#
# # Plot Data
# scalelims = c(0,35)
# scalelims_breaks = 5
#
# SKR216_LiCL_Instrumental_acquisition <- summary %>%
# summary <- plot_data(data_path)
# save_path <- here("rawdata", "processed_data", "SKR216_LiCL_InstrumentalAcquisition.csv")
# write_csv(summary, save_path)
#
# # Plot Data
# scalelims = c(0,35)
# scalelims_breaks = 5
#
# SKR216_LiCL_Instrumental_acquisition <- summary %>%
#   filter(Day <= 6) %>%
# save_path <- here("rawdata", "processed_data", "SKR216_LiCL_InstrumentalAcquisition.csv")
# write_csv(summary, save_path)
#
# # Plot Data
# scalelims = c(0,35)
# scalelims_breaks = 5
#
# SKR216_LiCL_Instrumental_acquisition <- summary %>%
#   filter(Day <= 6) %>%
#   filter(Subject != 29 & Subject != 31) %>%
# write_csv(summary, save_path)
#
# # Plot Data
# scalelims = c(0,35)
# scalelims_breaks = 5
#
# SKR216_LiCL_Instrumental_acquisition <- summary %>%
#   filter(Day <= 6) %>%
#   filter(Subject != 29 & Subject != 31) %>%
#   ggplot(mapping = aes(x = as.factor(Day), y = LP_rate_min, colour = RewardName, group = RewardName, fill = RewardName, shape = RewardName, linetype = RewardName)) +
#
# # Plot Data
# scalelims = c(0,35)
# scalelims_breaks = 5
#
# SKR216_LiCL_Instrumental_acquisition <- summary %>%
#   filter(Day <= 6) %>%
#   filter(Subject != 29 & Subject != 31) %>%
#   ggplot(mapping = aes(x = as.factor(Day), y = LP_rate_min, colour = RewardName, group = RewardName, fill = RewardName, shape = RewardName, linetype = RewardName)) +
#   stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0, size = 0.5, linetype = 1, show.legend = FALSE) +
# # Plot Data
# scalelims = c(0,35)
# scalelims_breaks = 5
#
# SKR216_LiCL_Instrumental_acquisition <- summary %>%
#   filter(Day <= 6) %>%
#   filter(Subject != 29 & Subject != 31) %>%
#   ggplot(mapping = aes(x = as.factor(Day), y = LP_rate_min, colour = RewardName, group = RewardName, fill = RewardName, shape = RewardName, linetype = RewardName)) +
#   stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0, size = 0.5, linetype = 1, show.legend = FALSE) +
#   stat_summary(fun = "mean", geom = "line", size = 0.5) +
# scalelims = c(0,35)
# scalelims_breaks = 5
#
# SKR216_LiCL_Instrumental_acquisition <- summary %>%
#   filter(Day <= 6) %>%
#   filter(Subject != 29 & Subject != 31) %>%
#   ggplot(mapping = aes(x = as.factor(Day), y = LP_rate_min, colour = RewardName, group = RewardName, fill = RewardName, shape = RewardName, linetype = RewardName)) +
#   stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0, size = 0.5, linetype = 1, show.legend = FALSE) +
#   stat_summary(fun = "mean", geom = "line", size = 0.5) +
#   stat_summary(fun = "mean", geom = "point", size = 3) +
# scalelims_breaks = 5
#
# SKR216_LiCL_Instrumental_acquisition <- summary %>%
#   filter(Day <= 6) %>%
#   filter(Subject != 29 & Subject != 31) %>%
#   ggplot(mapping = aes(x = as.factor(Day), y = LP_rate_min, colour = RewardName, group = RewardName, fill = RewardName, shape = RewardName, linetype = RewardName)) +
#   stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0, size = 0.5, linetype = 1, show.legend = FALSE) +
#   stat_summary(fun = "mean", geom = "line", size = 0.5) +
#   stat_summary(fun = "mean", geom = "point", size = 3) +
#   theme_cowplot() +
#
# SKR216_LiCL_Instrumental_acquisition <- summary %>%
#   filter(Day <= 6) %>%
#   filter(Subject != 29 & Subject != 31) %>%
#   ggplot(mapping = aes(x = as.factor(Day), y = LP_rate_min, colour = RewardName, group = RewardName, fill = RewardName, shape = RewardName, linetype = RewardName)) +
#   stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0, size = 0.5, linetype = 1, show.legend = FALSE) +
#   stat_summary(fun = "mean", geom = "line", size = 0.5) +
#   stat_summary(fun = "mean", geom = "point", size = 3) +
#   theme_cowplot() +
#   coord_cartesian(ylim = scalelims) +
# SKR216_LiCL_Instrumental_acquisition <- summary %>%
#   filter(Day <= 6) %>%
#   filter(Subject != 29 & Subject != 31) %>%
#   ggplot(mapping = aes(x = as.factor(Day), y = LP_rate_min, colour = RewardName, group = RewardName, fill = RewardName, shape = RewardName, linetype = RewardName)) +
#   stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0, size = 0.5, linetype = 1, show.legend = FALSE) +
#   stat_summary(fun = "mean", geom = "line", size = 0.5) +
#   stat_summary(fun = "mean", geom = "point", size = 3) +
#   theme_cowplot() +
#   coord_cartesian(ylim = scalelims) +
#   scale_y_continuous(breaks = seq(scalelims[1],scalelims[2],by = scalelims_breaks), expand = c(0.0,0)) +
#   filter(Day <= 6) %>%
#   filter(Subject != 29 & Subject != 31) %>%
#   ggplot(mapping = aes(x = as.factor(Day), y = LP_rate_min, colour = RewardName, group = RewardName, fill = RewardName, shape = RewardName, linetype = RewardName)) +
#   stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0, size = 0.5, linetype = 1, show.legend = FALSE) +
#   stat_summary(fun = "mean", geom = "line", size = 0.5) +
#   stat_summary(fun = "mean", geom = "point", size = 3) +
#   theme_cowplot() +
#   coord_cartesian(ylim = scalelims) +
#   scale_y_continuous(breaks = seq(scalelims[1],scalelims[2],by = scalelims_breaks), expand = c(0.0,0)) +
#   # ggtitle("",subtitle = "") +
#   filter(Subject != 29 & Subject != 31) %>%
#   ggplot(mapping = aes(x = as.factor(Day), y = LP_rate_min, colour = RewardName, group = RewardName, fill = RewardName, shape = RewardName, linetype = RewardName)) +
#   stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0, size = 0.5, linetype = 1, show.legend = FALSE) +
#   stat_summary(fun = "mean", geom = "line", size = 0.5) +
#   stat_summary(fun = "mean", geom = "point", size = 3) +
#   theme_cowplot() +
#   coord_cartesian(ylim = scalelims) +
#   scale_y_continuous(breaks = seq(scalelims[1],scalelims[2],by = scalelims_breaks), expand = c(0.0,0)) +
#   # ggtitle("",subtitle = "") +
#   ylab("Lever presses/min") +
#   ggplot(mapping = aes(x = as.factor(Day), y = LP_rate_min, colour = RewardName, group = RewardName, fill = RewardName, shape = RewardName, linetype = RewardName)) +
#   stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0, size = 0.5, linetype = 1, show.legend = FALSE) +
#   stat_summary(fun = "mean", geom = "line", size = 0.5) +
#   stat_summary(fun = "mean", geom = "point", size = 3) +
#   theme_cowplot() +
#   coord_cartesian(ylim = scalelims) +
#   scale_y_continuous(breaks = seq(scalelims[1],scalelims[2],by = scalelims_breaks), expand = c(0.0,0)) +
#   # ggtitle("",subtitle = "") +
#   ylab("Lever presses/min") +
#   xlab("Day") +
#   stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0, size = 0.5, linetype = 1, show.legend = FALSE) +
#   stat_summary(fun = "mean", geom = "line", size = 0.5) +
#   stat_summary(fun = "mean", geom = "point", size = 3) +
#   theme_cowplot() +
#   coord_cartesian(ylim = scalelims) +
#   scale_y_continuous(breaks = seq(scalelims[1],scalelims[2],by = scalelims_breaks), expand = c(0.0,0)) +
#   # ggtitle("",subtitle = "") +
#   ylab("Lever presses/min") +
#   xlab("Day") +
#   theme(axis.title.x=element_text(face = "bold")) +
#   stat_summary(fun = "mean", geom = "line", size = 0.5) +
#   stat_summary(fun = "mean", geom = "point", size = 3) +
#   theme_cowplot() +
#   coord_cartesian(ylim = scalelims) +
#   scale_y_continuous(breaks = seq(scalelims[1],scalelims[2],by = scalelims_breaks), expand = c(0.0,0)) +
#   # ggtitle("",subtitle = "") +
#   ylab("Lever presses/min") +
#   xlab("Day") +
#   theme(axis.title.x=element_text(face = "bold")) +
#   scale_linetype_manual(name = "", values = linetypes)+
#   stat_summary(fun = "mean", geom = "point", size = 3) +
#   theme_cowplot() +
#   coord_cartesian(ylim = scalelims) +
#   scale_y_continuous(breaks = seq(scalelims[1],scalelims[2],by = scalelims_breaks), expand = c(0.0,0)) +
#   # ggtitle("",subtitle = "") +
#   ylab("Lever presses/min") +
#   xlab("Day") +
#   theme(axis.title.x=element_text(face = "bold")) +
#   scale_linetype_manual(name = "", values = linetypes)+
#   scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
#   theme_cowplot() +
#   coord_cartesian(ylim = scalelims) +
#   scale_y_continuous(breaks = seq(scalelims[1],scalelims[2],by = scalelims_breaks), expand = c(0.0,0)) +
#   # ggtitle("",subtitle = "") +
#   ylab("Lever presses/min") +
#   xlab("Day") +
#   theme(axis.title.x=element_text(face = "bold")) +
#   scale_linetype_manual(name = "", values = linetypes)+
#   scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
#   scale_shape_manual(name = "", values = pointshapes) +
#   coord_cartesian(ylim = scalelims) +
#   scale_y_continuous(breaks = seq(scalelims[1],scalelims[2],by = scalelims_breaks), expand = c(0.0,0)) +
#   # ggtitle("",subtitle = "") +
#   ylab("Lever presses/min") +
#   xlab("Day") +
#   theme(axis.title.x=element_text(face = "bold")) +
#   scale_linetype_manual(name = "", values = linetypes)+
#   scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
#   scale_shape_manual(name = "", values = pointshapes) +
#   scale_fill_manual(name = "", values = fillcolours)
#   scale_y_continuous(breaks = seq(scalelims[1],scalelims[2],by = scalelims_breaks), expand = c(0.0,0)) +
#   # ggtitle("",subtitle = "") +
#   ylab("Lever presses/min") +
#   xlab("Day") +
#   theme(axis.title.x=element_text(face = "bold")) +
#   scale_linetype_manual(name = "", values = linetypes)+
#   scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
#   scale_shape_manual(name = "", values = pointshapes) +
#   scale_fill_manual(name = "", values = fillcolours)
#
#   # ggtitle("",subtitle = "") +
#   ylab("Lever presses/min") +
#   xlab("Day") +
#   theme(axis.title.x=element_text(face = "bold")) +
#   scale_linetype_manual(name = "", values = linetypes)+
#   scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
#   scale_shape_manual(name = "", values = pointshapes) +
#   scale_fill_manual(name = "", values = fillcolours)
#
# SKR216_LiCL_Instrumental_acquisition
#   ylab("Lever presses/min") +
#   xlab("Day") +
#   theme(axis.title.x=element_text(face = "bold")) +
#   scale_linetype_manual(name = "", values = linetypes)+
#   scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
#   scale_shape_manual(name = "", values = pointshapes) +
#   scale_fill_manual(name = "", values = fillcolours)
#
# SKR216_LiCL_Instrumental_acquisition
#
#   xlab("Day") +
#   theme(axis.title.x=element_text(face = "bold")) +
#   scale_linetype_manual(name = "", values = linetypes)+
#   scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
#   scale_shape_manual(name = "", values = pointshapes) +
#   scale_fill_manual(name = "", values = fillcolours)
#
# SKR216_LiCL_Instrumental_acquisition
#
# # Expt3. SKR216 LiCl - Pavlovian Acquisition -----------------------------------------------------------------------
#   theme(axis.title.x=element_text(face = "bold")) +
#   scale_linetype_manual(name = "", values = linetypes)+
#   scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
#   scale_shape_manual(name = "", values = pointshapes) +
#   scale_fill_manual(name = "", values = fillcolours)
#
# SKR216_LiCL_Instrumental_acquisition
#
# # Expt3. SKR216 LiCl - Pavlovian Acquisition -----------------------------------------------------------------------
#
#   scale_linetype_manual(name = "", values = linetypes)+
#   scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
#   scale_shape_manual(name = "", values = pointshapes) +
#   scale_fill_manual(name = "", values = fillcolours)
#
# SKR216_LiCL_Instrumental_acquisition
#
# # Expt3. SKR216 LiCl - Pavlovian Acquisition -----------------------------------------------------------------------
#
# # Define rawdata filepath
#   scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
#   scale_shape_manual(name = "", values = pointshapes) +
#   scale_fill_manual(name = "", values = fillcolours)
#
# SKR216_LiCL_Instrumental_acquisition
#
# # Expt3. SKR216 LiCl - Pavlovian Acquisition -----------------------------------------------------------------------
#
# # Define rawdata filepath
# data_path <- here("rawdata", "SKR216_Pav_Freq_Acquisition.csv")
#   scale_shape_manual(name = "", values = pointshapes) +
#   scale_fill_manual(name = "", values = fillcolours)
#
# SKR216_LiCL_Instrumental_acquisition
#
# # Expt3. SKR216 LiCl - Pavlovian Acquisition -----------------------------------------------------------------------
#
# # Define rawdata filepath
# data_path <- here("rawdata", "SKR216_Pav_Freq_Acquisition.csv")
#
#   scale_fill_manual(name = "", values = fillcolours)
#
# SKR216_LiCL_Instrumental_acquisition
#
# # Expt3. SKR216 LiCl - Pavlovian Acquisition -----------------------------------------------------------------------
#
# # Define rawdata filepath
# data_path <- here("rawdata", "SKR216_Pav_Freq_Acquisition.csv")
#
# # Load and organise data
#
# SKR216_LiCL_Instrumental_acquisition
#
# # Expt3. SKR216 LiCl - Pavlovian Acquisition -----------------------------------------------------------------------
#
# # Define rawdata filepath
# data_path <- here("rawdata", "SKR216_Pav_Freq_Acquisition.csv")
#
# # Load and organise data
# plot_data <- function(data_path) {
# SKR216_LiCL_Instrumental_acquisition
#
# # Expt3. SKR216 LiCl - Pavlovian Acquisition -----------------------------------------------------------------------
#
# # Define rawdata filepath
# data_path <- here("rawdata", "SKR216_Pav_Freq_Acquisition.csv")
#
# # Load and organise data
# plot_data <- function(data_path) {
#
#
# # Expt3. SKR216 LiCl - Pavlovian Acquisition -----------------------------------------------------------------------
#
# # Define rawdata filepath
# data_path <- here("rawdata", "SKR216_Pav_Freq_Acquisition.csv")
#
# # Load and organise data
# plot_data <- function(data_path) {
#
#   ### 1. Prepare Data
# # Expt3. SKR216 LiCl - Pavlovian Acquisition -----------------------------------------------------------------------
#
# # Define rawdata filepath
# data_path <- here("rawdata", "SKR216_Pav_Freq_Acquisition.csv")
#
# # Load and organise data
# plot_data <- function(data_path) {
#
#   ### 1. Prepare Data
#   # Load Data
#
# # Define rawdata filepath
# data_path <- here("rawdata", "SKR216_Pav_Freq_Acquisition.csv")
#
# # Load and organise data
# plot_data <- function(data_path) {
#
#   ### 1. Prepare Data
#   # Load Data
#   full_data <- read_csv(data_path)
# # Define rawdata filepath
# data_path <- here("rawdata", "SKR216_Pav_Freq_Acquisition.csv")
#
# # Load and organise data
# plot_data <- function(data_path) {
#
#   ### 1. Prepare Data
#   # Load Data
#   full_data <- read_csv(data_path)
#
# data_path <- here("rawdata", "SKR216_Pav_Freq_Acquisition.csv")
#
# # Load and organise data
# plot_data <- function(data_path) {
#
#   ### 1. Prepare Data
#   # Load Data
#   full_data <- read_csv(data_path)
#
#   # Check that there are equal numbers of entries per subject/day
#
# # Load and organise data
# plot_data <- function(data_path) {
#
#   ### 1. Prepare Data
#   # Load Data
#   full_data <- read_csv(data_path)
#
#   # Check that there are equal numbers of entries per subject/day
#   full_data %>%
# # Load and organise data
# plot_data <- function(data_path) {
#
#   ### 1. Prepare Data
#   # Load Data
#   full_data <- read_csv(data_path)
#
#   # Check that there are equal numbers of entries per subject/day
#   full_data %>%
#     group_by(Subject, Day) %>%
# plot_data <- function(data_path) {
#
#   ### 1. Prepare Data
#   # Load Data
#   full_data <- read_csv(data_path)
#
#   # Check that there are equal numbers of entries per subject/day
#   full_data %>%
#     group_by(Subject, Day) %>%
#     summarise(n = n()) %>%
#
#   ### 1. Prepare Data
#   # Load Data
#   full_data <- read_csv(data_path)
#
#   # Check that there are equal numbers of entries per subject/day
#   full_data %>%
#     group_by(Subject, Day) %>%
#     summarise(n = n()) %>%
#     spread(Day, n)%>%
