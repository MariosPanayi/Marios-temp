bin_A_data <- cbind(bin_A_freq,bin_A_dur)
return(bin_A_data)
}
# End of function
}
# Extract data
## repeat for each of the 4 possible actions
A1_on <- rawdata$Time[rawdata$A1_On == 1]
A1_off <- rawdata$Time[rawdata$A1_Off == 1]
A1_bin <- coulbourn_actionbin(A1_on, A1_off)
A2_on <- rawdata$Time[rawdata$A2_On == 1]
A2_off <- rawdata$Time[rawdata$A2_Off == 1]
A2_bin <- coulbourn_actionbin(A2_on, A2_off)
A3_on <- rawdata$Time[rawdata$A3_On == 1]
A3_off <- rawdata$Time[rawdata$A3_Off == 1]
A3_bin <- coulbourn_actionbin(A3_on, A3_off)
A4_on <- rawdata$Time[rawdata$A4_On == 1]
A4_off <- rawdata$Time[rawdata$A4_Off == 1]
A4_bin <- coulbourn_actionbin(A4_on, A4_off)
## Combine into a dataframe and rename variables appropriately
data_bin <- cbind(A1_bin,A2_bin,A3_bin,A4_bin)
colnames(data_bin) <- c("A1_freq", "A1_dur","A2_freq", "A2_dur","A3_freq", "A3_dur","A4_freq", "A4_dur")
## Add session/program/subject information
savename <- replicate(length(bin_trial), filename)
subject <- replicate(length(bin_trial), rawdata$Subject[1])
protocol <- replicate(length(bin_trial), rawdata$Protocol[1])
station <- replicate(length(bin_trial), rawdata$Station[1])
run <- replicate(length(bin_trial), rawdata$Run[1])
project <- replicate(length(bin_trial), rawdata$Project[1])
userID <- replicate(length(bin_trial), rawdata$UserID[1])
session <- replicate(length(bin_trial), rawdata$Session[1])
## Combine all the data together
data_bin <- cbind(savename, subject, protocol, station, run, project, userID, session, bin_trial, bin_state, bin_time, bin_timewithin, data_bin)
# convert to dataframe for saving
data_bin <- as.data.frame(data_bin)
## Save as .csv file
# cReate a filenaming system that is identical to the original data but with a prefix that identifies the analysis method
savefilename <- paste("ProcessedTimeBin_",filename, sep = "")
savefilepath <- here(folderpath, savefilename)
write_csv(data_bin, savefilepath)
# Function end
}
coulbourn_processdata_Pavlovian_timebin(filename,folderpath,S,timebase, timebinwidth, nobin, bin, trialstartstate)
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/CoulbournDataANalysis_Frequency_PerTrial_1sBins.R')
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/CoulbournDataExtraction.R')
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/CoulbournDataANalysis_Frequency_PerTrial_1sBins.R')
here(folderpath, "ProcessedTimeBin")
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/CoulbournDataANalysis_Frequency_PerTrial_1sBins.R')
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/CoulbournDataANalysis_Frequency_PerTrial_1sBins.R')
savefolderpath
savefolderpath <- here(folderpath, "Processed_TimeBin")
dir.create(savefolderpath)
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/CoulbournDataANalysis_Frequency_PerTrial_1sBins.R')
source("CoulbournAnalysisFunctions.R")
here()
source(here("scripts", "CoulbournAnalysisFunctions.R"))
source(here("scripts", "CoulbournAnalysisFunctions.R"))
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/MasterAnalysisScript_ConditionedInhibition.R')
listofdatafolders <- c("2_ConditionedReinforcement",
"Acquisition_Day1",
"Acquisition_Day2",
"Acquisition_Day3",
"Acquisition_Day4")
source(here("scripts", "CoulbournAnalysisFunctions.R"))
projectdatafolder <- "2_ConditionedReinforcement"
listofdatafolders <- c("Acquisition_Day1",
"Acquisition_Day2",
"Acquisition_Day3",
"Acquisition_Day4")
source(here("scripts", "CoulbournAnalysisFunctions.R"))
projectdatafolder <- "2_ConditionedReinforcement"
listofdatafolders <- c("Acquisition_Day1",
"Acquisition_Day2",
"Acquisition_Day3")
dir()
length(listofdatafolders)
i = 1
list.files(here(projectdatafolder, listofdatafolders[1]))
listofdatafolders[1]
here(projectdatafolder, listofdatafolders[1])
dir(here(projectdatafolder, listofdatafolders[1]))
here(projectdatafolder, listofdatafolders[1])
here
here()
dir(here(datafoldersinproject,projectdatafolder, listofdatafolders[1]))
datafoldersinproject <- "rawdata\Marios"
dir(here(datafoldersinproject,projectdatafolder, listofdatafolders[1]))
datafoldersinproject <- "rawdata\Marios"
projectdatafolder <- "2_ConditionedReinforcement"
listofdatafolders <- c("Acquisition_Day1",
"Acquisition_Day2",
"Acquisition_Day3")
for (i in c(1:length(listofdatafolders))){
dir(here(datafoldersinproject, projectdatafolder, listofdatafolders[1]))
}
datafoldersinproject
datafoldersinproject <- "rawdata\Marios"
datafoldersinproject <- c("rawdata", "Marios")
projectdatafolder <- "2_ConditionedReinforcement"
listofdatafolders <- c("Acquisition_Day1",
"Acquisition_Day2",
"Acquisition_Day3")
dir(here(datafoldersinproject, projectdatafolder, listofdatafolders[1]))
here(datafoldersinproject, projectdatafolder, listofdatafolders[1])
dir("C:/Users/panayimc/Documents/GitHub/Marios-temp/NIDA_Expts/Experiments")
here(datafoldersinproject, projectdatafolder, listofdatafolders[1])
listofdatafolders <- c("Acquisition_Day1",
"Acquisition_Day2",
"Acquisition_Day3")
dir(here(datafoldersinproject, projectdatafolder, listofdatafolders[1]))
here(datafoldersinproject, projectdatafolder, listofdatafolders[1])
datafoldersinproject <- c("rawdata", "Marios")
projectdatafolder <- "2_ConditionedReinforcement"
listofdatafolders <- c("Acquisition_Day1",
"Acquisition_Day2",
"Acquisition_Day3")
dir(here(datafoldersinproject, projectdatafolder, listofdatafolders[1]))
dir("C:\Users\panayimc\Documents\GitHub\Marios-temp\NIDA_Expts\Experiments\MPNIDA001_Pilots\rawdata\Marios\2_ConditionedReinforcement\Acquisition_Day1")
dir("C:/Users/panayimc/Documents/GitHub/Marios-temp/NIDA_Expts/Experiments/PNIDA001_Pilots/rawdata/Marios/2_ConditionedReinforcement/Acquisition_Day1")
list.files(here(datafoldersinproject, projectdatafolder, listofdatafolders[1]))
list.files(here(datafoldersinproject, projectdatafolder, listofdatafolders[2]))
i = 1
lookup <- here(datafoldersinproject, projectdatafolder, listofdatafolders[i])
list.files(path = lookup)
lookup
list.files(path = lookup, pattern = ".txt")
lookup <- here(datafoldersinproject, projectdatafolder)
list.files(path = lookup, pattern = ".txt")
list.files(path = lookup)
list.files
library(here)
dir
dir()
list.files()
list.files(path = "rawdata")
?list.files
?here
here("scripts", "CoulbournAnalysisFunctions.R")
lookup <- paste(datafoldersinproject, projectdatafolder, listofdatafolders[i], sep = "/")
lookup
paste?
?
d
?paste
lookup <- paste(datafoldersinproject, projectdatafolder, listofdatafolders[i], sep = "/", collapse = NULL)
list.files(path = lookup, pattern = ".txt")
lookup
lookup <- paste(datafoldersinproject, projectdatafolder, listofdatafolders[i], sep = "/", collapse = TRUE)
lookup
lookup <- paste(unlist(datafoldersinproject), projectdatafolder, listofdatafolders[i], sep = "/")
library(here)
source(here("scripts", "CoulbournAnalysisFunctions.R"))
datafoldersinproject <- c("rawdata", "Marios")
projectdatafolder <- "2_ConditionedReinforcement"
listofdatafolders <- c("Acquisition_Day1",
"Acquisition_Day2",
"Acquisition_Day3")
lookup <- paste(unlist(datafoldersinproject), projectdatafolder, listofdatafolders[i], sep = "/")
i = 1
lookup <- paste(unlist(datafoldersinproject), projectdatafolder, listofdatafolders[i], sep = "/")
lookup
lookup <- paste(paste(datafoldersinproject, sep = "/"), projectdatafolder, listofdatafolders[i], sep = "/")
lookup
paste(datafoldersinproject, sep = "/")
datafoldersinproject <- collapse(datafoldersinproject, sep = "/")
datafoldersinproject <- paste(datafoldersinproject, sep = "/", collapse = TRUE)
datafoldersinproject <- paste(datafoldersinproject, collapse = "/")
datafoldersinproject
datafoldersinproject <- c("rawdata", "Marios")
# datafoldersinproject <- paste(datafoldersinproject, collapse = "/")
projectdatafolder <- "2_ConditionedReinforcement"
listofdatafolders <- c("Acquisition_Day1",
"Acquisition_Day2",
"Acquisition_Day3")
lookup <- paste(datafoldersinproject, projectdatafolder, listofdatafolders[i], sep = "/", collapse = "/")
lookup
datafoldersinproject <- c("rawdata", "Marios")
datafoldersinproject <- paste(datafoldersinproject, collapse = "/")
projectdatafolder <- "2_ConditionedReinforcement"
listofdatafolders <- c("Acquisition_Day1",
"Acquisition_Day2",
"Acquisition_Day3")
lookup <- paste(datafoldersinproject, projectdatafolder, listofdatafolders[i], sep = "/")
list.files(path = lookup, pattern = ".txt")
# Load Packagaes ----------------------------------------------------------
## Packages for data organisation and plotting
library(tidyverse)
library(knitr)
# Package for relative file paths
library(here)
# Load Analysis Functions
source(here("scripts", "CoulbournAnalysisFunctions.R"))
source(here("scripts", "CoulbournAnalysisFunctions.R"))
# Identify files to analyze
# Can't use here() function effectively here, so have to create relative file paths
## COllapses multiple subfolders if needed
datafoldersinproject1 <- c("rawdata")
datafoldersinproject2 <-c("Marios")
## Project specific folder
projectdatafolder <- c("2_ConditionedReinforcement")
## Final level of folders contianing the relevant .txt Coulbourn files
listofdatafolders <- c("Acquisition_Day1",
"Acquisition_Day2",
"Acquisition_Day3")
#  extract data filenames, only .txt --------------------------------------
datafilepaths <-0
for (i in c(1:length(listofdatafolders))){
lookup <- paste(datafoldersinproject1, datafoldersinproject2, projectdata_folder, listofdatafolders[i], sep = "/")
datafilepaths <- list.files(path = lookup, pattern = ".txt")
for (j in c(1:length(datafilepaths))) {
# For each raw.txt file split up the data into indivudal subjects .csv files for subsequent analysis
folderpath <- here(datafoldersinproject1, datafoldersinproject2,projectdatafolder,listofdatafolders[i])
filename <- datafilepaths[j]
## Run Function
coulbourn_rawdatasplit(filename,folderpath)
}
}
## Project specific folder
projectdatafolder <- c("2_ConditionedReinforcement")
# Can't use here() function effectively here, so have to create relative file paths
## COllapses multiple subfolders if needed
datafoldersinproject1 <- c("rawdata")
datafoldersinproject2 <-c("Marios")
## Project specific folder
projectdatafolder <- c("2_ConditionedReinforcement")
## Final level of folders contianing the relevant .txt Coulbourn files
listofdatafolders <- c("Acquisition_Day1",
"Acquisition_Day2",
"Acquisition_Day3")
datafilepaths <-0
for (i in c(1:length(listofdatafolders))){
lookup <- paste(datafoldersinproject1, datafoldersinproject2, projectdata_folder, listofdatafolders[i], sep = "/")
datafilepaths <- list.files(path = lookup, pattern = ".txt")
for (j in c(1:length(datafilepaths))) {
# For each raw.txt file split up the data into indivudal subjects .csv files for subsequent analysis
folderpath <- here(datafoldersinproject1, datafoldersinproject2,projectdatafolder,listofdatafolders[i])
filename <- datafilepaths[j]
## Run Function
coulbourn_rawdatasplit(filename,folderpath)
}
}
#  extract data filenames, only .txt --------------------------------------
datafilepaths <-0
for (i in c(1:length(listofdatafolders))){
lookup <- paste(datafoldersinproject1, datafoldersinproject2, projectdatafolder, listofdatafolders[i], sep = "/")
datafilepaths <- list.files(path = lookup, pattern = ".txt")
for (j in c(1:length(datafilepaths))) {
# For each raw.txt file split up the data into indivudal subjects .csv files for subsequent analysis
folderpath <- here(datafoldersinproject1, datafoldersinproject2,projectdatafolder,listofdatafolders[i])
filename <- datafilepaths[j]
## Run Function
coulbourn_rawdatasplit(filename,folderpath)
}
}
#  extract processed data filenames, only .csv and put them into a --------
########## Set parameters ############
## List of states
S = c("ITI" = 1,
"PreCS" = 2,
"Click" = 3,
"Noise" = 4,
"Tone" = 5,
"Siren" = 6,
"Pelletx1" = 7,
"Pelletx2" = 8,
"Pelletx0" = 9,
"End" = 10)
## Time base the linc was set to, in ms
timebase = 20
## Time bins to analyze each state in, in s
timebinwidth = 1
## States to bin and which not to bin
nobin = c(S["ITI"], S["End"])
bin = c(S["PreCS"], S["Click"], S["Noise"], S["Tone"], S["Siren"], S["Pelletx1"], S["Pelletx2"], S["Pelletx0"])
## Identify state that trials start in, usually the ITI ;)
trialstartstate = S["ITI"]
########## Run Analysis ############
for (i in c(1:length(listofdatafolders))){
lookup <- paste(datafoldersinproject1, datafoldersinproject2, projectdata_folder, listofdatafolders[i], sep = "/")
datafilepaths <- list.files(path = lookup, pattern = ".csv")
for (j in c(1:length(datafilepaths))) {
# For each raw.txt file split up the data into indivudal subjects .csv files for subsequent analysis
folderpath <- here(datafoldersinproject1, datafoldersinproject2,projectdatafolder,listofdatafolders[i])
filename <- datafilepaths[j]
## Run Function - N.B. Warnings will appear to tell you that the new directory for data storage already exists. Safe to ignore.
coulbourn_processdata_Pavlovian_timebin(filename,folderpath,S,timebase, timebinwidth, nobin, bin, trialstartstate)
}
}
# Combine all data --------------------------------------------------------
#create list of all filenames
filestojoin <- "0"
for (i in c(1:length(listofdatafolders))){
lookup <- paste(datafoldersinproject1, datafoldersinproject2, projectdata_folder, listofdatafolders[i],"Processed_TimeBin",  sep = "/")
datafilepaths <- list.files(path = lookup, pattern = ".csv", full.names = TRUE)
filestojoin <- c(filestojoin, datafilepaths)
# for (j in c(1:length(datafilepaths))) {
#
#   # For each processed .csv file, load the data and then join it together
#   filename <- datafilepaths[j]
#   ## Load and analyse
}
#delete initialising variable
filestojoin <- filestojoin[-1]
## Load each table of data and join into a single
for (i in c(1:length(filestojoin))){
if (i == 1){
rawdata <- read_csv(filestojoin[i])
} else {
tempdata <- read_csv(filestojoin[i])
rawdata <- full_join(rawdata,tempdata)
}
}
## List of states
S = c("ITI" = 1,
"PreCS" = 2,
"Click" = 3,
"Noise" = 4,
"Tone" = 5,
"Siren" = 6,
"Pelletx1" = 7,
"Pelletx2" = 8,
"Pelletx0" = 9,
"End" = 10)
## Time base the linc was set to, in ms
timebase = 20
## Time bins to analyze each state in, in s
timebinwidth = 1
## States to bin and which not to bin
nobin = c(S["ITI"], S["End"])
bin = c(S["PreCS"], S["Click"], S["Noise"], S["Tone"], S["Siren"], S["Pelletx1"], S["Pelletx2"], S["Pelletx0"])
## Identify state that trials start in, usually the ITI ;)
trialstartstate = S["ITI"]
for (i in c(1:length(listofdatafolders))){
lookup <- paste(datafoldersinproject1, datafoldersinproject2, projectdata_folder, listofdatafolders[i], sep = "/")
datafilepaths <- list.files(path = lookup, pattern = ".csv")
for (j in c(1:length(datafilepaths))) {
# For each raw.txt file split up the data into indivudal subjects .csv files for subsequent analysis
folderpath <- here(datafoldersinproject1, datafoldersinproject2,projectdatafolder,listofdatafolders[i])
filename <- datafilepaths[j]
## Run Function - N.B. Warnings will appear to tell you that the new directory for data storage already exists. Safe to ignore.
coulbourn_processdata_Pavlovian_timebin(filename,folderpath,S,timebase, timebinwidth, nobin, bin, trialstartstate)
}
}
########## Run Analysis ############
for (i in c(1:length(listofdatafolders))){
lookup <- paste(datafoldersinproject1, datafoldersinproject2, projectdatafolder, listofdatafolders[i], sep = "/")
datafilepaths <- list.files(path = lookup, pattern = ".csv")
for (j in c(1:length(datafilepaths))) {
# For each raw.txt file split up the data into indivudal subjects .csv files for subsequent analysis
folderpath <- here(datafoldersinproject1, datafoldersinproject2,projectdatafolder,listofdatafolders[i])
filename <- datafilepaths[j]
## Run Function - N.B. Warnings will appear to tell you that the new directory for data storage already exists. Safe to ignore.
coulbourn_processdata_Pavlovian_timebin(filename,folderpath,S,timebase, timebinwidth, nobin, bin, trialstartstate)
}
}
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/MasterAnalysisScript_ConditionedReinforcement.R')
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/MasterAnalysisScript_ConditionedReinforcement.R')
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/MasterAnalysisScript_ConditionedReinforcement.R')
# Combine all data --------------------------------------------------------
#create list of all filenames
filestojoin <- "0"
for (i in c(1:length(listofdatafolders))){
lookup <- paste(datafoldersinproject1, datafoldersinproject2, projectdata_folder, listofdatafolders[i],"Processed_TimeBin",  sep = "/")
datafilepaths <- list.files(path = lookup, pattern = ".csv", full.names = TRUE)
filestojoin <- c(filestojoin, datafilepaths)
# for (j in c(1:length(datafilepaths))) {
#
#   # For each processed .csv file, load the data and then join it together
#   filename <- datafilepaths[j]
#   ## Load and analyse
}
#delete initialising variable
filestojoin <- filestojoin[-1]
## Load each table of data and join into a single
for (i in c(1:length(filestojoin))){
if (i == 1){
rawdata <- read_csv(filestojoin[i])
} else {
tempdata <- read_csv(filestojoin[i])
rawdata <- full_join(rawdata,tempdata)
}
}
paste(datafoldersinproject1, datafoldersinproject2, projectdata_folder, listofdatafolders[i],"Processed_TimeBin",  sep = "/")
# Combine all data --------------------------------------------------------
#create list of all filenames
filestojoin <- "0"
for (i in c(1:length(listofdatafolders))){
lookup <- paste(datafoldersinproject1, datafoldersinproject2, projectdatafolder, listofdatafolders[i],"Processed_TimeBin",  sep = "/")
datafilepaths <- list.files(path = lookup, pattern = ".csv", full.names = TRUE)
filestojoin <- c(filestojoin, datafilepaths)
# for (j in c(1:length(datafilepaths))) {
#
#   # For each processed .csv file, load the data and then join it together
#   filename <- datafilepaths[j]
#   ## Load and analyse
}
#delete initialising variable
filestojoin <- filestojoin[-1]
## Load each table of data and join into a single
for (i in c(1:length(filestojoin))){
if (i == 1){
rawdata <- read_csv(filestojoin[i])
} else {
tempdata <- read_csv(filestojoin[i])
rawdata <- full_join(rawdata,tempdata)
}
}
# Recode States to meaningful variables -----------------------------------
## Solution: create a counterbalancing data frame and then inner_join() with the rawdata to match all relevant rows on Subject[Make sure subject is labelled the same in both tables]
counterbalancing_subjects <- c("1_____" = "A",
"2_____" = "B",
"3_____" = "C",
"4_____" = "D",
"5_____" = "A",
"6_____" = "B",
"26____" = "A",
"27____" = "B",
"28____" = "C",
"29____" = "D",
"30____" = "A",
"31____" = "B",
"7_____" = "C",
"8_____" = "D",
"32____" = "C",
"33____" = "D")
relabelStates <- S = c("PreCS" = 2,
"Click" = 3,
"Noise" = 4,
"Tone" = 5,
"Siren" = 6,
"Pelletx1" = 7,
"Pelletx2" = 8,
"Pelletx0" = 9)
relabelPeriods <- S = c("Pre" = 2,
"CS" = 3,
"CS" = 4,
"CS" = 5,
"CS" = 6,
"Post" = 7,
"Post" = 8,
"Post" = 9)
counterbalancing_cues <- c("A++--" = "Click",
"B+-" = "Noise",
"C++" = "Tone",
"D+" = "Siren")
View(rawdata)
lookup_counterbalancing <- data.frame(subject, counterbalancing)
# Recode States to meaningful variables -----------------------------------
## Solution: create a counterbalancing data frame and then inner_join() with the rawdata to match all relevant rows on Subject[Make sure subject is labelled the same in both tables]
subject <- c("1_____",
"2_____",
"3_____",
"4_____",
"5_____",
"6_____",
"26____",
"27____",
"28____",
"29____",
"30____",
"31____",
"7_____",
"8_____",
"32____",
"33____")
counterbalancing <- c("A",
"B",
"C",
"D",
"A",
"B",
"A",
"B",
"C",
"D",
"A",
"B",
"C",
"D",
"C",
"D")
lookup_counterbalancing <- data.frame(subject, counterbalancing)
View(lookup_counterbalancing)
inner_join(temp, lookup_counterbalancing)
inner_join(tempdata, lookup_counterbalancing)
a <- inner_join(tempdata, lookup_counterbalancing)
View(a)
a <- inner_join(rawdata, lookup_counterbalancing)
View(a)
unique(rawdata$subject)
unique(rawdata$subject)
unique(rawdata$subject)
unique(a$subject)
# Recode States to meaningful variables -----------------------------------
## Solution: create a counterbalancing data frame and then inner_join() with the rawdata to match all relevant rows on Subject[Make sure subject is labelled the same in both tables]
subject <- c("9_____",
"10____",
"11____",
"12____",
"13____",
"14____",
"34____",
"35____",
"36____",
"37____",
"38____",
"39____",
"15____",
"16____",
"40____",
"41____")
a <- inner_join(rawdata, lookup_counterbalancing)
