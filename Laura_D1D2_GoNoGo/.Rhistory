theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-0,1.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
# scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
# scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
# scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
Proportion_visitBothLevers
Proportion_visitBothLevers <- rawdata %>%
na.omit() %>%
ggplot(mapping = aes(x = as.factor(RewardSize), y = Prop_Mag, group = Condition, colour = Condition, fill = Condition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = SubjID), colour = "black") +
geom_line(aes(group = SubjID), colour = "black") +
# geom_line(aes(group = subject), colour = Black) +
facet_wrap(~Drug,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,0.1)) +
ggtitle("Proportion of errors visiting either lever") + xlab("Condition ") + ylab("Proportion of error trials") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-0,1.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
# scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
# scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
# scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
Proportion_visitBothLevers
Proportion_visitBothLevers <- rawdata %>%
na.omit() %>%
ggplot(mapping = aes(x = as.factor(Drug), y = Prop_Mag, group = Condition, colour = Condition, fill = Condition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = SubjID), colour = "black") +
geom_line(aes(group = SubjID), colour = "black") +
# geom_line(aes(group = subject), colour = Black) +
facet_wrap(~RewardSize,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,0.1)) +
ggtitle("Proportion of errors visiting either lever") + xlab("Condition ") + ylab("Proportion of error trials") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-0,1.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
# scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
# scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
# scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
Proportion_visitBothLevers
Proportion_visitBothLevers <- rawdata %>%
na.omit() %>%
ggplot(mapping = aes(x = as.factor(Drug), y = Prop_Slever, group = Condition, colour = Condition, fill = Condition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = SubjID), colour = "black") +
geom_line(aes(group = SubjID), colour = "black") +
# geom_line(aes(group = subject), colour = Black) +
facet_wrap(~RewardSize,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,0.1)) +
ggtitle("Proportion of errors visiting either lever") + xlab("Condition ") + ylab("Proportion of error trials") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-0,1.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
# scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
# scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
# scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
Proportion_visitBothLevers
Proportion_visitBothLevers <- rawdata %>%
na.omit() %>%
ggplot(mapping = aes(x = as.factor(Drug), y = Prop_Llever, group = Condition, colour = Condition, fill = Condition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = SubjID), colour = "black") +
geom_line(aes(group = SubjID), colour = "black") +
# geom_line(aes(group = subject), colour = Black) +
facet_wrap(~RewardSize,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,0.1)) +
ggtitle("Proportion of errors visiting either lever") + xlab("Condition ") + ylab("Proportion of error trials") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-0,1.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
# scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
# scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
# scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
Proportion_visitBothLevers
Proportion_visitBothLevers <- rawdata %>%
na.omit() %>%
ggplot(mapping = aes(x = as.factor(Drug), y = Prop_Mag, group = Condition, colour = Condition, fill = Condition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = SubjID), colour = "black") +
geom_line(aes(group = SubjID), colour = "black") +
# geom_line(aes(group = subject), colour = Black) +
facet_wrap(~RewardSize,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,0.1)) +
ggtitle("Proportion of errors visiting either lever") + xlab("Condition ") + ylab("Proportion of error trials") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-0,1.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
# scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
# scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
# scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
Proportion_visitBothLevers
Proportion_visitBothLevers <- rawdata %>%
na.omit() %>%
ggplot(mapping = aes(x = as.factor(Drug), y = Prop_Middle, group = Condition, colour = Condition, fill = Condition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = SubjID), colour = "black") +
geom_line(aes(group = SubjID), colour = "black") +
# geom_line(aes(group = subject), colour = Black) +
facet_wrap(~RewardSize,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,0.1)) +
ggtitle("Proportion of errors visiting either lever") + xlab("Condition ") + ylab("Proportion of error trials") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-0,1.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
# scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
# scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
# scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
Proportion_visitBothLevers
colnames(rawdata)
Proportion_visitBothLevers <- rawdata %>%
na.omit() %>%
ggplot(mapping = aes(x = as.factor(Drug), y = Prop_Mag, group = Condition, colour = Condition, fill = Condition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = SubjID), colour = "black") +
geom_line(aes(group = SubjID), colour = "black") +
# geom_line(aes(group = subject), colour = Black) +
facet_wrap(~RewardSize,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,0.1)) +
ggtitle("Proportion of errors visiting either lever") + xlab("Condition ") + ylab("Proportion of error trials") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-0,1.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
# scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
# scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
# scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
Proportion_visitBothLevers
Proportion_visitBothLevers <- rawdata %>%
na.omit() %>%
ggplot(mapping = aes(x = as.factor(Drug), y = Prop_BothLevers, group = Condition, colour = Condition, fill = Condition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = SubjID), colour = "black") +
geom_line(aes(group = SubjID), colour = "black") +
# geom_line(aes(group = subject), colour = Black) +
facet_wrap(~RewardSize,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,0.1)) +
ggtitle("Proportion of errors visiting either lever") + xlab("Condition ") + ylab("Proportion of error trials") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-0,1.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
# scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
# scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
# scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
Proportion_visitBothLevers
Proportion_visitBothLevers <- rawdata %>%
na.omit() %>%
ggplot(mapping = aes(x = as.factor(Drug), y = Prop_LeverOrMag, group = Condition, colour = Condition, fill = Condition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = SubjID), colour = "black") +
geom_line(aes(group = SubjID), colour = "black") +
# geom_line(aes(group = subject), colour = Black) +
facet_wrap(~RewardSize,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,0.1)) +
ggtitle("Proportion of errors visiting either lever") + xlab("Condition ") + ylab("Proportion of error trials") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-0,1.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
# scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
# scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
# scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
Proportion_visitBothLevers
rawdata <- rawdata %>%
mutate(Prop_NotLevers = 1- Prop_BothLevers,
Prop_NotLeversOrMag = 1- Prop_LeverOrMag)
widedata <- rawdata %>%
pivot_wider(names_from = Condition)
view(widedata)
view(rawdata)
widedata <- rawdata %>%
pivot_wider(names_from = Condition, values_from = c(5:19))
view(widedata)
widedata <- rawdata %>%
select(-Condition) %>%
pivot_wider(names_from = c(Drug, RewardSize), names_sep = "_", values_from = c(5:19))
widedata <- rawdata %>%
select(-Condition) %>%
pivot_wider(names_from = c(Drug, RewardSize), names_sep = "_", values_from = c(4:18))
view(widedata)
testsubjectdata <- widedata$SubjID[1]
testsubjectdata <- widedata$SubjID[1,]
testsubjectdata <- widedata$SubjID[, 1]
testsubjectdata <- widedata[1,]
View(testsubjectdata)
colnames(testsubjectdata)
view(rawdata)
colnames(rawdata)
rawdata <- rawdata %>%
mutate(Prop_NotLevers = 1- Prop_BothLevers,
Prop_NotLeversOrMag = 1- Prop_LeverOrMag,
Num_NotLevers = Num_ErrorTialsTotal - Num__BothLevers,
Num_NotLeverOrMag = Num_ErrorTialsTotal - Num_ErrorTialsLeverOrMag)
data_long_LeversOrMag <- rawdata %>%
select(SubjID,Drug,RewardSize,Prop_NotLevers,Prop_NotLeversOrMag, Num_NotLevers, Num_NotLeverOrMag)
view(data_long_LeversOrMag)
data_wide_LeversOrMag <- rawdata %>%
pivot_wider(names_from = c(Drug, RewardSize), names_sep = "_", values_from = c(4:7))
testsubjectdata <- data_wide_LeversOrMag[1,]
testsubjectdata
data_wide_LeversOrMag <- rawdata %>%
pivot_wider(names_from = c(Drug, RewardSize), names_sep = "_", values_from = c(4:7))
testsubjectdata <- data_wide_LeversOrMag[1,]
testsubjectdata
View(data_wide_LeversOrMag)
data_long_LeversOrMag <- rawdata %>%
select(SubjID,Drug,RewardSize,Prop_NotLevers,Prop_NotLeversOrMag, Num_NotLevers, Num_NotLeverOrMag)
data_wide_LeversOrMag <- rawdata %>%
pivot_wider(names_from = c(Drug, RewardSize), names_sep = "_", values_from = c(4:7))
testsubjectdata <- data_wide_LeversOrMag[1,]
testsubjectdata
data_wide_LeversOrMag <- data_long_LeversOrMag %>%
pivot_wider(names_from = c(Drug, RewardSize), names_sep = "_", values_from = c(4:7))
testsubjectdata <- data_wide_LeversOrMag[1,]
testsubjectdata
View(Proportion_visitBothLevers)
view(testsubjectdata)
data_wide_LeversOrMag <- data_long_LeversOrMag %>%
pivot_wider(names_from = c(Drug, RewardSize), names_sep = "_", values_from = c(4:7))
testsubjectdata <- data_wide_LeversOrMag[1,]
view(testsubjectdata)
data_long_LeversOrMag <- rawdata %>%
select(SubjID,Drug,RewardSize, Num_NotLevers, Num_NotLeverOrMag)
data_wide_LeversOrMag <- data_long_LeversOrMag %>%
pivot_wider(names_from = c(Drug, RewardSize), names_sep = "_", values_from = c(4:7))
testsubjectdata <- data_wide_LeversOrMag[1,]
data_wide_LeversOrMag <- data_long_LeversOrMag %>%
pivot_wider(names_from = c(Drug, RewardSize), names_sep = "_", values_from = c(4:7))
testsubjectdata <- data_wide_LeversOrMag[1,]
view(testsubjectdata)
data_long_LeversOrMag <- rawdata %>%
select(SubjID,Drug,RewardSize, Num_NotLevers, Num_NotLeverOrMag)
data_wide_LeversOrMag <- data_long_LeversOrMag %>%
pivot_wider(names_from = c(Drug, RewardSize), names_sep = "_", values_from = c(4:7))
testsubjectdata <- data_wide_LeversOrMag[1,]
view(data_long_LeversOrMag)
data_wide_LeversOrMag <- data_long_LeversOrMag %>%
pivot_wider(names_from = c(Drug, RewardSize), names_sep = "_", values_from = c(4:5))
testsubjectdata <- data_wide_LeversOrMag[1,]
view(testsubjectdata)
data_long_LeversOrMag <- rawdata %>%
select(SubjID,Drug,RewardSize, Num_NotLevers, Num__BothLevers)
data_wide_LeversOrMag <- data_long_LeversOrMag %>%
pivot_wider(names_from = c(Drug, RewardSize), names_sep = "_", values_from = c(4:5))
testsubjectdata <- data_wide_LeversOrMag[1,]
view(testsubjectdata)
data_long_LeversOrMag <- rawdata %>%
select(SubjID,Drug,RewardSize, Num__BothLevers,  Num_NotLevers)
data_wide_LeversOrMag <- data_long_LeversOrMag %>%
pivot_wider(names_from = c(Drug, RewardSize), names_sep = "_", values_from = c(4:5))
testsubjectdata <- data_wide_LeversOrMag[1,]
view(testsubjectdata)
testsubjectdata <- data_wide_LeversOrMag[1,2:9]
view(testsubjectdata)
?tidy
data_long_LeversOrMag <- rawdata %>%
select(SubjID,Drug,RewardSize, Num__BothLevers,  Num_NotLevers)
view(data_long_LeversOrMag)
colnames(data_long_LeversOrMag)
rawdata(view)
view(rawdata)
data_long_LeversOrMag <- rawdata %>%
select(SubjID,Condition, Num__BothLevers,  Num_NotLevers)
colnames(data_long_LeversOrMag)
chisquaretest_data<- data_long_LeversOrMag %>%
group_by(Subject)
chisquaretest_data
data_long_LeversOrMag
chisquaretest_data<- data_long_LeversOrMag %>%
group_by(Subject)
chisquaretest_data
chisquaretest_data <- data_long_LeversOrMag %>%
group_by(Subject)
chisquaretest_data <- data_long_LeversOrMag %>%
group_by(SubjID)
tidy(chisq.test()
)
##### Load relevant packages ----
## Packages for data organisation and plotting
library(tidyverse)
library(knitr)
library(data.table)
# Package for relative file paths
library(here)
# Pretty Plot Stuff
library(ggpubr)
library(cowplot)
library(ggsignif)
library(patchwork)
library(RColorBrewer)
## Packages for Data analysis
library(afex)
afex_options(emmeans_model = "multivariate")# use multivariate model for all follow-up tests.
library(emmeans)
# Packages for markdown
# install.packages("devtools")
# devtools::install_github("crsh/papaja")
# library(papaja)
# library(knitr)
# remotes::install_github("noamross/redoc")
# library(redoc)
library(broom)
chisquaretest_data <- data_long_LeversOrMag %>%
group_by(SubjID) %>%
tidy(chisq.test())
chisquaretest_data <- data_long_LeversOrMag %>%
group_by(SubjID)
chisquaretest_data
chisquaretest_data <- data_long_LeversOrMag %>%
group_by(SubjID) %>%
do(tidy(chisq.test()))
data_long_LeversOrMag <- rawdata %>%
select(SubjID,Condition, Num__BothLevers,  Num_NotLevers) %>%
pivot_longer(cols("Num__BothLevers","Num_NotLevers"), names_to = "Choice", values_to = "counts")
data_long_LeversOrMag <- rawdata %>%
select(SubjID,Condition, Num__BothLevers,  Num_NotLevers) %>%
pivot_longer(cols(Num__BothLevers,Num_NotLevers), names_to = "Choice", values_to = "counts")
data_long_LeversOrMag <- %>% data_long_LeversOrMag %>%
pivot_longer(cols(Num__BothLevers,Num_NotLevers), names_to = "Choice", values_to = "counts")
view(rawdata)
colnames(rawdata)
rawdata <- rawdata %>%
mutate(Prop_NotLevers = 1- Prop_BothLevers,
Prop_NotLeversOrMag = 1- Prop_LeverOrMag,
Num_NotLevers = Num_ErrorTialsTotal - Num__BothLevers,
Num_NotLeverOrMag = Num_ErrorTialsTotal - Num_ErrorTialsLeverOrMag)
rawdata <- rawdata %>%
mutate(Prop_NotLevers = 1- Prop_BothLevers,
Prop_NotLeversOrMag = 1- Prop_LeverOrMag,
Num_NotLevers = Num_ErrorTialsTotal - Num__BothLevers,
Num_NotLeverOrMag = Num_ErrorTialsTotal - Num_ErrorTialsLeverOrMag)
data_long_LeversOrMag <- rawdata %>%
select(SubjID,Condition, Num__BothLevers,  Num_NotLevers)
data_long_LeversOrMag <- data_long_LeversOrMag %>%
pivot_longer(cols(Num__BothLevers,Num_NotLevers), names_to = "Choice", values_to = "counts")
data_long_LeversOrMag <- data_long_LeversOrMag %>%
pivot_longer(cols("Num__BothLevers","Num_NotLevers"), names_to = "Choice", values_to = "counts")
data_long_LeversOrMag <- data_long_LeversOrMag %>%
pivot_longer(cols("Num__BothLevers","Num_NotLevers"), names_to = "Choice", values_to = "counts")
data_long_LeversOrMag
data_long_LeversOrMag <- data_long_LeversOrMag %>%
pivot_longer(cols("Num__BothLevers ","Num_NotLevers"), names_to = "Choice", values_to = "counts")
data_long_LeversOrMag <- data_long_LeversOrMag %>%
pivot_longer(cols = ("Num__BothLevers","Num_NotLevers"), names_to = "Choice", values_to = "counts")
data_long_LeversOrMag <- data_long_LeversOrMag %>%
pivot_longer(cols = c("Num__BothLevers","Num_NotLevers"), names_to = "Choice", values_to = "counts")
data_long_LeversOrMag
chisquaretest_data <- data_long_LeversOrMag %>%
group_by(SubjID) %>%
do(tidy(chisq.test(.$counts, list(.$Condition, .$Choice))))
data_long_LeversOrMag <- rawdata %>%
select(SubjID,Condition, Num__BothLevers,  Num_NotLevers)
chisquaretest_data <- data_long_LeversOrMag %>%
group_by(SubjID) %>%
do(tidy(chisq.test())))
chisquaretest_data <- data_long_LeversOrMag %>%
group_by(SubjID) %>%
do(tidy(chisq.test()))
data_long_LeversOrMag <- rawdata %>%
select(SubjID,Condition, Num__BothLevers,  Num_NotLevers)
chisquaretest_data <- data_long_LeversOrMag %>%
group_by(SubjID) %>%
chisq.test()
chisquaretest_data <- data_long_LeversOrMag %>%
group_by(SubjID) %>%
chisq.test(chisquaretest_data)
chisquaretest_data <- data_long_LeversOrMag %>%
group_by(SubjID) %>%
chisquaretest_data1 <- chisquaretest_data[SubjID == 1]
chisquaretest_data <- data_long_LeversOrMag %>%
group_by(SubjID)
chisquaretest_data1 <- chisquaretest_data[SubjID == 1]
chisquaretest_data1 <- data_long_LeversOrMag[SubjID == 1]
chisquaretest_data1
chisquaretest_data1 <- data_long_LeversOrMag[SubjID == 1] %>% select(-SubjID)
chisquaretest_data1
chisq.test(chisquaretest_data1)
chisquaretest_data1
chisq.test(as.table(chisquaretest_data1))
chisq.test(as.matrix(chisquaretest_data1))
as.matrix(chisquaretest_data1)
chisquaretest_data1 <- data_long_LeversOrMag[SubjID == 1] %>% select(-SubjID, -COndition)
chisquaretest_data1 <- data_long_LeversOrMag[SubjID == 1] %>% select(-SubjID, -Condition)
chisq.test(as.matrix(chisquaretest_data1))
chisq.test(as.data.table(chisquaretest_data1))
chisquaretest_data1 <- data_long_LeversOrMag[SubjID == 1] %>% select(-SubjID)
chisq.test(as.data.table(chisquaretest_data1))
chisquaretest_data1 <- data_long_LeversOrMag[SubjID == 1] %>% select(-SubjID, -Condition)
chisq.test(as.data.table(chisquaretest_data1))
rawdata <- rawdata %>%
mutate(Prop_NotLevers = 1- Prop_BothLevers,
Prop_NotLeversOrMag = 1- Prop_LeverOrMag,
Num_NotLevers = Num_ErrorTialsTotal - Num__BothLevers,
Num_NotLeverOrMag = Num_ErrorTialsTotal - Num_ErrorTialsLeverOrMag)
data_long_LeversOrMag <- rawdata %>%
select(SubjID,Condition, Num_ErrorTialsLeverOrMag,  Num_NotLeverOrMag)
chisquaretest_data <- data_long_LeversOrMag %>%
group_by(SubjID)
chisquaretest_data1 <- data_long_LeversOrMag[SubjID == 1] %>% select(-SubjID, -Condition)
chisq.test(as.data.table(chisquaretest_data1))
as.data.table(chisquaretest_data1)
chisquaretest_data <- data_long_LeversOrMag %>%
group_by(SubjID) %>%
do(tidy(chisq.test(.$Num_ErrorTialsLeverOrMag, .$Num_NotLeverOrMag)))
chisquaretest_data
data_long_LeversOrMag
chisquaretest_data <- rawdata %>%
group_by(SubjID) %>%
do(tidy(chisq.test(.$Num_ErrorTialsLeverOrMag, .$Num_NotLeverOrMag)))
chisquaretest_data
chisquaretests_leverormag <- rawdata %>%
group_by(SubjID) %>%
do(tidy(chisq.test(.$Num_ErrorTialsLeverOrMag, .$Num_NotLeverOrMag)))
chisquaretests_leverormag
use warnings()
warnings()
set.seed(1)
data.frame(partido=sample(c("PRI", "PAN"), 100, 0.6),
genero=sample(c("H", "M"), 100, 0.7),
GM=sample(c("Bajo", "Muy bajo"), 100, 0.8)) -> foo
foo
foo %>%
group_by(GM) %>%
summarise(pvalue=chisq.test(.$partido, .$genero)$p.value)
foo %>%
filter(GM=="Bajo") %$%
table(partido, genero) %>%
chisq.test()
foo %>%
filter(GM=="Muy bajo") %$%
table(partido, genero) %>% chisq.test()
foo %>%
group_by(GM) %>%
summarise(pvalue= chisq.test(partido, genero)$p.value)
chisquaretests_leverormag <- rawdata %>%
group_by(SubjID) %>%
do(tidy(chisq.test(Num_ErrorTialsLeverOrMag, Num_NotLeverOrMag)))
chisquaretests_leverormag <- rawdata %>%
group_by(SubjID) %>%
summarise(pvalue= chisq.test(Num_ErrorTialsLeverOrMag, Num_NotLeverOrMag)$p.value)
chisquaretests_leverormag
chisquaretests_leverormag <- rawdata %>%
group_by(SubjID) %>%
summarise(pvalue= chisq.test(Num_ErrorTialsLeverOrMag, Num_NotLeverOrMag))
chisquaretests_leverormag
chisquaretests_leverormag <- rawdata %>%
group_by(SubjID) %>%
summarise(pvalue= chisq.test(Num_ErrorTialsLeverOrMag, Num_NotLeverOrMag))
chisquaretests_leverormag <- rawdata %>%
group_by(SubjID) %>%
summarise(chisq.test(Num_ErrorTialsLeverOrMag, Num_NotLeverOrMag))
chisquaretests_leverormag
chisquaretests_leverormag <- rawdata %>%
group_by(SubjID) %>%
summarise(pvalue= chisq.test(Num_ErrorTialsLeverOrMag, Num_NotLeverOrMag)$p.value)
chisquaretests_leverormag
