# facet_wrap(~,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("LP Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
# scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
# scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
# scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_repeatTest_All_LP_Diff_counterbalancing
view(plotdata)
testdata_repeatTest_All_LP_Diff_counterbalancing <- plotdata %>%
ggplot(mapping = aes(x = ID_Comparison, y = Instrumental, group = ID_Comparison)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = TRUE) +
geom_point(aes(group = subject, colour = subject)) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("LP Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
# scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
# scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
# scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_repeatTest_All_LP_Diff_counterbalancing
plotdata %>%
group_by(ID_Comparison) %>%
summarise(pvalue = t.test(Instrumental, mu = 0)$p.value)
plotdata$Instrumental
sign(plotdata$Instrumental)
(plotdata$Instrumental < 0)
count(plotdata$Instrumental < 0)
sum(plotdata$Instrumental < 0)
sum(plotdata$Instrumental != 0)
Cue_ID_ttestsDiffvs0 <- plotdata %>%
group_by(ID_Comparison) %>%
summarise(ttest_pvalue = t.test(Instrumental, mu = 0)$p.value,
signtest_pvalue = binom.test(sum(Instrumental < 0), n = sum(Instrumental != 0), p = 0.5)$p.value)
Cue_ID_ttestsDiffvs0
TestCondition_ttestsDiffvs0 <- plotdata %>%
group_by(TestCondition) %>%
summarise(ttest_pvalue = t.test(Instrumental, mu = 0)$p.value,
signtest_pvalue = binom.test(sum(Instrumental < 0), n = sum(Instrumental != 0), p = 0.5)$p.value)
TestCondition_ttestsDiffvs0
TestCondition_ttestsDiffvs0_Pavlovian <- plotdata %>%
group_by(TestCondition) %>%
summarise(ttest_pvalue = t.test(Pavlovian, mu = 0)$p.value,
signtest_pvalue = binom.test(sum(Pavlovian < 0), n = sum(Pavlovian != 0), p = 0.5)$p.value)
TestCondition_ttestsDiffvs0_Pavlovian <- plotdata %>%
group_by(TestCondition) %>%
summarise(ttest_pvalue = t.test(Pavlovian_MagEntries, mu = 0)$p.value,
signtest_pvalue = binom.test(sum(Pavlovian_MagEntries < 0), n = sum(Pavlovian_MagEntries != 0), p = 0.5)$p.value)
TestCondition_ttestsDiffvs0_Pavlovian
Cue_ID_ttestsDiffvs0_Pavlovian <- plotdata %>%
group_by(ID_Comparison) %>%
summarise(ttest_pvalue = t.test(Pavlovian_MagEntries, mu = 0)$p.value,
signtest_pvalue = binom.test(sum(Pavlovian_MagEntries < 0), n = sum(Pavlovian_MagEntries != 0), p = 0.5)$p.value)
Cue_ID_ttestsDiffvs0_Pavlovian
testdata_repeatTest_All_LP_Diff_counterbalancing <- plotdata %>%
ggplot(mapping = aes(x = ID_Comparison, y = Instrumental, group = ID_Comparison)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = TRUE) +
geom_point(aes(group = subject, colour = subject)) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("LP Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
# scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
# scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
# scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_repeatTest_All_LP_Diff_counterbalancing
testdata_repeatTest_All_LP_Diff_counterbalancing <- plotdata %>%
ggplot(mapping = aes(x = High_ID, y = Instrumental, group = High_ID)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = TRUE) +
geom_point(aes(group = subject, colour = subject)) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("LP Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
# scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
# scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
# scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_repeatTest_All_LP_Diff_counterbalancing
testdata_repeatTest_All_LP_Diff_counterbalancing <- plotdata %>%
ggplot(mapping = aes(x = High_ID_SalienceCluster, y = Instrumental, group = High_ID_SalienceCluster)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = TRUE) +
geom_point(aes(group = subject, colour = subject)) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("LP Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
# scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
# scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
# scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_repeatTest_All_LP_Diff_counterbalancing
testdata_repeatTest_All_LP_Diff_counterbalancing <- plotdata %>%
ggplot(mapping = aes(x = ID_Comparison, y = Instrumental, group = ID_Comparison)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = TRUE) +
geom_point(aes(group = subject, colour = subject)) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("LP Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
# scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
# scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
# scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_repeatTest_All_LP_Diff_counterbalancing
repeatTest_Low_100Vs50_TotalLP <- CRF_data_repeatTest_Low_100Vs50_long_Avg %>%
filter(measure == "LP",
Value != "Diff" & Value != "PercDiff",
)  %>%
ggplot(mapping = aes(x = as.factor(Probability), y = Freq, group = Probability, colour = Probability, fill = Probability)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
# geom_point(aes(group = subject), colour = "black") +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,10)) +
ggtitle("Low Value: P(100) vs P(50)") + xlab("CS Probability") + ylab("Total LP (30 mins)") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(0,60.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line"))
repeatTest_Low_100Vs50_TotalLP
testdata_repeatTest_All_LP_PercDiff <- CRF_ALL_data_repeatTest_long_Avg %>%
filter(measure == "LP",
Value == "PercDiff",
) %>%
ggplot(mapping = aes(x = as.factor(TestCondition), y = Freq, group = TestCondition, colour = TestCondition, fill = TestCondition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("Percent Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_repeatTest_All_LP_PercDiff
testdata_repeatTest_All_LP_Diff <- CRF_ALL_data_repeatTest_long_Avg %>%
filter(measure == "LP",
Value == "Diff",
) %>%
ggplot(mapping = aes(x = as.factor(TestCondition), y = Freq, group = TestCondition, colour = TestCondition, fill = TestCondition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("LP Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_repeatTest_All_LP_Diff
testdata_repeatTest_All_CS_Diff <- CRF_ALL_data_repeatTest_long_Avg %>%
filter(measure == "CS",
Value == "Diff",
) %>%
ggplot(mapping = aes(x = as.factor(TestCondition), y = Freq, group = TestCondition, colour = TestCondition, fill = TestCondition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("CS Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-40,40.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_repeatTest_All_CS_Diff
repeatTest_P100_HighvsLow_TotalLP <- CRF_data_repeatTest_P100_HighVsLow_long_Avg %>%
filter(measure == "LP",
Value != "Diff" & Value != "PercDiff",
) %>%
ggplot(mapping = aes(x = as.factor(Value), y = Freq, group = Value, colour = Value, fill = Value)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
# geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,10)) +
ggtitle("P(100): High vs. Low Value") + xlab("CS Value") + ylab("Total LP (30 mins)") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(0,60.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line"))
repeatTest_P100_HighvsLow_TotalLP
view(CRF_ALL_data_repeatTest_long_Avg)
repeatTest_P100_HighvsLow_TotalLP <- CRF_data_repeatTest_P100_HighVsLow_long_Avg %>%
filter(measure == "LP",
Value != "Diff" & Value != "PercDiff",
) %>%
ggplot(mapping = aes(x = as.factor(Value), y = Freq, group = Value, colour = Value, fill = Value)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
# geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,10)) +
ggtitle("P(100): High vs. Low Value") + xlab("CS Value") + ylab("Total LP (30 mins)") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(0,60.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line"))
repeatTest_P100_HighvsLow_TotalLP
repeatTest_P100_HighvsLow_TotalLP <- CRF_data_repeatTest_P100_HighVsLow_long_Avg %>%
filter(measure == "LP",
Value != "Diff" & Value != "PercDiff",
) %>%
ggplot(mapping = aes(x = as.factor(Value), y = Freq, group = Value, colour = Value, fill = Value)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject, colour = ID_Comparison)) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,10)) +
ggtitle("P(100): High vs. Low Value") + xlab("CS Value") + ylab("Total LP (30 mins)") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(0,60.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line"))
repeatTest_P100_HighvsLow_TotalLP
repeatTest_P100_HighvsLow_TotalLP <- CRF_data_repeatTest_P100_HighVsLow_long_Avg %>%
filter(measure == "LP",
Value != "Diff" & Value != "PercDiff",
) %>%
ggplot(mapping = aes(x = as.factor(Value), y = Freq, group = Value, colour = Value, fill = Value)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject, colour = ID_Comparison)) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,10)) +
ggtitle("P(100): High vs. Low Value") + xlab("CS Value") + ylab("Total LP (30 mins)") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(0,60.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
# scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
# scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line"))
repeatTest_P100_HighvsLow_TotalLP
repeatTest_P100_HighvsLow_TotalLP <- CRF_data_repeatTest_P100_HighVsLow_long_Avg %>%
filter(measure == "LP",
Value != "Diff" & Value != "PercDiff",
) %>%
ggplot(mapping = aes(x = as.factor(Value), y = Freq, group = Value, colour = Value, fill = Value)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject, colour = ID_Comparison)) +
geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,10)) +
ggtitle("P(100): High vs. Low Value") + xlab("CS Value") + ylab("Total LP (30 mins)") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(0,60.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
# scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
# scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line"))
repeatTest_P100_HighvsLow_TotalLP
repeatTest_P100_HighvsLow_TotalLP <- CRF_data_repeatTest_P100_HighVsLow_long_Avg %>%
filter(measure == "LP",
Value != "Diff" & Value != "PercDiff",
) %>%
ggplot(mapping = aes(x = as.factor(Value), y = Freq, group = Value, colour = Value, fill = Value)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
# geom_point(aes(group = subject, colour = ID_Comparison)) +
# geom_line(aes(group = subject), colour = Black) +
facet_wrap(~ID_Comparison,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,10)) +
ggtitle("P(100): High vs. Low Value") + xlab("CS Value") + ylab("Total LP (30 mins)") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(0,60.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line"))
repeatTest_P100_HighvsLow_TotalLP
repeatTest_P100_HighvsLow_TotalLP <- CRF_data_repeatTest_P100_HighVsLow_long_Avg %>%
filter(measure == "LP",
Value != "Diff" & Value != "PercDiff",
) %>%
ggplot(mapping = aes(x = as.factor(Value), y = Freq, group = Value, colour = Value, fill = Value)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
# geom_point(aes(group = subject, colour = ID_Comparison)) +
# geom_line(aes(group = subject), colour = Black, , show.legend = FALSE) +
facet_wrap(~ID_Comparison,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,10)) +
ggtitle("P(100): High vs. Low Value") + xlab("CS Value") + ylab("Total LP (30 mins)") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(0,60.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line"))
repeatTest_P100_HighvsLow_TotalLP <- CRF_data_repeatTest_P100_HighVsLow_long_Avg %>%
filter(measure == "LP",
Value != "Diff" & Value != "PercDiff",
) %>%
ggplot(mapping = aes(x = as.factor(Value), y = Freq, group = Value, colour = Value, fill = Value)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
# geom_point(aes(group = subject, colour = ID_Comparison)) +
geom_line(aes(group = subject), colour = Black, show.legend = FALSE) +
facet_wrap(~ID_Comparison,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,10)) +
ggtitle("P(100): High vs. Low Value") + xlab("CS Value") + ylab("Total LP (30 mins)") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(0,60.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line"))
repeatTest_P100_HighvsLow_TotalLP
repeatTest_P100_HighvsLow_TotalLP <- CRF_data_repeatTest_P100_HighVsLow_long_Avg %>%
filter(measure == "LP",
Value != "Diff" & Value != "PercDiff",
) %>%
ggplot(mapping = aes(x = as.factor(Value), y = Freq, group = Value, colour = Value, fill = Value)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject, colour = Black, show.legend = FALSE)) +
geom_line(aes(group = subject), colour = Black, show.legend = FALSE) +
facet_wrap(~ID_Comparison,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,10)) +
ggtitle("P(100): High vs. Low Value") + xlab("CS Value") + ylab("Total LP (30 mins)") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(0,60.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line"))
repeatTest_P100_HighvsLow_TotalLP
repeatTest_P100_HighvsLow_TotalLP <- CRF_data_repeatTest_P100_HighVsLow_long_Avg %>%
filter(measure == "LP",
Value != "Diff" & Value != "PercDiff",
) %>%
ggplot(mapping = aes(x = as.factor(Value), y = Freq, group = Value, colour = Value, fill = Value)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black, show.legend = FALSE) +
geom_line(aes(group = subject), colour = Black, show.legend = FALSE) +
facet_wrap(~ID_Comparison,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,10)) +
ggtitle("P(100): High vs. Low Value") + xlab("CS Value") + ylab("Total LP (30 mins)") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(0,60.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line"))
repeatTest_P100_HighvsLow_TotalLP
repeatTest_P100_HighvsLow_TotalLP <- CRF_data_repeatTest_P100_HighVsLow_long_Avg %>%
filter(measure == "LP",
Value != "Diff" & Value != "PercDiff",
) %>%
ggplot(mapping = aes(x = as.factor(Value), y = Freq, group = Value, colour = Value, fill = Value)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
# stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black, show.legend = FALSE) +
geom_line(aes(group = subject), colour = Black, show.legend = FALSE) +
facet_wrap(~ID_Comparison,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,10)) +
ggtitle("P(100): High vs. Low Value") + xlab("CS Value") + ylab("Total LP (30 mins)") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(0,60.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line"))
repeatTest_P100_HighvsLow_TotalLP
repeatTest_P100_HighvsLow_TotalLP <- CRF_data_repeatTest_P100_HighVsLow_long_Avg %>%
filter(measure == "LP",
Value != "Diff" & Value != "PercDiff",
) %>%
ggplot(mapping = aes(x = as.factor(Value), y = Freq, group = Value, colour = Value, fill = Value)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
# geom_point(aes(group = subject, colour = ID_Comparison)) +
# geom_line(aes(group = subject), colour = Black,) +
# facet_wrap(~ID_Comparison,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,10)) +
ggtitle("P(100): High vs. Low Value") + xlab("CS Value") + ylab("Total LP (30 mins)") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(0,60.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line"))
repeatTest_P100_HighvsLow_TotalLP
view(CRF_ALL_data_long_Avg)
