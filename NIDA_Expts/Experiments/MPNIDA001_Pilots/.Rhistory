rawdata <- left_join(rawdata, newfactorlookup, by = "CS_name")
View(rawdata)
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/Plot_1_SpecificCI.R', echo=TRUE)
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/Plot_1_SpecificCI.R', echo=TRUE)
FeatureNegative_Stage2_MagFreq <- data_PerSession_CSPre %>%
filter(Period == "CSPre") %>%
ggplot(mapping = aes(x = as.factor(Day), y = MagEntries, group = CS_name, colour = CS_name, fill = CS_name, shape = CS_name,linetype = CS_name)) +
stat_summary_bin(fun.data = "mean_se", geom = "line", size = .5) +
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0.0, size = .3, linetype = 1, show.legend = FALSE) +
stat_summary_bin(fun.data = "mean_se", geom = "point", size = 2) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-100,100,1)) +
ggtitle("Acquisition") + xlab("Day") + ylab("Magazine Entry 10s (CS-Pre)") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-1,6.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_linetype_manual(name = "", values = linetypes)  +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_shape_manual(name = "", values = pointshapes) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(1,"line"))
shift_xaxis(FeatureNegative_Stage2_MagFreq)
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/Plot_1_SpecificCI.R', echo=TRUE)
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/Plot_1_SpecificCI.R', echo=TRUE)
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/Plot_1_SpecificCI.R', echo=TRUE)
CI_10s_Freq_Combined <- (CI_Stage1_10s_Freq + CI_Stage2_10s_Freq) + plot_annotation(tag_levels = 'A') + plot_layout(nrow = 1, widths = c(1, 1.2))
CI_10s_Freq_Combined
A <- CI_Stage1_10s_Freq + theme(legend.position= c(0.05,.90),
legend.justification='left',
legend.direction='vertical')
B <- CI_Stage2_10s_Freq + theme(legend.position= c(0.05,.90),
legend.justification='left',
legend.direction='vertical',
axis.title.y = element_blank())
CI_10s_Freq_Combined <- (A + B) + plot_annotation(tag_levels = 'A') + plot_layout(nrow = 1, widths = c(1, 1.2))
CI_10s_Freq_Combined
A <- CI_Stage1_10s_Freq + theme(legend.position= c(0.05,.90),
legend.justification='left',
legend.direction='vertical')
B <- CI_Stage2_10s_Freq + theme(legend.position= c(0.05,.90),
legend.justification='left',
legend.direction='vertical',
axis.title.y = element_blank())
CI_10s_Freq_Combined <- (A + B) + plot_annotation(tag_levels = 'A') + plot_layout(nrow = 1, widths = c(1, 1.2))
filename = here("figures", "CI_10s_Freq_Combined.png")
ggsave(filename, CI_Stage2_10s_Freq, width = 120, height = 80, units = "mm", dpi = 1200)
ggsave(filename, CI_10s_Freq_Combined, width = 120, height = 80, units = "mm", dpi = 1200)
CI_10s_Freq_Combined <- (A + B) + plot_annotation(tag_levels = 'A') + plot_layout(nrow = 1, widths = c(1, 1))
filename = here("figures", "CI_10s_Freq_Combined.png")
ggsave(filename, CI_10s_Freq_Combined, width = 120, height = 80, units = "mm", dpi = 1200)
# 10s Duration
A <- CI_Stage1_10s_Dur + theme(legend.position= c(0.05,.90),
legend.justification='left',
legend.direction='vertical')
B <- CI_Stage2_10s_Dur + theme(legend.position= c(0.05,.90),
legend.justification='left',
legend.direction='vertical',
axis.title.y = element_blank())
CI_10s_Dur_Combined <- (A + B) + plot_annotation(tag_levels = 'A') + plot_layout(nrow = 1, widths = c(1, 1))
filename = here("figures", "CI_10s_Dur_Combined.png")
ggsave(filename, CI_10s_Dur_Combined, width = 120, height = 80, units = "mm", dpi = 1200)
## 5s Frequency
A <- CI_Stage1_5s_Freq + theme(legend.position= c(0.05,.90),
legend.justification='left',
legend.direction='vertical')
B <- CI_Stage2_5s_Freq + theme(legend.position= c(0.05,.90),
legend.justification='left',
legend.direction='vertical',
axis.title.y = element_blank())
CI_5s_Freq_Combined <- (A + B) + plot_annotation(tag_levels = 'A') + plot_layout(nrow = 1, widths = c(1, 1))
filename = here("figures", "CI_5s_Freq_Combined.png")
ggsave(filename, CI_5s_Freq_Combined, width = 120, height = 80, units = "mm", dpi = 1200)
## 5s Duration
A <- CI_Stage1_5s_Dur + theme(legend.position= c(0.05,.90),
legend.justification='left',
legend.direction='vertical')
B <- CI_Stage2_5s_Dur + theme(legend.position= c(0.05,.90),
legend.justification='left',
legend.direction='vertical',
axis.title.y = element_blank())
CI_5s_Dur_Combined <- (A + B) + plot_annotation(tag_levels = 'A') + plot_layout(nrow = 1, widths = c(1, 1))
filename = here("figures", "CI_5s_Dur_Combined.png")
ggsave(filename, CI_5s_Dur_Combined, width = 120, height = 80, units = "mm", dpi = 1200)
rawdata <- CI_Stage2_CSPre %>%
filter(Period == "CSPre")
knitr::opts_chunk$set(echo = FALSE)
## Packages for data organisation and plotting
library(tidyverse)
# Package for relative file paths
library(here)
# library(ggpubr)
library(cowplot)
library(ggsignif)
library(patchwork)
################################################################################
## Packages for Data analysis
library(afex)
afex_options(emmeans_model = "multivariate")# use multivariate model for all follow-up tests.
library(emmeans)
# install.packages("devtools")
# devtools::install_github("crsh/papaja")
library(papaja)
library(knitr)
# remotes::install_github("noamross/redoc")
# library(redoc)
CI_Stage1_CSPre <- read_csv(here("figures","figure_data","CI_Stage1_CSPre.csv"))
CI_Stage2_CSPre <- read_csv(here("figures","figure_data","CI_Stage2_CSPre.csv"))
rawdata <- CI_Stage1_CSPre %>%
filter(Period == "CSPre")
# Stage 1 Acquisition Frequency
anova <- aov_4(MagEntries ~ (Day*CS_name|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_Stg1_Freq <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
## simple effects - linear trend on Day
simple <- emmeans(anova, ~CS_name)
simple_Stg1_Freq <- apa_print(contrast(simple, interaction = "pairwise", adjust = "tukey"))
anova_Stg1_Freq$table
simple_Stg1_Freq$table
# Stage 1 Acquisition Duration
anova <- aov_4(MagDuration ~ (Day*CS_name|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_Stg1_Dur <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
## simple effects - linear trend on Day
simple <- emmeans(anova, ~CS_name)
simple_Stg1_Dur <- apa_print(contrast(simple, interaction = "pairwise", adjust = "tukey"))
anova_Stg1_Dur$table
simple_Stg1_Dur$table
rawdata <- CI_Stage2_CSPre %>%
filter(Period == "CSPre")
# Stage 2 Acquisition Frequency
anova <- aov_4(MagEntries ~ (Day*CS_name|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_Stg2_Freq <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
## simple effects - linear trend on Day
simple <- emmeans(anova, ~CS_name)
simple_Stg2_Freq <- apa_print(contrast(simple, interaction = "pairwise", adjust = "tukey"))
anova_Stg2_Freq$table
simple_Stg2_Freq$table
# Stage 2 Acquisition Duration
anova <- aov_4(MagDuration ~ (Day*CS_name|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_Stg2_Dur <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
## simple effects - linear trend on Day
simple <- emmeans(anova, ~CS_name)
simple_Stg2_Dur <- apa_print(contrast(simple, interaction = "pairwise", adjust = "tukey"))
anova_Stg2_Dur$table
simple_Stg2_Dur$table
rawdata <- CI_Stage1_CSPre %>%
filter(Period == "CSPre")
# Stage 1 Acquisition Frequency
anova <- aov_4(MagEntries ~ (Day*CS_name|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_Stg1_Freq <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
## simple effects - linear trend on Day
simple <- emmeans(anova, ~CS_name)
simple_Stg1_Freq <- apa_print(contrast(simple, interaction = "pairwise", adjust = "tukey"))
anova_Stg1_Freq$table
simple_Stg1_Freq$table
# Stage 1 Acquisition Duration
anova <- aov_4(MagDuration ~ (Day*CS_name|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_Stg1_Dur <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
## simple effects - linear trend on Day
simple <- emmeans(anova, ~CS_name)
simple_Stg1_Dur <- apa_print(contrast(simple, interaction = "pairwise", adjust = "tukey"))
anova_Stg1_Dur$table
simple_Stg1_Dur$table
View(rawdata)
CI_Stage1_CSPre
rawdata <- CI_Stage1_CSPre %>%
filter(Period == "CSPre")
# Stage 1 Acquisition Frequency
anova <- aov_4(MagEntries ~ (Day*CSPair*Outcome|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_Stg1_Freq <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
anova_Stg1_Freq$table
simple <- emmeans(anova, ~CSPair*Outcome)
simple_Stg1_Freq <- apa_print(contrast(simple, interaction = "pairwise", by = "CSPair" ,adjust = "tukey"))
simple_Stg1_Freq$table
simple_Stg1_Freq <- apa_print(contrast(simple, interaction = "pairwise", by = "Outcome" ,adjust = "tukey"))
simple_Stg1_Freq$table
rawdata <- CI_Stage1_CSPre %>%
filter(Period == "CSPre")
# Stage 1 Acquisition Frequency
anova <- aov_4(MagEntries ~ (Day*CSPair*Outcome|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_Stg1_Freq <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
## simple effects -
simple <- emmeans(anova, ~CSPair*Outcome)
simple_Stg1_Freq <- apa_print(contrast(simple, interaction = "pairwise", by = "CSPair" ,adjust = "tukey"))
anova_Stg1_Freq$table
simple_Stg1_Freq$table
# Stage 1 Acquisition Duration
anova <- aov_4(MagDuration ~ (Day*CSPair*Outcome|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_Stg1_Dur <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
## simple effects - linear trend on Day
simple <- emmeansemmeans(anova, ~CSPair*Outcome)
rawdata <- CI_Stage1_CSPre %>%
filter(Period == "CSPre")
# Stage 1 Acquisition Frequency
anova <- aov_4(MagEntries ~ (Day*CSPair*Outcome|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_Stg1_Freq <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
## simple effects -
simple <- emmeans(anova, ~CSPair*Outcome)
simple_Stg1_Freq <- apa_print(contrast(simple, interaction = "pairwise", by = "CSPair" ,adjust = "tukey"))
anova_Stg1_Freq$table
simple_Stg1_Freq$table
# Stage 1 Acquisition Duration
anova <- aov_4(MagDuration ~ (Day*CSPair*Outcome|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_Stg1_Dur <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
## simple effects - linear trend on Day
simple <- emmeans(anova, ~CSPair*Outcome)
simple_Stg1_Dur <- apa_print(contrast(simple, interaction = "pairwise", by = "CSPair" ,adjust = "tukey"))
anova_Stg1_Dur$table
simple_Stg1_Dur$table
anova_Stg1_Freq$table
simple_Stg1_Freq$table
anova_Stg1_Freq$statistic$CSPair_Outcome
simple_Stg1_Freq$table
rawdata <- CI_Stage2_CSPre %>%
filter(Period == "CSPre")
# Stage 2 Acquisition Frequency
anova <- aov_4(MagEntries ~ (Day*CSPair*Outcome|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/Plot_1_SpecificCI.R', echo=TRUE)
knitr::opts_chunk$set(echo = FALSE)
## Packages for data organisation and plotting
library(tidyverse)
# Package for relative file paths
library(here)
# library(ggpubr)
library(cowplot)
library(ggsignif)
library(patchwork)
################################################################################
## Packages for Data analysis
library(afex)
afex_options(emmeans_model = "multivariate")# use multivariate model for all follow-up tests.
library(emmeans)
# install.packages("devtools")
# devtools::install_github("crsh/papaja")
library(papaja)
library(knitr)
# remotes::install_github("noamross/redoc")
# library(redoc)
CI_Stage1_CSPre <- read_csv(here("figures","figure_data","CI_Stage1_CSPre.csv"))
CI_Stage2_CSPre <- read_csv(here("figures","figure_data","CI_Stage2_CSPre.csv"))
rawdata <- CI_Stage1_CSPre %>%
filter(Period == "CSPre")
# Stage 1 Acquisition Frequency
anova <- aov_4(MagEntries ~ (Day*CSPair*Outcome|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_Stg1_Freq <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
## simple effects -
simple <- emmeans(anova, ~CSPair*Outcome)
simple_Stg1_Freq <- apa_print(contrast(simple, interaction = "pairwise", by = "CSPair" ,adjust = "tukey"))
anova_Stg1_Freq$table
simple_Stg1_Freq$table
# Stage 1 Acquisition Duration
anova <- aov_4(MagDuration ~ (Day*CSPair*Outcome|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_Stg1_Dur <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
## simple effects - linear trend on Day
simple <- emmeans(anova, ~CSPair*Outcome)
simple_Stg1_Dur <- apa_print(contrast(simple, interaction = "pairwise", by = "CSPair" ,adjust = "tukey"))
anova_Stg1_Dur$table
simple_Stg1_Dur$table
rawdata <- CI_Stage2_CSPre %>%
filter(Period == "CSPre")
# Stage 2 Acquisition Frequency
anova <- aov_4(MagEntries ~ (Day*CSPair*Outcome|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_Stg2_Freq <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
## simple effects - linear trend on Day
simple <- emmeans(anova, ~CS_name)
anova_Stg2_Freq$table
anova <- aov_4(MagDuration ~ (Day*CSPair*Outcome|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_Stg2_Dur <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
anova_Stg2_Dur$table
apa_table(within(anova_Stg2_Freq$table, rm(pes)),caption = "Magazine Frequency ANOVA", label = NULL)`
kljdsf
s
)
()
)))
apa_table(within(anova_Stg2_Freq$table, rm(pes)),caption = "Magazine Frequency ANOVA", label = NULL)
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/MasterProcessingScript_3_LPL_WithinSessionTimeBins.R', echo=TRUE)
# Load Packagaes ----------------------------------------------------------
## Packages for data organisation and plotting
library(tidyverse)
library(knitr)
# Package for relative file paths
library(here)
# Load Analysis Functions
source(here("scripts", "CoulbournAnalysisFunctions.R"))
# Identify files to analyze
# Can't use here() function effectively here, so have to create relative file paths
## COllapses multiple subfolders if needed
datafoldersinproject1 <- c("rawdata")
datafoldersinproject2 <-c("Marios")
## Project specific folder
projectdatafolder <- c("3_LeverPressingForLights")
## Final level of folders contianing the relevant .txt Coulbourn files
listofdatafolders <- c("LPL_DiscreteTrialAcquisition_Day5")
#  extract data filenames, only .txt --------------------------------------
datafilepaths <-0
for (i in c(1:length(listofdatafolders))){
lookup <- paste(datafoldersinproject1, datafoldersinproject2, projectdatafolder, listofdatafolders[i], sep = "/")
datafilepaths <- list.files(path = lookup, pattern = ".txt")
for (j in c(1:length(datafilepaths))) {
# For each raw.txt file split up the data into indivudal subjects .csv files for subsequent analysis
folderpath <- here(datafoldersinproject1, datafoldersinproject2,projectdatafolder,listofdatafolders[i])
filename <- datafilepaths[j]
## Run Function
coulbourn_rawdatasplit(filename,folderpath)
}
}
#  extract processed data filenames, only .csv and put them into a --------
########## Set parameters ############
## List of states
S = c("ITI" = 1,
"LeftLever" = 2,
"RightLever" = 3,
"Flash" = 4,
"Steady" = 5,
"End" = 6)
## Time base the linc was set to, in ms
timebase = 20
## Time bins to analyze each state in, in s
timebinwidth = 450
## Count the frequency and duration of these states
bin = c(S["Flash"], S["Steady"])
## state that should be considered the end of the session. For the absolute end of recording specify the number -1 [the state_ID of the finished state in Coulbourn]
sessionendstate <- S["End"]
########## Run Analysis ############
for (i in c(1:length(listofdatafolders))){
lookup <- paste(datafoldersinproject1, datafoldersinproject2, projectdatafolder, listofdatafolders[i], sep = "/")
datafilepaths <- list.files(path = lookup, pattern = ".csv")
for (j in c(1:length(datafilepaths))) {
# For each raw.txt file split up the data into individudal subjects .csv files for subsequent analysis
folderpath <- here(datafoldersinproject1, datafoldersinproject2,projectdatafolder,listofdatafolders[i])
filename <- datafilepaths[j]
## Run Function - N.B. Warnings will appear to tell you that the new directory for data storage already exists. Safe to ignore.
coulbourn_processdata_Operant_SessionTimeBinAnalysis(filename,folderpath,S,timebase, timebinwidth, bin, sessionendstate)
}
}
########## Run Analysis ############
for (i in c(1:length(listofdatafolders))){
lookup <- paste(datafoldersinproject1, datafoldersinproject2, projectdatafolder, listofdatafolders[i], sep = "/")
datafilepaths <- list.files(path = lookup, pattern = ".csv")
for (j in c(1:length(datafilepaths))) {
# For each raw.txt file split up the data into individudal subjects .csv files for subsequent analysis
folderpath <- here(datafoldersinproject1, datafoldersinproject2,projectdatafolder,listofdatafolders[i])
filename <- datafilepaths[j]
## Run Function - N.B. Warnings will appear to tell you that the new directory for data storage already exists. Safe to ignore.
coulbourn_processdata_Operant_SessionTimeBinAnalysis(filename,folderpath,S,timebase, timebinwidth, bin, sessionendstate)
}
}
# Load Packagaes ----------------------------------------------------------
## Packages for data organisation and plotting
library(tidyverse)
library(knitr)
# Package for relative file paths
library(here)
# Load Analysis Functions
source(here("scripts", "CoulbournAnalysisFunctions.R"))
# Identify files to analyze
# Can't use here() function effectively here, so have to create relative file paths
## COllapses multiple subfolders if needed
datafoldersinproject1 <- c("rawdata")
datafoldersinproject2 <-c("Marios")
## Project specific folder
projectdatafolder <- c("3_LeverPressingForLights")
## Final level of folders contianing the relevant .txt Coulbourn files
listofdatafolders <- c("LPL_DiscreteTrialAcquisition_Day5")
#  extract data filenames, only .txt --------------------------------------
datafilepaths <-0
for (i in c(1:length(listofdatafolders))){
lookup <- paste(datafoldersinproject1, datafoldersinproject2, projectdatafolder, listofdatafolders[i], sep = "/")
datafilepaths <- list.files(path = lookup, pattern = ".txt")
for (j in c(1:length(datafilepaths))) {
# For each raw.txt file split up the data into indivudal subjects .csv files for subsequent analysis
folderpath <- here(datafoldersinproject1, datafoldersinproject2,projectdatafolder,listofdatafolders[i])
filename <- datafilepaths[j]
## Run Function
coulbourn_rawdatasplit(filename,folderpath)
}
}
#  extract processed data filenames, only .csv and put them into a --------
########## Set parameters ############
## List of states
S = c("ITI" = 1,
"LeftLever" = 2,
"RightLever" = 3,
"Flash" = 4,
"Steady" = 5,
"End" = 6)
## Time base the linc was set to, in ms
timebase = 20
## Time bins to analyze each state in, in s
timebinwidth = 450
## Count the frequency and duration of these states
bin = c(S["Flash"], S["Steady"])
## state that should be considered the end of the session. For the absolute end of recording specify the number -1 [the state_ID of the finished state in Coulbourn]
sessionendstate <- S["End"]
########## Run Analysis ############
for (i in c(1:length(listofdatafolders))){
lookup <- paste(datafoldersinproject1, datafoldersinproject2, projectdatafolder, listofdatafolders[i], sep = "/")
datafilepaths <- list.files(path = lookup, pattern = ".csv")
for (j in c(1:length(datafilepaths))) {
# For each raw.txt file split up the data into individudal subjects .csv files for subsequent analysis
folderpath <- here(datafoldersinproject1, datafoldersinproject2,projectdatafolder,listofdatafolders[i])
filename <- datafilepaths[j]
## Run Function - N.B. Warnings will appear to tell you that the new directory for data storage already exists. Safe to ignore.
coulbourn_processdata_Operant_SessionTimeBinAnalysis(filename,folderpath,S,timebase, timebinwidth, bin, sessionendstate)
}
}
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/MasterProcessingScript_2_ConditionedReinforcement.R', echo=TRUE)
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/Plot_2_CRF.R', echo=TRUE)
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/MasterProcessingScript_2_ConditionedReinforcement.R', echo=TRUE)
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/Plot_2_CRF.R', echo=TRUE)
knitr::opts_chunk$set(echo = FALSE)
## Packages for data organisation and plotting
library(tidyverse)
# Package for relative file paths
library(here)
# library(ggpubr)
library(cowplot)
library(ggsignif)
library(patchwork)
################################################################################
## Packages for Data analysis
library(afex)
afex_options(emmeans_model = "multivariate")# use multivariate model for all follow-up tests.
library(emmeans)
# install.packages("devtools")
# devtools::install_github("crsh/papaja")
library(papaja)
library(knitr)
# remotes::install_github("noamross/redoc")
# library(redoc)
CRF_Acquisition_CSPre <- read_csv(here("figures","figure_data","CRF_Acquisition_CSPre.csv"))
CRF_Acquisition_CSPre_Last5s <- read_csv(here("figures","figure_data","CRF_Acquisition_CSPre_Last5s.csv"))
rawdata <- CRF_Acquisition_CSPre %>%
filter(Period == "CSPre")
# Stage 1 Acquisition Frequency
anova <- aov_4(MagEntries ~ (Day*CS_name|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_Stg1_Freq <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
## simple effects - linear trend on Day
simple <- emmeans(anova, ~CS_name)
simple_Stg1_Freq <- apa_print(contrast(simple, interaction = "pairwise", adjust = "tukey"))
anova_Stg1_Freq$table
simple_Stg1_Freq$table
# Stage 1 Acquisition Duration
anova <- aov_4(MagDuration ~ (Day*CS_name|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_Stg1_Dur <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
## simple effects - linear trend on Day
simple <- emmeans(anova, ~CS_name)
simple_Stg1_Dur <- apa_print(contrast(simple, interaction = "pairwise", adjust = "tukey"))
anova_Stg1_Dur$table
simple_Stg1_Dur$table
rawdata <- CRF_Acquisition_CSPre %>%
filter(Period == "CSPre")
# Stage 1 Acquisition Frequency
anova <- aov_4(MagEntries ~ (Day*magnitude*probability|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_Stg1_Freq <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
## simple effects - linear trend on Day
simple <- emmeans(anova, ~Day*probability)
simple_Stg1_Freq <- apa_print(contrast(simple, interaction = "pairwise", by = "Day", adjust = "tukey"))
anova_Stg1_Freq$table
simple_Stg1_Freq$table
# Stage 1 Acquisition Duration
anova <- aov_4(MagDuration ~ (Day*magnitude*probability|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_Stg1_Dur <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
## simple effects - linear trend on Day
simple <- emmeans(anova, ~Day*probability)
simple_Stg1_Dur <- apa_print(contrast(simple, interaction = "pairwise", by = "Day", adjust = "tukey"))
anova_Stg1_Dur$table
simple_Stg1_Dur$table
rawdata <- CRF_Acquisition_CSPre_Last5s %>%
filter(Period == "CSPre")
# Stage 1 Acquisition Frequency
anova <- aov_4(MagEntries ~ (Day*CS_name|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_Stg1_Freq_5s <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
## simple effects - linear trend on Day
simple <- emmeans(anova, ~CS_name)
simple_Stg1_Freq_5s <- apa_print(contrast(simple, interaction = "pairwise", adjust = "tukey"))
anova_Stg1_Freq_5s$table
simple_Stg1_Freq_5s$table
# Stage 1 Acquisition Duration
anova <- aov_4(MagDuration ~ (Day*CS_name|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_Stg1_Dur_5s <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
## simple effects - linear trend on Day
simple <- emmeans(anova, ~CS_name)
simple_Stg1_Dur_5s <- apa_print(contrast(simple, interaction = "pairwise", adjust = "tukey"))
anova_Stg1_Dur_5s$table
simple_Stg1_Dur_5s$table
rawdata <- CRF_Acquisition_CSPre_Last5s %>%
filter(Period == "CSPre")
# Stage 1 Acquisition Frequency
anova <- aov_4(MagEntries ~ (Day*magnitude*probability|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_Stg1_Freq_5s <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
## simple effects - linear trend on Day
simple <- emmeans(anova, ~magnitude*probability)
simple_Stg1_Freq_5s <- apa_print(contrast(simple, interaction = "pairwise", by = "probability", adjust = "tukey"))
anova_Stg1_Freq_5s$table
simple_Stg1_Freq_5s$table
# Stage 1 Acquisition Duration
anova <- aov_4(MagDuration ~ (Day*magnitude*probability|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_Stg1_Dur_5s <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
## simple effects - linear trend on Day
simple <- emmeans(anova, ~magnitude*probability)
simple_Stg1_Dur_5s <- apa_print(contrast(simple, interaction = "pairwise",  by = "probability", adjust = "tukey"))
anova_Stg1_Dur_5s$table
simple_Stg1_Dur_5s$table
anova_Stg1_Dur$table
anova_Stg1_Freq$table
anova_Stg1_Freq_5s$table
anova_Stg1_Dur_5s$table
anova_Stg1_Dur$table
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/MasterProcessingScript_1_SpecificCI_Stage2.R', echo=TRUE)
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/Plot_1_SpecificCI.R', echo=TRUE)
