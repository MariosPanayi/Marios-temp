ifelse(Right_LeverCueID == "Siren", Siren_freq, NA ))))) ),
CS_P100_Low = ifelse(CS_LeftLeverName == "D+", ifelse(Left_LeverCueID == "Click",
Click_freq, ifelse(Left_LeverCueID == "Noise", Noise_freq,
ifelse(Left_LeverCueID == "Tone", Tone_freq,
ifelse(Left_LeverCueID == "Siren", Siren_freq, NA )))),
ifelse(CS_RightLeverName == "D+", ifelse(Right_LeverCueID == "Click",
Click_freq, ifelse(Right_LeverCueID == "Noise", Noise_freq,
ifelse(Right_LeverCueID == "Tone", Tone_freq,
ifelse(Right_LeverCueID == "Siren", Siren_freq, NA ))))) ),
) %>%
ungroup()
data_P100_HighvsLow_long <- data_P100_HighvsLow %>%
pivot_longer(c(LP_P100_High, LP_P100_Low, CS_P100_High, CS_P100_Low), names_to = c("measure", "Probability", "Value"), names_sep = "_" ,values_to = "Freq")
# Separate each condition for separate analysis
data_P50_HighVsLow <- rawdata %>%
filter(TestCondition=="P50_HighVsLow")
## Recode lever identity and reward identity based on counterbalancing
data_P50_HighVsLow <- data_P50_HighVsLow %>%
group_by(Day, subject) %>%
mutate(LP_P50_High  = ifelse(CS_LeftLeverName == "A++--", A1_freq, ifelse(CS_RightLeverName == "A++--", A2_freq, NA)),
LP_P50_Low  = ifelse(CS_LeftLeverName == "B+-", A1_freq, ifelse(CS_RightLeverName == "B+-", A2_freq, NA)),
# LP_P50_High_dur  = ifelse(CS_LeftLeverName == "A++--", A1_dur, ifelse(CS_RightLeverName == "A++--", A2_dur, NA)),
# LP_P50_Low_dur  = ifelse(CS_LeftLeverName == "B+-", A1_dur, ifelse(CS_RightLeverName == "B+-", A2_dur, NA)),
CS_P50_High = ifelse(CS_LeftLeverName == "A++--", ifelse(Left_LeverCueID == "Click",
Click_freq, ifelse(Left_LeverCueID == "Noise", Noise_freq,
ifelse(Left_LeverCueID == "Tone", Tone_freq,
ifelse(Left_LeverCueID == "Siren", Siren_freq, NA )))),
ifelse(CS_RightLeverName == "A++--", ifelse(Right_LeverCueID == "Click",
Click_freq, ifelse(Right_LeverCueID == "Noise", Noise_freq,
ifelse(Right_LeverCueID == "Tone", Tone_freq,
ifelse(Right_LeverCueID == "Siren", Siren_freq, NA ))))) ),
CS_P50_Low = ifelse(CS_LeftLeverName == "B+-", ifelse(Left_LeverCueID == "Click",
Click_freq, ifelse(Left_LeverCueID == "Noise", Noise_freq,
ifelse(Left_LeverCueID == "Tone", Tone_freq,
ifelse(Left_LeverCueID == "Siren", Siren_freq, NA )))),
ifelse(CS_RightLeverName == "B+-", ifelse(Right_LeverCueID == "Click",
Click_freq, ifelse(Right_LeverCueID == "Noise", Noise_freq,
ifelse(Right_LeverCueID == "Tone", Tone_freq,
ifelse(Right_LeverCueID == "Siren", Siren_freq, NA ))))) ),
) %>%
ungroup()
data_P50_HighVsLow_long <- data_P50_HighVsLow %>%
pivot_longer(c(LP_P50_High, LP_P50_Low, CS_P50_High, CS_P50_Low), names_to = c("measure", "Probability", "Value"), names_sep = "_" ,values_to = "Freq")
# Separate each condition for separate analysis
data_High_100Vs50 <- rawdata %>%
filter(TestCondition=="High_100Vs50")
## Recode lever identity and reward identity based on counterbalancing
data_High_100Vs50 <- data_High_100Vs50 %>%
group_by(Day, subject) %>%
mutate(LP_P100_High  = ifelse(CS_LeftLeverName == "C++", A1_freq, ifelse(CS_RightLeverName == "C++", A2_freq, NA)),
LP_P50_High  = ifelse(CS_LeftLeverName == "A++--", A1_freq, ifelse(CS_RightLeverName == "A++--", A2_freq, NA)),
# LP_P100_High_dur  = ifelse(CS_LeftLeverName == "C++", A1_dur, ifelse(CS_RightLeverName == "C++", A2_dur, NA)),
# LP_P50_High_dur  = ifelse(CS_LeftLeverName == "A++--", A1_dur, ifelse(CS_RightLeverName == "A++--", A2_dur, NA)),
CS_P100_High = ifelse(CS_LeftLeverName == "C++", ifelse(Left_LeverCueID == "Click",
Click_freq, ifelse(Left_LeverCueID == "Noise", Noise_freq,
ifelse(Left_LeverCueID == "Tone", Tone_freq,
ifelse(Left_LeverCueID == "Siren", Siren_freq, NA )))),
ifelse(CS_RightLeverName == "C++", ifelse(Right_LeverCueID == "Click",
Click_freq, ifelse(Right_LeverCueID == "Noise", Noise_freq,
ifelse(Right_LeverCueID == "Tone", Tone_freq,
ifelse(Right_LeverCueID == "Siren", Siren_freq, NA ))))) ),
CS_P50_High = ifelse(CS_LeftLeverName == "A++--", ifelse(Left_LeverCueID == "Click",
Click_freq, ifelse(Left_LeverCueID == "Noise", Noise_freq,
ifelse(Left_LeverCueID == "Tone", Tone_freq,
ifelse(Left_LeverCueID == "Siren", Siren_freq, NA )))),
ifelse(CS_RightLeverName == "A++--", ifelse(Right_LeverCueID == "Click",
Click_freq, ifelse(Right_LeverCueID == "Noise", Noise_freq,
ifelse(Right_LeverCueID == "Tone", Tone_freq,
ifelse(Right_LeverCueID == "Siren", Siren_freq, NA ))))) ),
) %>%
ungroup()
data_High_100Vs50_long <- data_High_100Vs50 %>%
pivot_longer(c(LP_P100_High, LP_P50_High, CS_P100_High, CS_P50_High), names_to = c("measure", "Probability", "Value"), names_sep = "_" ,values_to = "Freq")
# Separate each condition for separate analysis
data_Low_100Vs50 <- rawdata %>%
filter(TestCondition=="Low_100Vs50")
## Recode lever identity and reward identity based on counterbalancing
data_Low_100Vs50 <- data_Low_100Vs50 %>%
group_by(Day, subject) %>%
mutate(LP_P100_Low  = ifelse(CS_LeftLeverName == "D+", A1_freq, ifelse(CS_RightLeverName == "D+", A2_freq, NA)),
LP_P50_Low  = ifelse(CS_LeftLeverName == "B+-", A1_freq, ifelse(CS_RightLeverName == "B+-", A2_freq, NA)),
# LP_P100_Low_dur  = ifelse(CS_LeftLeverName == "D+", A1_dur, ifelse(CS_RightLeverName == "D+", A2_dur, NA)),
# LP_P50_Low_dur  = ifelse(CS_LeftLeverName == "B+-", A1_dur, ifelse(CS_RightLeverName == "B+-", A2_dur, NA)),
CS_P100_Low = ifelse(CS_LeftLeverName == "D+", ifelse(Left_LeverCueID == "Click",
Click_freq, ifelse(Left_LeverCueID == "Noise", Noise_freq,
ifelse(Left_LeverCueID == "Tone", Tone_freq,
ifelse(Left_LeverCueID == "Siren", Siren_freq, NA )))),
ifelse(CS_RightLeverName == "D+", ifelse(Right_LeverCueID == "Click",
Click_freq, ifelse(Right_LeverCueID == "Noise", Noise_freq,
ifelse(Right_LeverCueID == "Tone", Tone_freq,
ifelse(Right_LeverCueID == "Siren", Siren_freq, NA ))))) ),
CS_P50_Low = ifelse(CS_LeftLeverName == "B+-", ifelse(Left_LeverCueID == "Click",
Click_freq, ifelse(Left_LeverCueID == "Noise", Noise_freq,
ifelse(Left_LeverCueID == "Tone", Tone_freq,
ifelse(Left_LeverCueID == "Siren", Siren_freq, NA )))),
ifelse(CS_RightLeverName == "B+-", ifelse(Right_LeverCueID == "Click",
Click_freq, ifelse(Right_LeverCueID == "Noise", Noise_freq,
ifelse(Right_LeverCueID == "Tone", Tone_freq,
ifelse(Right_LeverCueID == "Siren", Siren_freq, NA ))))) ),
) %>%
ungroup()
data_Low_100Vs50_long <- data_Low_100Vs50 %>%
pivot_longer(c(LP_P100_Low, LP_P50_Low, CS_P100_Low, CS_P50_Low), names_to = c("measure", "Probability", "Value"), names_sep = "_" ,values_to = "Freq")
# Test Data Create average session data
CRF_data_P100_HighvsLow_long_Avg <- data_P100_HighvsLow_long %>%
group_by(TestCondition, Day, subject, measure, Value, Probability) %>%
summarise(Freq = sum(Freq))
CRF_data_P50_HighvsLow_long_Avg <- data_P50_HighvsLow_long %>%
group_by(TestCondition, Day, subject, measure, Value, Probability) %>%
summarise(Freq = sum(Freq))
CRF_data_High_100Vs50_long_Avg <- data_High_100Vs50_long %>%
group_by(TestCondition, Day, subject, measure, Value, Probability) %>%
summarise(Freq = sum(Freq))
CRF_data_Low_100Vs50_long_Avg <- data_Low_100Vs50_long %>%
group_by(TestCondition, Day, subject, measure, Value, Probability) %>%
summarise(Freq = sum(Freq))
CRF_data_P50_HighvsLow_long_Avg <- data_P50_HighvsLow_long %>%
group_by(TestCondition, Day, subject, measure, Value, Probability) %>%
summarise(Freq = sum(Freq))
data_P50_HighvsLow_long
data_P50_HighvsLow_long
# Separate each condition for separate analysis
data_P50_HighVsLow <- rawdata %>%
filter(TestCondition=="P50_HighVsLow")
## Recode lever identity and reward identity based on counterbalancing
data_P50_HighVsLow <- data_P50_HighVsLow %>%
group_by(Day, subject) %>%
mutate(LP_P50_High  = ifelse(CS_LeftLeverName == "A++--", A1_freq, ifelse(CS_RightLeverName == "A++--", A2_freq, NA)),
LP_P50_Low  = ifelse(CS_LeftLeverName == "B+-", A1_freq, ifelse(CS_RightLeverName == "B+-", A2_freq, NA)),
# LP_P50_High_dur  = ifelse(CS_LeftLeverName == "A++--", A1_dur, ifelse(CS_RightLeverName == "A++--", A2_dur, NA)),
# LP_P50_Low_dur  = ifelse(CS_LeftLeverName == "B+-", A1_dur, ifelse(CS_RightLeverName == "B+-", A2_dur, NA)),
CS_P50_High = ifelse(CS_LeftLeverName == "A++--", ifelse(Left_LeverCueID == "Click",
Click_freq, ifelse(Left_LeverCueID == "Noise", Noise_freq,
ifelse(Left_LeverCueID == "Tone", Tone_freq,
ifelse(Left_LeverCueID == "Siren", Siren_freq, NA )))),
ifelse(CS_RightLeverName == "A++--", ifelse(Right_LeverCueID == "Click",
Click_freq, ifelse(Right_LeverCueID == "Noise", Noise_freq,
ifelse(Right_LeverCueID == "Tone", Tone_freq,
ifelse(Right_LeverCueID == "Siren", Siren_freq, NA ))))) ),
CS_P50_Low = ifelse(CS_LeftLeverName == "B+-", ifelse(Left_LeverCueID == "Click",
Click_freq, ifelse(Left_LeverCueID == "Noise", Noise_freq,
ifelse(Left_LeverCueID == "Tone", Tone_freq,
ifelse(Left_LeverCueID == "Siren", Siren_freq, NA )))),
ifelse(CS_RightLeverName == "B+-", ifelse(Right_LeverCueID == "Click",
Click_freq, ifelse(Right_LeverCueID == "Noise", Noise_freq,
ifelse(Right_LeverCueID == "Tone", Tone_freq,
ifelse(Right_LeverCueID == "Siren", Siren_freq, NA ))))) ),
) %>%
ungroup()
data_P50_HighVsLow_long <- data_P50_HighVsLow %>%
pivot_longer(c(LP_P50_High, LP_P50_Low, CS_P50_High, CS_P50_Low), names_to = c("measure", "Probability", "Value"), names_sep = "_" ,values_to = "Freq")
data_P50_HighVsLow_long
data_P50_HighVsLow_long
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/Plot_2_CRF.R', echo=TRUE)
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/Plot_2_CRF.R', echo=TRUE)
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/Plot_2_CRF.R', echo=TRUE)
CRF_data_P50_HighVsLow_long_Avg
CRF_data_P50_HighVsLow_long_Avg
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/Plot_2_CRF.R', echo=TRUE)
testdata_All_LP_PercDiff
testdata_All_LP_Diff
testdata_All_LP_PercDiff <- CRF_ALL_data_long_Avg %>%
filter(measure == "LP",
Value == "PercDiff",
ExcludeSubject == "Keep") %>%
ggplot(mapping = aes(x = as.factor(TestCondition), y = Freq, group = TestCondition, colour = TestCondition, fill = TestCondition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("All tests") + xlab("Test Condition") + ylab("Percent Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_All_LP_PercDiff
testdata_All_LP_Diff <- CRF_ALL_data_long_Avg %>%
filter(measure == "LP",
Value == "Diff",
ExcludeSubject == "Keep") %>%
ggplot(mapping = aes(x = as.factor(TestCondition), y = Freq, group = TestCondition, colour = TestCondition, fill = TestCondition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,100020)) +
ggtitle("All tests") + xlab("Test Condition") + ylab("LP Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_All_LP_Diff
testdata_All_LP_Diff <- CRF_ALL_data_long_Avg %>%
filter(measure == "LP",
Value == "Diff",
ExcludeSubject == "Keep") %>%
ggplot(mapping = aes(x = as.factor(TestCondition), y = Freq, group = TestCondition, colour = TestCondition, fill = TestCondition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("All tests") + xlab("Test Condition") + ylab("LP Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_All_LP_Diff
testdata_All_LP_Diff
testdata_All_LP_PercDiff
## Test Data - LP differences All conditions
A <- testdata_All_LP_Diff + theme(legend.position= c(0.05,.90),
legend.justification='left',
legend.direction='vertical')
B <- testdata_All_LP_PercDiff + theme(legend.position= c(0.05,.90),
legend.justification='left',
legend.direction='vertical')
CRF_Test_LPDiff_All <- (A + B ) + plot_annotation(tag_levels = 'A') + plot_layout(nrow = 2, ncol = 1, widths = c(1, 1))
filename = here("figures", "CRF_Test_LPDiff_All.png")
ggsave(filename, CRF_Test_LPDiff_All, width = 160, height = 160, units = "mm", dpi = 1200)
filename = here("figures", "CRF_Test_LPDiff_All.png")
ggsave(filename, CRF_Test_LPDiff_All, width = 90, height = 160, units = "mm", dpi = 1200)
ggsave(filename, CRF_Test_LPDiff_All, width = 100, height = 180, units = "mm", dpi = 1200)
## Test Data - LP differences All conditions
A <- testdata_All_LP_Diff + theme(legend.position= element_blank())
A
## Test Data - LP differences All conditions
A <- testdata_All_LP_Diff + theme(legend.position = "none")
B <- testdata_All_LP_PercDiff + theme(legend.position = "none")
CRF_Test_LPDiff_All <- (A + B ) + plot_annotation(tag_levels = 'A') + plot_layout(nrow = 2, ncol = 1, widths = c(1, 1))
filename = here("figures", "CRF_Test_LPDiff_All.png")
ggsave(filename, CRF_Test_LPDiff_All, width = 100, height = 180, units = "mm", dpi = 1200)
ggsave(filename, CRF_Test_LPDiff_All, width = 120, height = 180, units = "mm", dpi = 1200)
# Plot Test All Conditions Difference scores ------------------------------
testdata_All_LP_PercDiff <- CRF_ALL_data_long_Avg %>%
filter(measure == "LP",
Value == "PercDiff",
ExcludeSubject == "Keep") %>%
ggplot(mapping = aes(x = as.factor(TestCondition), y = Freq, group = TestCondition, colour = TestCondition, fill = TestCondition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("Percent Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_All_LP_PercDiff
testdata_All_LP_Diff <- CRF_ALL_data_long_Avg %>%
filter(measure == "LP",
Value == "Diff",
ExcludeSubject == "Keep") %>%
ggplot(mapping = aes(x = as.factor(TestCondition), y = Freq, group = TestCondition, colour = TestCondition, fill = TestCondition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("LP Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_All_LP_Diff
## Test Data - LP differences All conditions
A <- testdata_All_LP_Diff + theme(legend.position = "none")
B <- testdata_All_LP_PercDiff + theme(legend.position = "none")
CRF_Test_LPDiff_All <- (A + B ) + plot_annotation(tag_levels = 'A') + plot_layout(nrow = 2, ncol = 1, widths = c(1, 1))
filename = here("figures", "CRF_Test_LPDiff_All.png")
ggsave(filename, CRF_Test_LPDiff_All, width = 120, height = 180, units = "mm", dpi = 1200)
testdata_All_LP_PercDiff <- CRF_ALL_data_long_Avg %>%
filter(measure == "LP",
Value == "PercDiff",
ExcludeSubject == "Keep") %>%
ggplot(mapping = aes(x = as.factor(TestCondition), y = Freq, group = TestCondition, colour = TestCondition, fill = TestCondition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3, width = 0.1) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("Percent Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_All_LP_PercDiff
testdata_All_LP_PercDiff <- CRF_ALL_data_long_Avg %>%
filter(measure == "LP",
Value == "PercDiff",
ExcludeSubject == "Keep") %>%
ggplot(mapping = aes(x = as.factor(TestCondition), y = Freq, group = TestCondition, colour = TestCondition, fill = TestCondition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3, width = 0.9) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("Percent Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_All_LP_PercDiff
testdata_All_LP_PercDiff <- CRF_ALL_data_long_Avg %>%
filter(measure == "LP",
Value == "PercDiff",
ExcludeSubject == "Keep") %>%
ggplot(mapping = aes(x = as.factor(TestCondition), y = Freq, group = TestCondition, colour = TestCondition, fill = TestCondition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3, idth=0.1, position = position_dodge(width=0.2)) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("Percent Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_All_LP_PercDiff
testdata_All_LP_PercDiff <- CRF_ALL_data_long_Avg %>%
filter(measure == "LP",
Value == "PercDiff",
ExcludeSubject == "Keep") %>%
ggplot(mapping = aes(x = as.factor(TestCondition), y = Freq, group = TestCondition, colour = TestCondition, fill = TestCondition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar",  size = .3 , width=0.1, position = position_dodge(width=0.2)) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("Percent Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_All_LP_PercDiff
testdata_All_LP_PercDiff <- CRF_ALL_data_long_Avg %>%
filter(measure == "LP",
Value == "PercDiff",
ExcludeSubject == "Keep") %>%
ggplot(mapping = aes(x = as.factor(TestCondition), y = Freq, group = TestCondition, colour = TestCondition, fill = TestCondition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar",  size = .3 , width=0.9, position = position_dodge(width=0.2)) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("Percent Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_All_LP_PercDiff
testdata_All_LP_PercDiff <- CRF_ALL_data_long_Avg %>%
filter(measure == "LP",
Value == "PercDiff",
ExcludeSubject == "Keep") %>%
ggplot(mapping = aes(x = as.factor(TestCondition), y = Freq, group = TestCondition, colour = TestCondition, fill = TestCondition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar",  size = .3 , width=0.9, position = position_dodge(width=0.9)) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("Percent Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_All_LP_PercDiff
testdata_All_LP_PercDiff <- CRF_ALL_data_long_Avg %>%
filter(measure == "LP",
Value == "PercDiff",
ExcludeSubject == "Keep") %>%
ggplot(mapping = aes(x = as.factor(TestCondition), y = Freq, group = TestCondition, colour = TestCondition, fill = TestCondition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("Percent Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_All_LP_PercDiff
testdata_All_LP_Diff <- CRF_ALL_data_long_Avg %>%
filter(measure == "LP",
Value == "Diff",
ExcludeSubject == "Keep") %>%
ggplot(mapping = aes(x = as.factor(TestCondition), y = Freq, group = TestCondition, colour = TestCondition, fill = TestCondition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("LP Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
ggsave(filename, CRF_Test_LPDiff_All, width = 90, height = 180, units = "mm", dpi = 1200)
ggsave(filename, CRF_Test_LPDiff_All, width = 120, height = 210, units = "mm", dpi = 1200)
filename = here("figures", "CRF_Test_LPDiff_All.png")
ggsave(filename, CRF_Test_LPDiff_All, width = 120, height = 210, units = "mm", dpi = 1200)
ggsave(filename, CRF_Test_LPDiff_All, width = 120, height = 800, units = "mm", dpi = 1200)
ggsave(filename, CRF_Test_LPDiff_All, width = 120, height = 300, units = "mm", dpi = 1200)
ggsave(filename, CRF_Test_LPDiff_All, width = 120, height = 200, units = "mm", dpi = 1200)
ggsave(filename, CRF_Test_LPDiff_All, width = 120, height = 160, units = "mm", dpi = 1200)
