full_data <- read_csv("../rawdata/Anaesthetized_rawdata.csv")
# Pre vs Post Injection Analysis - Raw
# Filter the relevant stage of data for analysis
data_subset <- full_data %>%
filter(ExperimentalStage == "04_Baseline2_Pre" | ExperimentalStage == "05_Baseline_Post") %>%
separate(ExperimentalStage, c("stagenumber", "stagename", "injectiontime"))
## Peak DA
anova <- aov_4(DA_max ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_Peak <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
full_data <- read_csv("../rawdata/Anaesthetized_rawdata.csv")
# Pre vs Post Injection Analysis - Raw
# Filter the relevant stage of data for analysis
data_subset <- full_data %>%
filter(ExperimentalStage == "04_Baseline2_Pre" | ExperimentalStage == "05_Baseline_Post") %>%
separate(ExperimentalStage, c("stagenumber", "stagename", "injectiontime"))
## Peak DA
anova <- aov_4(DA_max ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_Peak <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
## AUC
anova <- aov_4(DA_AUC ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_AUC <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
## Latency
anova <- aov_4(DA_Latency_s ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_Latency <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
anova_print_PrePost_Peak
anova_print_PrePost_AUC
anova <- aov_4(DA_Latency_s ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_Latency <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
anova_print_PrePost_Latency
anova <- aov_4(DA_max ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_Peak <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~drugs*injectiontime)
simple_print <- apa_print.emmGrid(pairs(simple, adjust = "tukey"))
simple_print
simple <- emmeans(anova, ~drugs*injectiontime)
simple_print <- apa_print.emmGrid(contrast(simple, interaction = "simple", adjust = "tukey"))
simple_print <- apa_print.emmGrid(contrast(simple, by = injectiontime, interaction = "simple", adjust = "tukey"))
simple_print <- apa_print.emmGrid(contrast(simple, by = injectiontime, interaction = "pairwise", adjust = "tukey"))
# Pre vs Post Injection Analysis - Raw
# Filter the relevant stage of data for analysis
data_subset <- full_data %>%
filter(ExperimentalStage == "04_Baseline2_Pre" | ExperimentalStage == "05_Baseline_Post") %>%
separate(ExperimentalStage, c("stagenumber", "stagename", "injectiontime"))
## Peak DA
anova <- aov_4(DA_max ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_Peak <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~drugs*injectiontime)
simple_print <- apa_print.emmGrid(contrast(simple, by = injectiontime, interaction = "pairwise", adjust = "tukey"))
simple_print <- apa_print.emmGrid(contrast(simple, by = drugs, interaction = "pairwise", adjust = "tukey"))
simple_print <- apa_print.emmGrid(contrast(simple, by = "drugs", interaction = "pairwise", adjust = "tukey"))
simple_print
anova <- aov_4(DA_AUC ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_AUC <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~drugs*injectiontime)
simple_print <- apa_print.emmGrid(contrast(simple, by = "drugs", interaction = "pairwise", adjust = "tukey"))
simple_print
anova <- aov_4(DA_Latency_s ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_Latency <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~drugs*injectiontime)
simple_print <- apa_print.emmGrid(contrast(simple, by = "drugs", interaction = "pairwise", adjust = "tukey"))
simple_print
full_data <- read_csv("../rawdata/Anaesthetized_rawdata.csv")
# Pre vs Post Injection Analysis - Raw
# Filter the relevant stage of data for analysis
data_subset <- full_data %>%
filter(ExperimentalStage == "04_Baseline2_Pre" | ExperimentalStage == "05_Baseline_Post") %>%
separate(ExperimentalStage, c("stagenumber", "stagename", "injectiontime"))
## Peak DA
anova <- aov_4(DA_max ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_Peak <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~drugs*injectiontime)
simple_print_PrePost_Peak <- apa_print.emmGrid(contrast(simple, by = "drugs", interaction = "pairwise", adjust = "tukey"))
## AUC
anova <- aov_4(DA_AUC ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_AUC <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~drugs*injectiontime)
simple_print_PrePost_AUC <- apa_print.emmGrid(contrast(simple, by = "drugs", interaction = "pairwise", adjust = "tukey"))
## Latency
anova <- aov_4(DA_Latency_s ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_Latency <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
full_data <- read_csv("../rawdata/Anaesthetized_rawdata.csv")
# Pre vs Post Injection Analysis - Raw
# Filter the relevant stage of data for analysis
data_subset <- full_data %>%
filter(ExperimentalStage == "04_Baseline2_Pre" | ExperimentalStage == "05_Baseline_Post") %>%
separate(ExperimentalStage, c("stagenumber", "stagename", "injectiontime"))
## Peak DA
anova <- aov_4(DA_max ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_Peak <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~drugs*injectiontime)
simple_print_PrePost_Peak <- apa_print.emmGrid(contrast(simple, by = "drugs", interaction = "pairwise", adjust = "tukey"))
## AUC
anova <- aov_4(DA_AUC ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_AUC <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~drugs*injectiontime)
simple_print_PrePost_AUC <- apa_print.emmGrid(contrast(simple, by = "drugs", interaction = "pairwise", adjust = "tukey"))
## Latency
anova <- aov_4(DA_Latency_s ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_Latency <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
full_data <- read_csv("../rawdata/Anaesthetized_rawdata.csv")
# Pre vs Post Injection Analysis - Raw
# Filter the relevant stage of data for analysis
data_subset <- full_data %>%
filter(ExperimentalStage == "04_Baseline2_Pre" | ExperimentalStage == "05_Baseline_Post") %>%
separate(ExperimentalStage, c("stagenumber", "stagename", "injectiontime"))
## Peak DA
anova <- aov_4(DA_max ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_Peak <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~drugs*injectiontime)
simple_print_PrePost_Peak <- apa_print.emmGrid(contrast(simple, by = "drugs", interaction = "pairwise", adjust = "tukey"))
## AUC
anova <- aov_4(DA_AUC ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_AUC <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~drugs*injectiontime)
simple_print_PrePost_AUC <- apa_print.emmGrid(contrast(simple, by = "drugs", interaction = "pairwise", adjust = "tukey"))
## Latency
anova <- aov_4(DA_Latency_s ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_Latency <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
# Stim Intensity Curve
#Filter the relevant stage of data for analysis
data_subset <- full_data %>%
filter(ExperimentalStage == "06_StimIntensity_Post")
anova <- aov_4(DA_max_PercBaseline ~ drugs + (stimStrength|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_Intenisty_Peak_Perc <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~stimStrength)
simple_print_Intenisty_Peak_Perc  <- apa_print.emmGrid(pairs(simple, adjust = "tukey"))
# Stim Pulses Curve
install.packages(c("diffobj", "openxlsx", "pkgbuild", "ps", "rpf", "scales", "tidyr", "tidyselect", "vctrs"))
knitr::opts_chunk$set(echo = FALSE)
## Packages for data organisation and plotting
library(tidyverse)
# Package for relative file paths
library(here)
# library(ggpubr)
library(cowplot)
library(ggsignif)
library(patchwork)
################################################################################
## Packages for Data analysis
library(afex)
afex_options(emmeans_model = "multivariate")# use multivariate model for all follow-up tests.
library(emmeans)
# install.packages("devtools")
# devtools::install_github("crsh/papaja")
library(papaja)
library(knitr)
# remotes::install_github("noamross/redoc")
# library(redoc)
full_data <- read_csv("../rawdata/Anaesthetized_rawdata.csv")
## 02_StimIntensity_Pre ----
##Filter the relevant stage of data for analysis
data_subset_ <- full_data %>%
filter(ExperimentalStage == "02_StimIntensity_Pre")
# Intensity - PreInjection ====
##Peak
anova <- aov_4(DA_max ~ drugs + (stimStrength|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
#Load Data
full_data <- read_csv(here("rawdata", "/LY354740_TMaze_Expt1_rawdata.csv"))
# Delay 0s data only
short_data <- full_data %>%
filter(Delay == "0")
# Stats - Accuracy
anova <- aov_4(Accuracy ~ (Drug|Subj), data = short_data, anova_table = list(correction = "none", es = "pes"))
anova_print <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simpledrug <- emmeans(anova, ~Drug)
simpledrug_print <- apa_print.emmGrid(contrast(simpledrug, method = "pairwise", simple = "Drug", adjust = "tukey"))
# Stats - Latency Sample
anova_latencySample <- aov_4(Latency_Sample ~ (Drug|Subj), data = short_data, anova_table = list(correction = "none", es = "pes"))
anova_latencySample_print <- apa_print(anova_latencySample, mse = "FALSE",correction = "none",es = "pes")
simpledrug_latencySample <- emmeans(anova_latencySample, ~Drug)
simpledrug_latencySample_print <- apa_print.emmGrid(contrast(simpledrug_latencySample, method = "pairwise", simple = "Drug", adjust = "tukey"))
# Stats - Latency Choice
# Stats - Latency Choice
anova_latencyChoice <- aov_4(Latency_Choice ~ (Drug|Subj), data = short_data, anova_table = list(correction = "none", es = "pes"))
anova_latencyChoice_print <- apa_print(anova_latencyChoice, mse = "FALSE",correction = "none",es = "pes")
simpledrug_latencyChoice <- emmeans(anova_latencyChoice, ~Drug)
simpledrug_latencyChoice_print <- apa_print.emmGrid(contrast(simpledrug_latencyChoice, method = "pairwise", simple = "Drug", adjust = "tukey"))
# anova_print$table
# simpledrug_print$table
#
# anova_latencySample_print$table
# simpledrug_latencySample_print$table
#
# anova_latencyChoice_print$table
simpledrug_latencyChoice_print$statistic$NoInj_X10mgkg
simpledrug_latencyChoice_print$statistic$X1mgkg_X10mgkg
install.packages(c("backports", "glue", "lavaan", "officer", "openxlsx"))
knitr::opts_chunk$set(echo = FALSE)
## Packages for data organisation and plotting
library(tidyverse)
# Package for relative file paths
library(here)
# library(ggpubr)
library(cowplot)
library(ggsignif)
library(patchwork)
################################################################################
## Packages for Data analysis
library(afex)
afex_options(emmeans_model = "multivariate")# use multivariate model for all follow-up tests.
library(emmeans)
# install.packages("devtools")
# devtools::install_github("crsh/papaja")
library(papaja)
library(knitr)
# remotes::install_github("noamross/redoc")
# library(redoc)
#Load Data
full_data <- read_csv(here("rawdata", "/LY354740_TMaze_Expt1_rawdata.csv"))
# Delay 0s data only
short_data <- full_data %>%
filter(Delay == "0")
# Stats - Accuracy
anova <- aov_4(Accuracy ~ (Drug|Subj), data = short_data, anova_table = list(correction = "none", es = "pes"))
anova_print <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simpledrug <- emmeans(anova, ~Drug)
simpledrug_print <- apa_print.emmGrid(contrast(simpledrug, method = "pairwise", simple = "Drug", adjust = "tukey"))
# Stats - Latency Sample
anova_latencySample <- aov_4(Latency_Sample ~ (Drug|Subj), data = short_data, anova_table = list(correction = "none", es = "pes"))
anova_latencySample_print <- apa_print(anova_latencySample, mse = "FALSE",correction = "none",es = "pes")
simpledrug_latencySample <- emmeans(anova_latencySample, ~Drug)
simpledrug_latencySample_print <- apa_print.emmGrid(contrast(simpledrug_latencySample, method = "pairwise", simple = "Drug", adjust = "tukey"))
# Stats - Latency Choice
# Stats - Latency Choice
anova_latencyChoice <- aov_4(Latency_Choice ~ (Drug|Subj), data = short_data, anova_table = list(correction = "none", es = "pes"))
anova_latencyChoice_print <- apa_print(anova_latencyChoice, mse = "FALSE",correction = "none",es = "pes")
simpledrug_latencyChoice <- emmeans(anova_latencyChoice, ~Drug)
simpledrug_latencyChoice_print <- apa_print.emmGrid(contrast(simpledrug_latencyChoice, method = "pairwise", simple = "Drug", adjust = "tukey"))
# anova_print$table
# simpledrug_print$table
#
# anova_latencySample_print$table
# simpledrug_latencySample_print$table
#
# anova_latencyChoice_print$table
# simpledrug_latencyChoice_print$table
unique(full_data$Subj)
unique(full_data$Subj) %>% summarise(count = n())
levels(unique(full_data$Subj))
levels(full_data$Subj)
levels(as.factor(full_data$Subj))
count(as.factor(full_data$Subj))
unique(full_data$Subj)
<-
full_data <- read_csv(here("rawdata", "/LY354740_Expt3_Locomotor_FoodDep.csv"))
unique(full_data$Subj)
full_data <- read_csv(here("rawdata", "/LY354740_Expt4_Locomotor_AdLib.csv"))
unique(full_data$Subj)
unique(full_data$Subj)
full_data <- read_csv(here("rawdata", "/LY354740_Expt5_Locomotor_FoodDepAmphDose.csv"))
unique(full_data$Subj)
unique(full_data$Subj)
full_data <- read_csv("../rawdata/Anaesthetized_rawdata.csv")
unique(full_data$Subj)
unique(full_data$subj)
#Read in the data as global variable
full_data <- read_csv("../rawdata/AwakeVarReward_rawdata.csv")
unique(full_data$subj)
unique(full_data$subject)
full_data <- full_data %>%
filter(include == TRUE)
#Filter the relevant stage of data for analysis
data_subset <- full_data
unique(full_data$subject)
install.packages(c("afex", "cowplot", "emmeans", "ggsignif", "here", "knitr", "patchwork", "tidyverse"))
install.packages(c("backports", "glue", "maptools"))
install.packages("devtools")
devtools::install_github("crsh/papaja")
install.packages("devtools")
devtools::install_github("crsh/papaja")
# library(ggpub
install.packages("devtools")
knitr::opts_chunk$set(echo = FALSE)
## Packages for data organisation and plotting
library(tidyverse)
# Package for relative file paths
library(here)
# library(ggpubr)
library(cowplot)
library(ggsignif)
library(patchwork)
################################################################################
## Packages for Data analysis
library(afex)
afex_options(emmeans_model = "multivariate")# use multivariate model for all follow-up tests.
library(emmeans)
# install.packages("devtools")
# devtools::install_github("crsh/papaja")
library(papaja)
library(knitr)
# remotes::install_github("noamross/redoc")
# library(redoc)
install.packages(c("backports", "bookdown", "glue", "maptools"))
install.packages(c("backports", "bookdown", "glue", "maptools"))
install.packages(c("backports", "bookdown", "glue", "maptools"))
install.packages(c("backports", "bookdown", "glue", "maptools"))
knitr::opts_chunk$set(echo = FALSE)
## Packages for data organisation and plotting
library(tidyverse)
# Package for relative file paths
library(here)
# library(ggpubr)
library(cowplot)
library(ggsignif)
library(patchwork)
################################################################################
## Packages for Data analysis
library(afex)
afex_options(emmeans_model = "multivariate")# use multivariate model for all follow-up tests.
library(emmeans)
# install.packages("devtools")
# devtools::install_github("crsh/papaja")
library(papaja)
library(knitr)
# remotes::install_github("noamross/redoc")
# library(redoc)
#Load Data
full_data <- read_csv(here("rawdata", "/LY354740_TMaze_Expt1_rawdata.csv"))
# Delay 0s data only
short_data <- full_data %>%
filter(Delay == "0")
# Stats - Accuracy
anova <- aov_4(Accuracy ~ (Drug|Subj), data = short_data, anova_table = list(correction = "none", es = "pes"))
anova_print <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
library(emmeans)
install.packages("devtools")
devtools::install_github("crsh/papaja")
library(papaja)
knitr::opts_chunk$set(echo = FALSE)
## Packages for data organisation and plotting
library(tidyverse)
# Package for relative file paths
library(here)
# library(ggpubr)
library(cowplot)
library(ggsignif)
library(patchwork)
################################################################################
## Packages for Data analysis
library(afex)
afex_options(emmeans_model = "multivariate")# use multivariate model for all follow-up tests.
library(emmeans)
# install.packages("devtools")
# devtools::install_github("crsh/papaja")
library(papaja)
library(knitr)
# remotes::install_github("noamross/redoc")
# library(redoc)
#Load Data
full_data <- read_csv(here("rawdata", "/LY354740_TMaze_Expt1_rawdata.csv"))
# Delay 0s data only
short_data <- full_data %>%
filter(Delay == "0")
# Stats - Accuracy
anova <- aov_4(Accuracy ~ (Drug|Subj), data = short_data, anova_table = list(correction = "none", es = "pes"))
anova_print <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simpledrug <- emmeans(anova, ~Drug)
simpledrug_print <- apa_print.emmGrid(contrast(simpledrug, method = "pairwise", simple = "Drug", adjust = "tukey"))
apa_print(emmGrid(contrast(simpledrug, method = "pairwise", simple = "Drug", adjust = "tukey")))
simpledrug_print <- apa_print(contrast(simpledrug, method = "pairwise", simple = "Drug", adjust = "tukey"))
simpledrug_print
??apa_print.emmGrid
apa_print.emmGrid(contrast(simpledrug, method = "pairwise", simple = "Drug", adjust = "tukey"))
simpledrug_print
simpledrug_print$table
simpledrug_print$statistic$NoInj_X10mgkg
knitr::opts_chunk$set(echo = FALSE)
## Packages for data organisation and plotting
library(tidyverse)
# Package for relative file paths
library(here)
# library(ggpubr)
library(cowplot)
library(ggsignif)
library(patchwork)
################################################################################
## Packages for Data analysis
library(afex)
afex_options(emmeans_model = "multivariate")# use multivariate model for all follow-up tests.
library(emmeans)
# install.packages("devtools")
# devtools::install_github("crsh/papaja")
library(papaja)
library(knitr)
# remotes::install_github("noamross/redoc")
# library(redoc)
#Load Data
full_data <- read_csv(here("rawdata", "/LY354740_TMaze_Expt1_rawdata.csv"))
# Delay 0s data only
short_data <- full_data %>%
filter(Delay == "0")
# Stats - Accuracy
anova <- aov_4(Accuracy ~ (Drug|Subj), data = short_data, anova_table = list(correction = "none", es = "pes"))
anova_print <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simpledrug <- emmeans(anova, ~Drug)
simpledrug_print <- apa_print(contrast(simpledrug, method = "pairwise", simple = "Drug", adjust = "tukey"))
# Stats - Latency Sample
anova_latencySample <- aov_4(Latency_Sample ~ (Drug|Subj), data = short_data, anova_table = list(correction = "none", es = "pes"))
anova_latencySample_print <- apa_print(anova_latencySample, mse = "FALSE",correction = "none",es = "pes")
simpledrug_latencySample <- emmeans(anova_latencySample, ~Drug)
simpledrug_latencySample_print <- apa_print(contrast(simpledrug_latencySample, method = "pairwise", simple = "Drug", adjust = "tukey"))
# Stats - Latency Choice
# Stats - Latency Choice
anova_latencyChoice <- aov_4(Latency_Choice ~ (Drug|Subj), data = short_data, anova_table = list(correction = "none", es = "pes"))
anova_latencyChoice_print <- apa_print(anova_latencyChoice, mse = "FALSE",correction = "none",es = "pes")
simpledrug_latencyChoice <- emmeans(anova_latencyChoice, ~Drug)
simpledrug_latencyChoice_print <- apa_print(contrast(simpledrug_latencyChoice, method = "pairwise", simple = "Drug", adjust = "tukey"))
# anova_print$table
# simpledrug_print$table
#
# anova_latencySample_print$table
# simpledrug_latencySample_print$table
#
# anova_latencyChoice_print$table
# simpledrug_latencyChoice_print$table
#Load Data
full_data <- read_csv(here("rawdata", "/LY354740_TMaze_Expt1_rawdata.csv"))
# Delay 0s data only
short_data <- full_data %>%
filter(Delay == "0")
# Stats - Accuracy
anova <- aov_4(Accuracy ~ (Drug|Subj), data = short_data, anova_table = list(correction = "none", es = "pes"))
anova_print <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simpledrug <- emmeans(anova, ~Drug)
simpledrug_print <- apa_print(contrast(simpledrug, method = "pairwise", simple = "Drug", adjust = "tukey"))
# Stats - Latency Sample
anova_latencySample <- aov_4(Latency_Sample ~ (Drug|Subj), data = short_data, anova_table = list(correction = "none", es = "pes"))
anova_latencySample_print <- apa_print(anova_latencySample, mse = "FALSE",correction = "none",es = "pes")
simpledrug_latencySample <- emmeans(anova_latencySample, ~Drug)
simpledrug_latencySample_print <- apa_print(contrast(simpledrug_latencySample, method = "pairwise", simple = "Drug", adjust = "tukey"))
# Stats - Latency Choice
# Stats - Latency Choice
anova_latencyChoice <- aov_4(Latency_Choice ~ (Drug|Subj), data = short_data, anova_table = list(correction = "none", es = "pes"))
anova_latencyChoice_print <- apa_print(anova_latencyChoice, mse = "FALSE",correction = "none",es = "pes")
simpledrug_latencyChoice <- emmeans(anova_latencyChoice, ~Drug)
simpledrug_latencyChoice_print <- apa_print(contrast(simpledrug_latencyChoice, method = "pairwise", simple = "Drug", adjust = "tukey"))
# anova_print$table
# simpledrug_print$table
#
# anova_latencySample_print$table
# simpledrug_latencySample_print$table
#
# anova_latencyChoice_print$table
# simpledrug_latencyChoice_print$table
simpledrug_latencySample_print$statistic$NoInj_X10mgkg
simpledrug_latencySample_print$statistic$x1mgkg_x10mgkg
simpledrug_latencySample_print$statistic
simpledrug_latencySample_print$statistic$X1mgkg_X10mgkg
simpledrug_latencySample_print$statistic$X1mgkg_X10mgkg
full_data <- read_csv(here("rawdata", "/LY354740_Expt4_Locomotor_AdLib.csv"))
#####
## Baseline data
baseline_data_10mins <- full_data %>%
group_by(Subj, Drug, Amph, LY, Period, bin10mins) %>%
summarise(activity = sum(activity)) %>%
ungroup() %>%
group_by(Subj) %>%
mutate(activity_perc = activity/activity[bin10mins=="0"]) %>%
ungroup() %>%
filter(bin10mins < 1) %>%
mutate(bin10mins = as.factor(bin10mins))
# Stats - 10 mins
anova_baseline <- aov_4(activity ~ Amph*LY + (bin10mins|Subj), data = baseline_data_10mins, anova_table = list(correction = "none", es = "pes"))
anova_baselineprint <- apa_print(anova_baseline, mse = "FALSE",correction = "none",es = "pes")
#####
data_10mins <- full_data %>%
group_by(Subj, Drug, Amph, LY, Period, bin10mins) %>%
summarise(activity = sum(activity)) %>%
ungroup() %>%
group_by(Subj) %>%
mutate(activity_perc = activity/activity[bin10mins=="0"]) %>%
ungroup() %>%
filter(bin10mins < 13 &
bin10mins > 0) %>%
mutate(bin10mins = as.factor(bin10mins))
data_60mins <- full_data %>%
group_by(Subj, Drug, Amph, LY, Period, bin60mins) %>%
summarise(activity = sum(activity)) %>%
ungroup() %>%
group_by(Subj) %>%
mutate(activity_perc = activity/activity[bin60mins=="0"]) %>%
ungroup() %>%
filter(bin60mins < 3 &
bin60mins > 0) %>%
mutate(bin60mins = as.factor(bin60mins))
# Stats - 10 mins
anova <- aov_4(activity ~ Amph*LY + (bin10mins|Subj), data = data_10mins, anova_table = list(correction = "none", es = "pes"))
anova_print <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~Amph*LY*bin10mins)
simple_print <- apa_print(contrast(simple, by = "bin10mins", interaction = "pairwise", adjust = "tukey"))
simple2 <- emmeans(anova, ~Amph*LY*bin10mins)
simple2_print <- apa_print(contrast(simple2, by = c("Amph","bin10mins"), interaction = "pairwise", adjust = "tukey"))
# Stats - 60 mins follow up tests
anova_60 <- aov_4(activity ~ Amph*LY + (bin60mins|Subj), data = data_60mins, anova_table = list(correction = "none", es = "pes"))
anova_60_print <- apa_print(anova_60, mse = "FALSE",correction = "none",es = "pes")
simple_60 <- emmeans(anova_60, ~Amph*LY*bin60mins)
simple_60_print <- apa_print(contrast(simple_60, by = "bin60mins", interaction = "pairwise", adjust = "tukey"))
simple2_60 <- emmeans(anova_60, ~Amph*LY*bin60mins)
simple2_60_print <- apa_print(contrast(simple2_60, by = c("Amph","bin60mins"), interaction = "pairwise", adjust = "tukey"))
#####
# #
# anova_baselineprint$table
# #
# anova_print$table
# #
# simple_60_print$table
# #
# simple2_60_print$table
anova_print$statistic$
ssdf
anova_print$statistic
anova_print$statistic$Amph_LY
