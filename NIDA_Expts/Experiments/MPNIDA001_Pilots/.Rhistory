pivot_longer(c(LPFreq_Devalued, LPDur_Devalued, LPFreq_NonDevalued, LPDur_NonDevalued, Reinforcer_Devalued, Reinforcer_NonDevalued), names_to = c("Measure","Stimulus"), names_sep = "_", values_to = "LP") %>%
pivot_wider(names_from = Measure, values_from = LP)
# Sum responding over time bins
data_Period_long_StimID <- data_bin_long_StimID %>%
group_by(Day, subject, counterbalancing, Pavlovian_cbx, DevaluedOutcome1, DevaluedStimulus, DevaluedLever, Stimulus) %>%
summarise(LPFreq = sum(LPFreq),
LPDur = sum(LPDur),
Reinforcer = sum(Reinforcer)
) %>%
ungroup()
data_Period_long_DevalID <- data_bin_long_DevalID %>%
group_by(Day, subject, counterbalancing, Pavlovian_cbx, DevaluedOutcome1, DevaluedStimulus, DevaluedLever, Stimulus) %>%
summarise(LPFreq = sum(LPFreq),
LPDur = sum(LPDur),
Reinforcer = sum(Reinforcer)
) %>%
ungroup()
#Long format
data_PerSession_long <- data_PerSession %>%
pivot_longer(c(LPFreq_Flash,LPDur_Flash, LPFreq_Steady,LPDur_Steady, Reinforcer_Flash, Reinforcer_Steady), names_to = c("Measure","Stimulus"), names_sep = "_", values_to = "LP") %>%
pivot_wider(names_from = Measure, values_from = LP)
# Save total Experienced reinforcers to csv from first stage and use for determining devaluation coutnerbalancing
AAAcounterbalancingDeval <- data_PerSession_long %>%
group_by(counterbalancing, Pavlovian_cbx, Instrumental_cbx, subject, Stimulus) %>%
summarise(Reinforcer = sum(Reinforcer)) %>%
pivot_wider(names_from = Stimulus, values_from = Reinforcer)
savefolderpath <- here("rawdata","Marios","3_LeverPressingForLights","CombinedData")
savefilename <- "LPL_CounterbalancingDeval.csv"
dir.create(savefolderpath)
write_csv(AAAcounterbalancingDeval,here(savefolderpath,savefilename))
#Long format
data_PerSession_long <- data_PerSession %>%
pivot_longer(c(LPFreq_Flash,LPDur_Flash, LPFreq_Steady,LPDur_Steady, Reinforcer_Flash, Reinforcer_Steady), names_to = c("Measure","Stimulus"), names_sep = "_", values_to = "LP") %>%
pivot_wider(names_from = Measure, values_from = LP)
data_Period_long_DevalID <- data_bin_long_DevalID %>%
group_by(Day, subject, counterbalancing, Pavlovian_cbx, DevaluedOutcome1, DevaluedStimulus, DevaluedLever, Stimulus) %>%
summarise(LPFreq = sum(LPFreq),
LPDur = sum(LPDur),
Reinforcer = sum(Reinforcer)
) %>%
ungroup()
folderpath <- here("rawdata","Marios","3_LeverPressingForLights","CombinedData")
filename <- "LPL_ProcessedData_WithinSession10minBins.csv"
rawdata <- read_csv(here(folderpath,filename))
## Recode lever identity based on counterbalancing
data_recode <- rawdata %>%
group_by(Day, subject) %>%
mutate(LP_Freq_Flash  = ifelse(FLash_leverCbx == "Left", A1_freq, ifelse(FLash_leverCbx == "Right", A2_freq, NA)),
LP_Dur_Flash  = ifelse(FLash_leverCbx == "Left", A1_dur, ifelse(FLash_leverCbx == "Right", A2_dur, NA)),
LP_Freq_Steady  = ifelse(Steady_levercbx == "Left", A1_freq, ifelse(Steady_levercbx == "Right", A2_freq, NA)),
LP_Dur_Steady  = ifelse(Steady_levercbx == "Left", A1_dur, ifelse(Steady_levercbx == "Right", A2_dur, NA)),
DevaluedStimulus = ifelse(DevaluedOutcome1 == Flash_OutcomeID, "Flash", ifelse(DevaluedOutcome1 == Steady_OutcomeID, "Steady", NA)),
NonDevaluedStimulus = ifelse(DevaluedOutcome1 != Flash_OutcomeID, "Flash", ifelse(DevaluedOutcome1 != Steady_OutcomeID, "Steady", NA)),
DevaluedLever = ifelse(DevaluedStimulus == "Flash", FLash_leverCbx , ifelse(DevaluedStimulus == "Steady", Steady_levercbx, NA)),
NonDevaluedLever = ifelse(NonDevaluedStimulus == "Flash", FLash_leverCbx , ifelse(NonDevaluedStimulus == "Steady", Steady_levercbx, NA)),
LP_Freq_Devalued  = ifelse(DevaluedLever == "Left", A1_freq, ifelse(DevaluedLever == "Right", A2_freq, NA)),
LP_Dur_Devalued  = ifelse(DevaluedLever == "Left", A1_dur, ifelse(DevaluedLever == "Right", A2_dur, NA)),
LP_Freq_NonDevalued  = ifelse(NonDevaluedLever == "Left", A1_freq, ifelse(NonDevaluedLever == "Right", A2_freq, NA)),
LP_Dur_NonDevalued  = ifelse(NonDevaluedLever == "Left", A1_dur, ifelse(NonDevaluedLever == "Right", A2_dur, NA)),
Reinforcer_Devalued = ifelse(DevaluedStimulus == "Flash", Flash_freq , ifelse(DevaluedStimulus == "Steady", Steady_freq, NA)),
Reinforcer_NonDevalued = ifelse(NonDevaluedStimulus == "Flash", Flash_freq , ifelse(NonDevaluedStimulus == "Steady", Steady_freq, NA))
) %>%
ungroup()
## relabel data
data_bin <- data_recode %>%
group_by(Day, counterbalancing, Pavlovian_cbx, DevaluedOutcome1, DevaluedStimulus, DevaluedLever, timebins, subject) %>%
summarise(LPFreq_Flash = sum(LP_Freq_Flash),
LPDur_Flash = sum(LP_Dur_Flash),
LPFreq_Steady = sum(LP_Freq_Steady),
LPDur_Steady = sum(LP_Dur_Steady),
Reinforcer_Flash = sum(Flash_freq),
Reinforcer_Steady = sum(Steady_freq),
LPFreq_Devalued = sum(LP_Freq_Devalued),
LPDur_Devalued = sum(LP_Dur_Devalued),
LPFreq_NonDevalued = sum(LP_Freq_NonDevalued),
LPDur_NonDevalued = sum(LP_Dur_NonDevalued),
Reinforcer_Devalued = sum(Reinforcer_Devalued),
Reinforcer_NonDevalued = sum(Reinforcer_NonDevalued)
) %>%
ungroup()
#Long format
data_bin_long_StimID <- data_bin %>%
pivot_longer(c(LPFreq_Flash, LPDur_Flash, LPFreq_Steady, LPDur_Steady, Reinforcer_Flash, Reinforcer_Steady), names_to = c("Measure","Stimulus"), names_sep = "_", values_to = "LP") %>%
pivot_wider(names_from = Measure, values_from = LP)
data_bin_long_DevalID <- data_bin %>%
pivot_longer(c(LPFreq_Devalued, LPDur_Devalued, LPFreq_NonDevalued, LPDur_NonDevalued, Reinforcer_Devalued, Reinforcer_NonDevalued), names_to = c("Measure","Stimulus"), names_sep = "_", values_to = "LP") %>%
pivot_wider(names_from = Measure, values_from = LP)
# Sum responding over time bins
data_Period_long_StimID <- data_bin_long_StimID %>%
group_by(Day, subject, counterbalancing, Pavlovian_cbx, DevaluedOutcome1, DevaluedStimulus, DevaluedLever, Stimulus) %>%
summarise(LPFreq = sum(LPFreq),
LPDur = sum(LPDur),
Reinforcer = sum(Reinforcer)
) %>%
ungroup()
data_Period_long_DevalID <- data_bin_long_DevalID %>%
group_by(Day, subject, counterbalancing, Pavlovian_cbx, DevaluedOutcome1, DevaluedStimulus, DevaluedLever, Stimulus) %>%
summarise(LPFreq = sum(LPFreq),
LPDur = sum(LPDur),
Reinforcer = sum(Reinforcer)
) %>%
ungroup()
# #Long format
# data_PerSession_long <- data_PerSession %>%
#   pivot_longer(c(LPFreq_Flash,LPDur_Flash, LPFreq_Steady,LPDur_Steady, Reinforcer_Flash, Reinforcer_Steady), names_to = c("Measure","Stimulus"), names_sep = "_", values_to = "LP") %>%
#   pivot_wider(names_from = Measure, values_from = LP)
#
# # Save total Experienced reinforcers to csv from first stage and use for determining devaluation coutnerbalancing
# AAAcounterbalancingDeval <- data_PerSession_long %>%
#   group_by(counterbalancing, Pavlovian_cbx, Instrumental_cbx, subject, Stimulus) %>%
#   summarise(Reinforcer = sum(Reinforcer)) %>%
#   pivot_wider(names_from = Stimulus, values_from = Reinforcer)
#
# savefolderpath <- here("rawdata","Marios","3_LeverPressingForLights","CombinedData")
# savefilename <- "LPL_CounterbalancingDeval.csv"
# dir.create(savefolderpath)
# write_csv(AAAcounterbalancingDeval,here(savefolderpath,savefilename))
#
#Long format
data_PerSession_long <- data_PerSession %>%
pivot_longer(c(LPFreq_Flash,LPDur_Flash, LPFreq_Steady,LPDur_Steady, Reinforcer_Flash, Reinforcer_Steady), names_to = c("Measure","Stimulus"), names_sep = "_", values_to = "LP") %>%
pivot_wider(names_from = Measure, values_from = LP)
# Save total Experienced reinforcers to csv from first stage and use for determining devaluation coutnerbalancing
AAAcounterbalancingDeval <- data_PerSession_long %>%
group_by(counterbalancing, Pavlovian_cbx, Instrumental_cbx, subject, Stimulus) %>%
summarise(Reinforcer = sum(Reinforcer)) %>%
pivot_wider(names_from = Stimulus, values_from = Reinforcer)
savefolderpath <- here("rawdata","Marios","3_LeverPressingForLights","CombinedData")
savefilename <- "LPL_CounterbalancingDeval.csv"
dir.create(savefolderpath)
write_csv(AAAcounterbalancingDeval,here(savefolderpath,savefilename))
savefile <- "LPL_Stage1_sessionAvg_StimID.csv"
write_csv(data_Period_long_StimID, here("figures", "figure_data",savefile))
savefile <- "CI_Stage1_7_5minBins_StimID.csv"
write_csv(data_bin_long_StimID, here("figures", "figure_data",savefile))
savefile <- "LPL_Stage1_sessionAvg_DevalID.csv"
write_csv(data_Period_long_DevalID, here("figures", "figure_data",savefile))
savefile <- "CI_Stage1_7_5minBins_DevalID.csv"
write_csv(data_bin_long_DevalID, here("figures", "figure_data",savefile))
# MagazineEntries
ReinstatementTest_Extinction_timebin_Mag <- data_bin_long %>%
filter(Stimulus == "Magazine" | Stimulus == "Banana" | Stimulus == "Chocolate",
subject != "17____",
Test_Period != "ITI" & Test_Period != "Reinstatament") %>%
ggplot(mapping = aes(x = as.factor(timebins_within), y = LPFreq, group = Stimulus, colour = Stimulus, fill = Stimulus, shape = Stimulus, linetype = Stimulus)) +
stat_summary_bin(fun.data = "mean_se", geom = "line", size = .5) +
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0.0, size = .3, linetype = 1, show.legend = FALSE) +
stat_summary_bin(fun.data = "mean_se", geom = "point", size = 2) +
facet_wrap(~Test_Period + Test_Period_ID, nrow = 1, scales = "free_x") +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,5)) +
ggtitle("Reinstatament Test: Magazine Entries") + xlab("Bin 1 min") + ylab("Magazine Entries") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(0,10.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_linetype_manual(name = "", values = linetypes)  +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_shape_manual(name = "", values = pointshapes) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(1,"line"))
ReinstatementTest_Extinction_timebin_Mag
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/Plot_3_LPL.R', echo=TRUE)
data_bin_long <- data_bin_long %>%
mutate(timebins_within2mins = ceiling(timebins_within/2, 0))
# 2 minute bins
data_bin_long <- data_bin_long %>%
mutate(timebins_within2mins = ceiling(timebins_within/2))
view(data_bin_long)
data_bin_long_2mins <- data_bin_long %>%
group_by(counterbalancing, Pavlovian_cbx,Test_Period,Test_Period_ID, subject, Stimulus, timebins_within2mins) %>%
summarise(LPFreq = sum(LPFreq),
LPDur = sum(LPDur),
Reinforcer = sum(Reinforcer)
) %>%
ungroup()
ReinstatementTest_All_timebin_2mins <- data_bin_long_2mins %>%
filter(Stimulus == "Magazine" | Stimulus == "Banana" | Stimulus == "Chocolate",
subject != "17____",
Test_Period != "ITI" & Test_Period != "Reinstatament") %>%
ggplot(mapping = aes(x = as.factor(timebins_within2mins), y = LPFreq, group = Stimulus, colour = Stimulus, fill = Stimulus, shape = Stimulus, linetype = Stimulus)) +
stat_summary_bin(fun.data = "mean_se", geom = "line", size = .5) +
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0.0, size = .3, linetype = 1, show.legend = FALSE) +
stat_summary_bin(fun.data = "mean_se", geom = "point", size = 2) +
facet_wrap(~Test_Period + Test_Period_ID, nrow = 1, scales = "free_x") +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,5)) +
ggtitle("Reinstatament Test: Magazine Entries") + xlab("Bin 1 min") + ylab("Magazine Entries") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(0,10.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_linetype_manual(name = "", values = linetypes)  +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_shape_manual(name = "", values = pointshapes) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(1,"line"))
ReinstatementTest_All_timebin_2mins
ReinstatementTest_All_timebin_2mins <- data_bin_long_2mins %>%
filter(Stimulus == "Magazine" | Stimulus == "Banana" | Stimulus == "Chocolate",
subject != "17____",
Test_Period != "ITI" & Test_Period != "Reinstatament") %>%
ggplot(mapping = aes(x = as.factor(timebins_within2mins), y = LPFreq, group = Stimulus, colour = Stimulus, fill = Stimulus, shape = Stimulus, linetype = Stimulus)) +
stat_summary_bin(fun.data = "mean_se", geom = "line", size = .5) +
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0.0, size = .3, linetype = 1, show.legend = FALSE) +
stat_summary_bin(fun.data = "mean_se", geom = "point", size = 2) +
facet_wrap(~Test_Period + Test_Period_ID, nrow = 1, scales = "free_x") +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,5)) +
ggtitle("Reinstatament Test: Magazine Entries") + xlab("Bin 1 min") + ylab("Magazine Entries") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(0,15.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_linetype_manual(name = "", values = linetypes)  +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_shape_manual(name = "", values = pointshapes) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(1,"line"))
ReinstatementTest_All_timebin_2mins
data_bin_long_samediff <- data_bin_long %>%
filter(Test_Period == "Reinstatament_Test")
view(data_bin_long_samediff)
data_bin_long_samediff <- data_bin_long %>%
filter(Test_Period == "Reinstatament_Test",
stimulus == "Banana" | stimulus == "Chocolate" | stimulus == "Magazine")
data_bin_long_samediff <- data_bin_long %>%
filter(Test_Period == "Reinstatament_Test",
Stimulus == "Banana" | Stimulus == "Chocolate" | Stimulus == "Magazine")
view(data_bin_long_samediff)
data_bin_long_samediff <- data_bin_long %>%
filter(Test_Period == "Reinstatament_Test",
Stimulus == "Banana" | Stimulus == "Chocolate" | Stimulus == "Magazine") %>%
select(-Reinforcer, -LPDur) %>%
mutate(Congruence = ifelse(Stimulus == Test_Period, "Same", "Different"))
view(data_bin_long_samediff)
data_bin_long_samediff <- data_bin_long %>%
filter(Test_Period == "Reinstatament_Test",
Stimulus == "Banana" | Stimulus == "Chocolate" | Stimulus == "Magazine") %>%
select(-Reinforcer, -LPDur) %>%
mutate(Congruence = ifelse(Stimulus == Test_Period_ID, "Same", "Different"))
view(data_bin_long_samediff)
data_bin_long_samediff <- data_bin_long %>%
filter(Test_Period == "Reinstatament_Test",
Stimulus == "Banana" | Stimulus == "Chocolate") %>%
select(-Reinforcer, -LPDur) %>%
mutate(Congruence = ifelse(Stimulus == Test_Period_ID, "Same", "Different"))
# Sum over time periods
data_bin_long_samediff <- data_bin_long_samediff %>%
group_by(counterbalancing, Pavlovian_cbx,Test_Period, subject, Congruence, timebins_within) %>%
summarise(LPFreq = sum(LPFreq),
LPDur = sum(LPDur),
Reinforcer = sum(Reinforcer)
) %>%
ungroup()
# Sum over time periods
data_bin_long_samediff <- data_bin_long_samediff %>%
group_by(counterbalancing, Pavlovian_cbx,Test_Period, subject, Congruence, timebins_within) %>%
summarise(LPFreq = sum(LPFreq)
) %>%
ungroup()
view(data_bin_long_samediff)
ReinstatementTest_Reinstatament_timebin_Congruence <- data_bin_long_samediff %>%
filter(subject != "17____") %>%
ggplot(mapping = aes(x = as.factor(timebins_within), y = LPFreq, group = Congruence, colour = Congruence, fill = Congruence, shape = Congruence, linetype = Congruence)) +
stat_summary_bin(fun.data = "mean_se", geom = "line", size = .5) +
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0.0, size = .3, linetype = 1, show.legend = FALSE) +
stat_summary_bin(fun.data = "mean_se", geom = "point", size = 2) +
# facet_wrap(~Test_Period_ID, nrow = 1, scales = "free_x") +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,5)) +
ggtitle("Reinstatament Test: Reinstatament Period 2") + xlab("Bin 1 min") + ylab("Total LP") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(0,10.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_linetype_manual(name = "", values = linetypes)  +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_shape_manual(name = "", values = pointshapes) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(1,"line"))
ReinstatementTest_Reinstatament_timebin_Congruence
##### Load relevant packages ----
## Packages for data organisation and plotting
library(tidyverse)
# Package for relative file paths
library(here)
# library(ggpubr)
library(cowplot)
library(ggsignif)
library(patchwork)
library(RColorBrewer)
## Packages for Data analysis
library(afex)
afex_options(emmeans_model = "multivariate")# use multivariate model for all follow-up tests.
library(emmeans)
# install.packages("devtools")
# devtools::install_github("crsh/papaja")
# library(papaja)
# library(knitr)
# remotes::install_github("noamross/redoc")
# library(redoc)
#### Plot functions ====
# modified from from:
# https://stackoverflow.com/questions/39071002/moving-x-or-y-axis-together-with-tick-labels-to-the-middle-of-a-single-ggplot-n
# Learn more here
# https://www.stat.auckland.ac.nz/~paul/useR2015-grid/grid-slides.html
# https://bookdown.org/rdpeng/RProgDA/the-grid-package.html#grobs
shift_xaxis_facet <- function(p, y=0){
g <- ggplotGrob(p)
dummy <- data.frame(y=y)
# Identify axis elements - use this to find and move other elements
ax <- g[["grobs"]][g$layout$name == "axis-b-1-1"][[1]]
# plot grid as an annotation
# grobTree combines all the elements of the axis into a single grob (vp = vertical position)
# Viewport defines a rectangular window
p + annotation_custom(grid::grobTree(ax, vp = grid::viewport(y=1, height=sum(ax$height))),
ymax=y, ymin=y) +
geom_hline(aes(yintercept=y), data = dummy) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())
}
shift_xaxis <- function(p, y=0){
g <- ggplotGrob(p)
dummy <- data.frame(y=y)
# Identify axis elements - use this to find and move other elements
ax <- g[["grobs"]][g$layout$name == "axis-b"][[1]]
# plot grid as an annotation
# grobTree combines all the elements of the axis into a single grob (vp = vertical position)
# Viewport defines a rectangular window
p + annotation_custom(grid::grobTree(ax, vp = grid::viewport(y=1, height=sum(ax$height))),
ymax=y, ymin=y) +
geom_hline(aes(yintercept=y), data = dummy) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())
}
# Plot Style Parameters ---------------------------------------------------
## Define Colours to be used
DarkRed     = "#67001F"
MediumRed   = "#B2182B"
LightRed    = "#D6604D"
DarkBlue    = "#053061"
MediumBlue  = "#2166AC"
LightBlue   = "#4393C3"
Black       = "#000000"
White       = "#ffffff"
LightGrey   = "#F0F0F0"
MediumGrey  = "#BDBDBD"
DarkGrey    = "#252525"
## Shapes for Geom_point
circle            = 21
square            = 22
diamond           = 23
triangleUp        = 24
triangleDown      = 25
fillcolours <- c("Flash" = DarkRed,
"Steady" = DarkBlue,
"Left" = DarkRed,
"Right" = DarkBlue,
"Banana" = DarkRed,
"Chocolate" = DarkBlue,
"Devalued" = Black,
"NonDevalued" = White,
"Magazine" = LightGrey,
"Same" = DarkRed,
"Different" = DarkBlue)
linecolours <- c("Flash" = DarkRed,
"Steady" = DarkBlue,
"Left" = DarkRed,
"Right" = DarkBlue,
"Banana" = DarkRed,
"Chocolate" = DarkBlue,
"Devalued" = Black,
"NonDevalued" = Black,
"Magazine" = MediumGrey,
"Same" = DarkRed,
"Different" = DarkBlue)
linetypes <- c("Flash" = "dotted",
"Steady" = "solid",
"Left" = "dotted",
"Right" = "solid",
"Banana" = "dotted",
"Chocolate" = "solid",
"Devalued" = "dotted",
"NonDevalued" = "solid",
"Magazine" = "solid",
"Same" = "solid",
"Different" = "solid")
pointshapes <- c("Flash" = circle,
"Steady" = square,
"Left" = circle,
"Right" = square,
"Banana" = circle,
"Chocolate" = square,
"Devalued" = square,
"NonDevalued" = circle,
"Magazine" = triangleDown,
"Same" = circle,
"Different" = square)
ReinstatementTest_Reinstatament_timebin_Congruence <- data_bin_long_samediff %>%
filter(subject != "17____") %>%
ggplot(mapping = aes(x = as.factor(timebins_within), y = LPFreq, group = Congruence, colour = Congruence, fill = Congruence, shape = Congruence, linetype = Congruence)) +
stat_summary_bin(fun.data = "mean_se", geom = "line", size = .5) +
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0.0, size = .3, linetype = 1, show.legend = FALSE) +
stat_summary_bin(fun.data = "mean_se", geom = "point", size = 2) +
# facet_wrap(~Test_Period_ID, nrow = 1, scales = "free_x") +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,5)) +
ggtitle("Reinstatament Test: Reinstatament Period 2") + xlab("Bin 1 min") + ylab("Total LP") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(0,10.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_linetype_manual(name = "", values = linetypes)  +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_shape_manual(name = "", values = pointshapes) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(1,"line"))
ReinstatementTest_Reinstatament_timebin_Congruence
data_bin_long_samediff_avg <- data_bin_long_samediff %>%
group_by(counterbalancing, Pavlovian_cbx,Test_Period, subject, Congruence) %>%
summarise(LPFreq = sum(LPFreq)
) %>%
ungroup()
ReinstatementTest_Reinstatament_Avg_Congruence <- data_bin_long_samediff_avg %>%
filter(subject != "17____") %>%
ggplot(mapping = aes(x = as.factor(Congruence), y = LPFreq, group = Congruence, colour = Congruence, fill = Congruence)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,5)) +
ggtitle("Reinstatament Test: Reinstatement Period 2") + xlab("Reinstatament-Lever") + ylab("Total Lever Presses (10 mins)") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(0,30.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line"))
ReinstatementTest_Reinstatament_Avg_Congruence
data_bin_long_samediff_avg <- data_bin_long_samediff %>%
group_by(counterbalancing, Pavlovian_cbx,Test_Period, subject, Congruence) %>%
summarise(LPFreq = mean(LPFreq)
) %>%
ungroup()
ReinstatementTest_Reinstatament_Avg_Congruence <- data_bin_long_samediff_avg %>%
filter(subject != "17____") %>%
ggplot(mapping = aes(x = as.factor(Congruence), y = LPFreq, group = Congruence, colour = Congruence, fill = Congruence)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,5)) +
ggtitle("Reinstatament Test: Reinstatement Period 2") + xlab("Reinstatament-Lever") + ylab("Total Lever Presses (10 mins)") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(0,30.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line"))
ReinstatementTest_Reinstatament_Avg_Congruence
data_bin_long_samediff_avg <- data_bin_long_samediff %>%
group_by(counterbalancing, Pavlovian_cbx,Test_Period, subject, Congruence) %>%
summarise(LPFreq = sum(LPFreq)/2
) %>%
ungroup()
ReinstatementTest_Reinstatament_Avg_Congruence <- data_bin_long_samediff_avg %>%
filter(subject != "17____") %>%
ggplot(mapping = aes(x = as.factor(Congruence), y = LPFreq, group = Congruence, colour = Congruence, fill = Congruence)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,5)) +
ggtitle("Reinstatament Test: Reinstatement Period 2") + xlab("Reinstatament-Lever") + ylab("Total Lever Presses (10 mins)") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(0,30.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line"))
ReinstatementTest_Reinstatament_Avg_Congruence
ReinstatementTest_Reinstatament_Avg_Congruence <- data_bin_long_samediff_avg %>%
filter(subject != "17____") %>%
ggplot(mapping = aes(x = as.factor(Congruence), y = LPFreq, group = Congruence, colour = Congruence, fill = Congruence)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,5)) +
ggtitle("Reinstatament Test: Reinstatement Period 2") + xlab("Reinstatament-Lever") + ylab("Total Lever Presses (10 mins)") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(0,15.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line"))
ReinstatementTest_Reinstatament_Avg_Congruence
