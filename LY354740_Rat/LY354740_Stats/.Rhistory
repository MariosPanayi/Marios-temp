library(knitr)
full_data <- read_csv(here("rawdata", "/LY354740_Expt4_Locomotor_AdLib.csv"))
#####
## Baseline data
baseline_data_10mins <- full_data %>%
group_by(Subj, Drug, Amph, LY, Period, bin10mins) %>%
summarise(activity = sum(activity)) %>%
ungroup() %>%
group_by(Subj) %>%
mutate(activity_perc = activity/activity[bin10mins=="0"]) %>%
ungroup() %>%
filter(bin10mins < 1) %>%
mutate(bin10mins = as.factor(bin10mins))
# Stats - 10 mins
anova_baseline <- aov_4(activity ~ Amph*LY + (bin10mins|Subj), data = baseline_data_10mins, anova_table = list(correction = "none", es = "pes"))
anova_baselineprint <- apa_print(anova_baseline, mse = "FALSE",correction = "none",es = "pes")
#####
data_10mins <- full_data %>%
group_by(Subj, Drug, Amph, LY, Period, bin10mins) %>%
summarise(activity = sum(activity)) %>%
ungroup() %>%
group_by(Subj) %>%
mutate(activity_perc = activity/activity[bin10mins=="0"]) %>%
ungroup() %>%
filter(bin10mins < 13 &
bin10mins > 0) %>%
mutate(bin10mins = as.factor(bin10mins))
data_60mins <- full_data %>%
group_by(Subj, Drug, Amph, LY, Period, bin60mins) %>%
summarise(activity = sum(activity)) %>%
ungroup() %>%
group_by(Subj) %>%
mutate(activity_perc = activity/activity[bin60mins=="0"]) %>%
ungroup() %>%
filter(bin60mins < 3 &
bin60mins > 0) %>%
mutate(bin60mins = as.factor(bin60mins))
# Stats - 10 mins
anova <- aov_4(activity ~ Amph*LY + (bin10mins|Subj), data = data_10mins, anova_table = list(correction = "none", es = "pes"))
anova_print <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~Amph*LY*bin10mins)
simple_print <- apa_print.emmGrid(contrast(simple, by = "bin10mins", interaction = "pairwise", adjust = "tukey"))
simple2 <- emmeans(anova, ~Amph*LY*bin10mins)
simple2_print <- apa_print.emmGrid(contrast(simple2, by = c("Amph","bin10mins"), interaction = "pairwise", adjust = "tukey"))
# Stats - 60 mins follow up tests
anova_60 <- aov_4(activity ~ Amph*LY + (bin60mins|Subj), data = data_60mins, anova_table = list(correction = "none", es = "pes"))
anova_60_print <- apa_print(anova_60, mse = "FALSE",correction = "none",es = "pes")
simple_60 <- emmeans(anova_60, ~Amph*LY*bin60mins)
simple_60_print <- apa_print.emmGrid(contrast(simple_60, by = "bin60mins", interaction = "pairwise", adjust = "tukey"))
simple2_60 <- emmeans(anova_60, ~Amph*LY*bin60mins)
simple2_60_print <- apa_print.emmGrid(contrast(simple2_60, by = c("Amph","bin60mins"), interaction = "pairwise", adjust = "tukey"))
#####
# #
# anova_baselineprint$table
# #
# anova_print$table
# #
# simple_60_print$table
# #
# simple2_60_print$table
knitr::opts_chunk$set(echo = FALSE)
## Packages for data organisation and plotting
library(tidyverse)
# Package for relative file paths
library(here)
#library(ggpubr)
library(cowplot)
################################################################################
## Packages for Data analysis
library(afex)
afex_options(emmeans_model = "multivariate")# use multivariate model for all follow-up tests.
library(emmeans)
# install.packages("devtools")
# devtools::install_github("crsh/papaja")
library(papaja)
library(knitr)
full_data <- read_csv(here("rawdata", "/LY354740_Expt5_DBS_FoodDepAmphDose.csv"))
full_data <- full_data %>%
group_by(Subj) %>%
mutate(perc = nM/nM[Time_hrs== '0.25']) %>%
ungroup()
#####
## 1st half data
data_1sthalf <- full_data %>%
filter(
Time_hrs < 1
)
# Stats - Full ANOVA
anova_full <- aov_4(nM ~ Amph*Feeding + (Time_hrs|Subj), data = full_data, anova_table = list(correction = "none", es = "pes"))
anova_fullprint <- apa_print(anova_full, mse = "FALSE",correction = "none",es = "pes")
# First Half ANOVA Only
anova_1sthalf <- aov_4(nM ~ Amph*Feeding + (Time_hrs|Subj), data = data_1sthalf, anova_table = list(correction = "none", es = "pes"))
anova_1sthalfprint <- apa_print(anova_1sthalf, mse = "FALSE",correction = "none",es = "pes")
# Simple effects
simple <- emmeans(anova_1sthalf, ~ Amph)
simple_print <- apa_print.emmGrid(contrast(simple, method = "pairwise", adjust = "tukey"))
# Only use data from the first half of the measurements since the measurements are very variable at 1-2 hours making the data hard to interpret.
anova_1sthalfprint$table
simple_print$table
anova_1sthalfprint$table
full_data <- read_csv(here("rawdata", "/LY354740_Expt5_DBS_FoodDepAmphDose.csv"))
full_data <- full_data %>%
group_by(Subj) %>%
mutate(perc = nM/nM[Time_hrs== '0.25']) %>%
ungroup()
#####
## 1st half data
data_1sthalf <- full_data %>%
filter(
Time_hrs < 2
)
# Stats - Full ANOVA
anova_full <- aov_4(nM ~ Amph*Feeding + (Time_hrs|Subj), data = full_data, anova_table = list(correction = "none", es = "pes"))
anova_fullprint <- apa_print(anova_full, mse = "FALSE",correction = "none",es = "pes")
# First Half ANOVA Only
anova_1sthalf <- aov_4(nM ~ Amph*Feeding + (Time_hrs|Subj), data = data_1sthalf, anova_table = list(correction = "none", es = "pes"))
anova_1sthalfprint <- apa_print(anova_1sthalf, mse = "FALSE",correction = "none",es = "pes")
# Simple effects
simple <- emmeans(anova_1sthalf, ~ Amph)
simple_print <- apa_print.emmGrid(contrast(simple, method = "pairwise", adjust = "tukey"))
# Only use data from the first half of the measurements since the measurements are very variable at 1-2 hours making the data hard to interpret.
anova_1sthalfprint$table
simple_print$table
anova_1sthalfprint$table
data_1sthalf <- full_data %>%
filter(
Time_hrs < 3
)
# Stats - Full ANOVA
anova_full <- aov_4(nM ~ Amph*Feeding + (Time_hrs|Subj), data = full_data, anova_table = list(correction = "none", es = "pes"))
anova_fullprint <- apa_print(anova_full, mse = "FALSE",correction = "none",es = "pes")
# First Half ANOVA Only
anova_1sthalf <- aov_4(nM ~ Amph*Feeding + (Time_hrs|Subj), data = data_1sthalf, anova_table = list(correction = "none", es = "pes"))
anova_1sthalfprint <- apa_print(anova_1sthalf, mse = "FALSE",correction = "none",es = "pes")
# Simple effects
simple <- emmeans(anova_1sthalf, ~ Amph)
simple_print <- apa_print.emmGrid(contrast(simple, method = "pairwise", adjust = "tukey"))
anova_1sthalfprint$table
data_1sthalf <- full_data %>%
filter(
Time_hrs < 2
)
# Stats - Full ANOVA
anova_full <- aov_4(nM ~ Amph*Feeding + (Time_hrs|Subj), data = full_data, anova_table = list(correction = "none", es = "pes"))
anova_fullprint <- apa_print(anova_full, mse = "FALSE",correction = "none",es = "pes")
# First Half ANOVA Only
anova_1sthalf <- aov_4(nM ~ Amph*Feeding + (Time_hrs|Subj), data = data_1sthalf, anova_table = list(correction = "none", es = "pes"))
anova_1sthalfprint <- apa_print(anova_1sthalf, mse = "FALSE",correction = "none",es = "pes")
# Simple effects
simple <- emmeans(anova_1sthalf, ~ Amph)
simple_print <- apa_print.emmGrid(contrast(simple, method = "pairwise", adjust = "tukey"))
anova_1sthalfprint$table
simple_print$table
data_1sthalf <- full_data %>%
filter(
Time_hrs < 1
)
# Stats - Full ANOVA
anova_full <- aov_4(nM ~ Amph*Feeding + (Time_hrs|Subj), data = full_data, anova_table = list(correction = "none", es = "pes"))
anova_fullprint <- apa_print(anova_full, mse = "FALSE",correction = "none",es = "pes")
# First Half ANOVA Only
anova_1sthalf <- aov_4(nM ~ Amph*Feeding + (Time_hrs|Subj), data = data_1sthalf, anova_table = list(correction = "none", es = "pes"))
# Simple effects
simple <- emmeans(anova_1sthalf, ~ Amph)
simple_print <- apa_print.emmGrid(contrast(simple, method = "pairwise", adjust = "tukey"))
anova_1sthalfprint$table
anova_1sthalfprint$table
simple_print$table
#####
## 1st hour data
data_1sthalf <- full_data %>%
filter(
Time_hrs < 2
)
# Stats - Full ANOVA
anova_full <- aov_4(nM ~ Amph*Feeding + (Time_hrs|Subj), data = full_data, anova_table = list(correction = "none", es = "pes"))
anova_fullprint <- apa_print(anova_full, mse = "FALSE",correction = "none",es = "pes")
# First hour ANOVA Only
anova_1sthalf <- aov_4(nM ~ Amph*Feeding + (Time_hrs|Subj), data = data_1sthalf, anova_table = list(correction = "none", es = "pes"))
anova_1sthalfprint <- apa_print(anova_1sthalf, mse = "FALSE",correction = "none",es = "pes")
# Simple effects
simple <- emmeans(anova_1sthalf, ~ Amph)
simple_print <- apa_print.emmGrid(contrast(simple, method = "pairwise", adjust = "tukey"))
# Only use data from the first hour of the measurements since the measurements are very variable at 2 hours making the data hard to interpret.
anova_1sthalfprint$table
simple_print$table
#####
## 1st half data
plot_data5 <- full_data %>%
filter(
Time_hrs < 2
)
# Re order and rename levels for plotting
plot_data5$Amph <- fct_relevel(as.factor(plot_data5$Amph), c("1", "2.5", "5"))
levels <- c("1.0 mg/kg" = "1", "2.5 mg/kg" = "2.5", "5.0 mg/kg" = "5")
plot_data5$Amph <- fct_recode(plot_data5$Amph, !!!levels)
plot_data5$Feeding <- fct_relevel(as.factor(plot_data5$Feeding), c("Ad Lib", "Food Dep"))
plot_data5$Time_hrs <- fct_relevel(as.factor(plot_data5$Time_hrs), c("0.25", "0.5"))
levels <- c("15" = "0.25", "30" = "0.5")
plot_data5$Time_hrs <- fct_recode(plot_data5$Time_hrs, !!!levels)
fillcolours <- c("1.0 mg/kg.Ad Lib" = "#D1E5F0", "2.5 mg/kg.Ad Lib" = "#4393C3", "5.0 mg/kg.Ad Lib" = "#053061", "1.0 mg/kg.Food Dep" = "#D1E5F0", "2.5 mg/kg.Food Dep" = "#4393C3", "5.0 mg/kg.Food Dep" = "#053061")
linecolours <- c("1.0 mg/kg.Ad Lib" = "#053061", "2.5 mg/kg.Ad Lib" = "#053061", "5.0 mg/kg.Ad Lib" = "#053061", "1.0 mg/kg.Food Dep" = "#053061", "2.5 mg/kg.Food Dep" = "#053061", "5.0 mg/kg.Food Dep" = "#053061")
Linetypes <- c("1.0 mg/kg.Ad Lib" = "solid", "2.5 mg/kg.Ad Lib" = "solid", "5.0 mg/kg.Ad Lib" = "solid", "1.0 mg/kg.Food Dep" = "dotted", "2.5 mg/kg.Food Dep" = "dotted", "5.0 mg/kg.Food Dep" = "dotted")
pointshapes <- c("1.0 mg/kg.Ad Lib" = 21, "2.5 mg/kg.Ad Lib" = 21, "5.0 mg/kg.Ad Lib" = 21, "1.0 mg/kg.Food Dep" = 22, "2.5 mg/kg.Food Dep" = 22, "5.0 mg/kg.Food Dep" = 22)
highlightarea <- data.frame(x = c(0, 0, 6, 6), y = c(0,6000, 6000, 0 ))
#Note to plot the polygon first, you need to create a layer with the aes defined in ggplot(). Then when calling the polygon layer you have to specify that it shouldn't inherit the aes from the ggplot command even though different data are specified
# Plot for fun
Expt5DBSplot <- ggplot(data = plot_data5, mapping = aes(x = as.factor(Time_hrs), y = nM, group = interaction(Amph,Feeding), colour = interaction(Amph,Feeding), linetype = interaction(Amph,Feeding), shape = interaction(Amph,Feeding), fill = interaction(Amph, Feeding))) +
stat_summary_bin(fun.data = "mean_se", geom = "line", size = .5) +
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0.0, size = .5, linetype = 1, show.legend = FALSE) +
stat_summary_bin(fun.data = "mean_se", geom = "point", size = 2) +
# Make Pretty
scale_y_continuous(expand = expansion(mult = c(0, 0))) +
ggtitle("Amphetamine") + xlab("Mins") + ylab("Concentration (nM)") +
theme_cowplot(8) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=8)) +
coord_cartesian(ylim = c(0,6000)) +
theme(axis.title.x=element_text(face = "bold")) +
theme(strip.background = element_rect(fill=NA )) +
scale_linetype_manual(name = "", values = Linetypes) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_shape_manual(name = "", values = pointshapes) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(1.5,"line"))
full_data <- read_csv(here("rawdata", "/LY354740_Expt5_DBS_FoodDepAmphDose.csv"))
#####
## 1st half data
plot_data5 <- full_data %>%
filter(
Time_hrs < 2
)
# Re order and rename levels for plotting
plot_data5$Amph <- fct_relevel(as.factor(plot_data5$Amph), c("1", "2.5", "5"))
levels <- c("1.0 mg/kg" = "1", "2.5 mg/kg" = "2.5", "5.0 mg/kg" = "5")
plot_data5$Amph <- fct_recode(plot_data5$Amph, !!!levels)
plot_data5$Feeding <- fct_relevel(as.factor(plot_data5$Feeding), c("Ad Lib", "Food Dep"))
plot_data5$Time_hrs <- fct_relevel(as.factor(plot_data5$Time_hrs), c("0.25", "0.5"))
levels <- c("15" = "0.25", "30" = "0.5")
plot_data5$Time_hrs <- fct_recode(plot_data5$Time_hrs, !!!levels)
fillcolours <- c("1.0 mg/kg.Ad Lib" = "#D1E5F0", "2.5 mg/kg.Ad Lib" = "#4393C3", "5.0 mg/kg.Ad Lib" = "#053061", "1.0 mg/kg.Food Dep" = "#D1E5F0", "2.5 mg/kg.Food Dep" = "#4393C3", "5.0 mg/kg.Food Dep" = "#053061")
linecolours <- c("1.0 mg/kg.Ad Lib" = "#053061", "2.5 mg/kg.Ad Lib" = "#053061", "5.0 mg/kg.Ad Lib" = "#053061", "1.0 mg/kg.Food Dep" = "#053061", "2.5 mg/kg.Food Dep" = "#053061", "5.0 mg/kg.Food Dep" = "#053061")
Linetypes <- c("1.0 mg/kg.Ad Lib" = "solid", "2.5 mg/kg.Ad Lib" = "solid", "5.0 mg/kg.Ad Lib" = "solid", "1.0 mg/kg.Food Dep" = "dotted", "2.5 mg/kg.Food Dep" = "dotted", "5.0 mg/kg.Food Dep" = "dotted")
pointshapes <- c("1.0 mg/kg.Ad Lib" = 21, "2.5 mg/kg.Ad Lib" = 21, "5.0 mg/kg.Ad Lib" = 21, "1.0 mg/kg.Food Dep" = 22, "2.5 mg/kg.Food Dep" = 22, "5.0 mg/kg.Food Dep" = 22)
highlightarea <- data.frame(x = c(0, 0, 6, 6), y = c(0,6000, 6000, 0 ))
#Note to plot the polygon first, you need to create a layer with the aes defined in ggplot(). Then when calling the polygon layer you have to specify that it shouldn't inherit the aes from the ggplot command even though different data are specified
# Plot for fun
Expt5DBSplot <- ggplot(data = plot_data5, mapping = aes(x = as.factor(Time_hrs), y = nM, group = interaction(Amph,Feeding), colour = interaction(Amph,Feeding), linetype = interaction(Amph,Feeding), shape = interaction(Amph,Feeding), fill = interaction(Amph, Feeding))) +
stat_summary_bin(fun.data = "mean_se", geom = "line", size = .5) +
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0.0, size = .5, linetype = 1, show.legend = FALSE) +
stat_summary_bin(fun.data = "mean_se", geom = "point", size = 2) +
# Make Pretty
scale_y_continuous(expand = expansion(mult = c(0, 0))) +
ggtitle("Amphetamine") + xlab("Mins") + ylab("Concentration (nM)") +
theme_cowplot(8) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=8)) +
coord_cartesian(ylim = c(0,6000)) +
theme(axis.title.x=element_text(face = "bold")) +
theme(strip.background = element_rect(fill=NA )) +
scale_linetype_manual(name = "", values = Linetypes) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_shape_manual(name = "", values = pointshapes) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(1.5,"line"))
toppanel <- (Expt3Locoplot_10mins + Expt4Locoplot_10mins) + plot_annotation(tag_levels = 'A') + plot_layout(guides = "collect")
bottompanel <- Expt5Locoplot_10mins + Expt5SumPlot + Expt5DBSplot + plot_annotation(tag_levels = 'A') + plot_layout(widths = c(4,1,1))
Fig2plot <-  toppanel / bottompanel  + plot_annotation(tag_levels = 'A')
Fig2plot
# Fig2plot <- (Expt3Locoplot_10mins + Expt4Locoplot_10mins)/ (Expt5Locoplot_10mins + Expt5SumPlot + Expt5DBSplot) + plot_annotation(tag_levels = 'A') + plot_layout(widths = c(2,2,2,1, 1))
# Fig2plot
filename = here("figures", "Fig2.png")
ggsave(filename, Fig2plot, width = 7.20472, height = 4, units = "in", dpi = 1200)
filename = here("figures", "Fig2.pdf")
ggsave(filename, Fig2plot, width = 7.20472, height = 4, units = "in")
Expt5DBSplot
#
anova_print$table
full_data <- read_csv(here("rawdata", "/LY354740_Expt5_Locomotor_FoodDepAmphDose.csv"))
#####
## Baseline data
baseline_data_10mins <- full_data %>%
group_by(Subj, Feeding, Amph, bin10mins) %>%
summarise(activity = sum(activity)) %>%
ungroup() %>%
group_by(Subj) %>%
mutate(activity_perc = activity/activity[bin10mins=="0"]) %>%
ungroup() %>%
filter(bin10mins < 1) %>%
mutate(bin10mins = as.factor(bin10mins))
# Stats - 10 mins
anova_baseline <- aov_4(activity ~ Amph*Feeding + (bin10mins|Subj), data = baseline_data_10mins, anova_table = list(correction = "none", es = "pes"))
anova_baselineprint <- apa_print(anova_baseline, mse = "FALSE",correction = "none",es = "pes")
#####
data_10mins <- full_data %>%
group_by(Subj, Feeding, Amph, bin10mins) %>%
summarise(activity = sum(activity)) %>%
ungroup() %>%
group_by(Subj) %>%
mutate(activity_perc = activity/activity[bin10mins=="0"]) %>%
ungroup() %>%
filter(bin10mins < 13 &
bin10mins > 0) %>%
mutate(bin10mins = as.factor(bin10mins))
# data_60mins <- full_data %>%
#       group_by(Subj, Feeding, Amph, bin60mins) %>%
#   summarise(activity = sum(activity)) %>%
#     ungroup() %>%
#     group_by(Subj) %>%
#         mutate(activity_perc = activity/activity[bin60mins=="0"]) %>%
#   ungroup() %>%
#   filter(bin60mins < 3 &
#            bin60mins > 0) %>%
#   mutate(bin60mins = as.factor(bin60mins))
# Stats - 10 mins
anova <- aov_4(activity ~ Amph*Feeding + (bin10mins|Subj), data = data_10mins, anova_table = list(correction = "none", es = "pes"))
anova_print <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~ Amph)
simple_print <- apa_print.emmGrid(contrast(simple, method = "pairwise", adjust = "tukey"))
simple2 <- emmeans(anova, ~Amph*Feeding*bin10mins)
simple2_print <- apa_print.emmGrid(contrast(simple2, by = c("Amph","bin10mins"), interaction = "pairwise", adjust = "tukey"))
# # Stats - 60 mins follow up tests
# anova_60 <- aov_4(activity ~ Amph*Feeding + (bin60mins|Subj), data = data_60mins, anova_table = list(correction = "none", es = "pes"))
# anova_60_print <- apa_print(anova_60, mse = "FALSE",correction = "none",es = "pes")
#
# simple_60 <- emmeans(anova_60, ~Amph*bin60mins)
# simple_60_print <- apa_print.emmGrid(contrast(simple_60, by = "Amph", interaction = "pairwise", adjust = "tukey"))
#
# simple2_60 <- emmeans(anova_60, ~Feeding*bin60mins)
# simple2_60_print <- apa_print.emmGrid(contrast(simple2_60, by = c("Feeding"), interaction = "pairwise", adjust = "tukey"))
#####
#
anova_baselineprint$table
#
anova_print$table
#
simple_print$table
# #
# simple_60_print$table
# #
# simple2_60_print$table
unique(full_data$Subj)
unique(full_data$Subj)
full_data$Subj[full_data$Amph = 0]
full_data$Subj[full_data$Amph == 0]
unique(full_data$Subj[full_data$Amph == 0])
full_data <- read_csv(here("rawdata", "/LY354740_Expt5_DBS_FoodDepAmphDose.csv"))
full_data <- full_data %>%
group_by(Subj) %>%
mutate(perc = nM/nM[Time_hrs== '0.25']) %>%
ungroup()
#####
## 1st hour data
data_1sthalf <- full_data %>%
filter(
Time_hrs < 2
)
# Stats - Full ANOVA
anova_full <- aov_4(nM ~ Amph*Feeding + (Time_hrs|Subj), data = full_data, anova_table = list(correction = "none", es = "pes"))
anova_fullprint <- apa_print(anova_full, mse = "FALSE",correction = "none",es = "pes")
# First hour ANOVA Only
anova_1sthalf <- aov_4(nM ~ Amph*Feeding + (Time_hrs|Subj), data = data_1sthalf, anova_table = list(correction = "none", es = "pes"))
anova_1sthalfprint <- apa_print(anova_1sthalf, mse = "FALSE",correction = "none",es = "pes")
# Simple effects
simple <- emmeans(anova_1sthalf, ~ Amph)
simple_print <- apa_print.emmGrid(contrast(simple, method = "pairwise", adjust = "tukey"))
# Only use data from the first hour of the measurements since the measurements are very variable at 2 hours making the data hard to interpret.
anova_1sthalfprint$table
simple_print$table
simple_print$table
unique(full_data$Subj[full_data$Amph == 0])
unique(full_data$Subj)
FigS2 <- Expt5Locoplot_10mins + Expt5SumPlot + Expt5DBSplot + plot_annotation(tag_levels = 'A') + plot_layout(widths = c(4,1,1))
FigS2
FigS2 <- Expt5Locoplot_10mins + Expt5SumPlot + Expt5DBSplot + plot_annotation(tag_levels = 'A') + plot_layout(widths = c(4,1,1))
filename = here("figures", "FigS2.png")
ggsave(filename, Fig2plot, width = 7.20472, height = 4, units = "in", dpi = 1200)
filename = here("figures", "FigS2.pdf")
ggsave(filename, Fig2plot, width = 7.20472, height = 4, units = "in")
source('C:/Users/mario/Documents/GitHub/Marios-temp/LY354740_Rat/LY354740_Stats/scripts/figures/Fig2.R', echo=TRUE)
filename = here("figures", "FigS2.png")
ggsave(filename, FigS2, width = 7.20472, height = 4/2, units = "in", dpi = 1200)
filename = here("figures", "FigS2.pdf")
ggsave(filename, FigS2, width = 7.20472, height = 4/2, units = "in")
plot_data5$Time_hrs <- fct_relevel(as.factor(plot_data5$Time_hrs), c("0.25", "0.5", "1"))
levels <- c("15" = "0.25", "30" = "0.5", "60" = "1")
plot_data5$Time_hrs <- fct_recode(plot_data5$Time_hrs, !!!levels)
fillcolours <- c("1.0 mg/kg.Ad Lib" = "#D1E5F0", "2.5 mg/kg.Ad Lib" = "#4393C3", "5.0 mg/kg.Ad Lib" = "#053061", "1.0 mg/kg.Food Dep" = "#D1E5F0", "2.5 mg/kg.Food Dep" = "#4393C3", "5.0 mg/kg.Food Dep" = "#053061")
linecolours <- c("1.0 mg/kg.Ad Lib" = "#053061", "2.5 mg/kg.Ad Lib" = "#053061", "5.0 mg/kg.Ad Lib" = "#053061", "1.0 mg/kg.Food Dep" = "#053061", "2.5 mg/kg.Food Dep" = "#053061", "5.0 mg/kg.Food Dep" = "#053061")
Linetypes <- c("1.0 mg/kg.Ad Lib" = "solid", "2.5 mg/kg.Ad Lib" = "solid", "5.0 mg/kg.Ad Lib" = "solid", "1.0 mg/kg.Food Dep" = "dotted", "2.5 mg/kg.Food Dep" = "dotted", "5.0 mg/kg.Food Dep" = "dotted")
pointshapes <- c("1.0 mg/kg.Ad Lib" = 21, "2.5 mg/kg.Ad Lib" = 21, "5.0 mg/kg.Ad Lib" = 21, "1.0 mg/kg.Food Dep" = 22, "2.5 mg/kg.Food Dep" = 22, "5.0 mg/kg.Food Dep" = 22)
highlightarea <- data.frame(x = c(0, 0, 6, 6), y = c(0,6000, 6000, 0 ))
#Note to plot the polygon first, you need to create a layer with the aes defined in ggplot(). Then when calling the polygon layer you have to specify that it shouldn't inherit the aes from the ggplot command even though different data are specified
# Plot for fun
Expt5DBSplot <- ggplot(data = plot_data5, mapping = aes(x = as.factor(Time_hrs), y = nM, group = interaction(Amph,Feeding), colour = interaction(Amph,Feeding), linetype = interaction(Amph,Feeding), shape = interaction(Amph,Feeding), fill = interaction(Amph, Feeding))) +
stat_summary_bin(fun.data = "mean_se", geom = "line", size = .5) +
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0.0, size = .5, linetype = 1, show.legend = FALSE) +
stat_summary_bin(fun.data = "mean_se", geom = "point", size = 2) +
# Make Pretty
scale_y_continuous(expand = expansion(mult = c(0, 0))) +
ggtitle("Amphetamine") + xlab("Mins") + ylab("Concentration (nM)") +
theme_cowplot(8) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=8)) +
coord_cartesian(ylim = c(0,6000)) +
theme(axis.title.x=element_text(face = "bold")) +
theme(strip.background = element_rect(fill=NA )) +
scale_linetype_manual(name = "", values = Linetypes) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_shape_manual(name = "", values = pointshapes) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(1.5,"line"))
# layout <- "
# AAAABBBB
# CCCCDDEE
# "
# + plot_layout(design = layout)
## Put plots together
FigS2 <- Expt5Locoplot_10mins + Expt5SumPlot + Expt5DBSplot + plot_annotation(tag_levels = 'A') + plot_layout(widths = c(4,1,1))
filename = here("figures", "FigS2.png")
ggsave(filename, FigS2, width = 7.20472, height = 4/2, units = "in", dpi = 1200)
filename = here("figures", "FigS2.pdf")
ggsave(filename, FigS2, width = 7.20472, height = 4/2, units = "in")
FigS2 <- Expt5Locoplot_10mins + (Expt5SumPlot + Expt5DBSplot) + plot_annotation(tag_levels = 'A')
filename = here("figures", "FigS2.png")
ggsave(filename, FigS2, width = 7.20472, height = 4/2, units = "in", dpi = 1200)
filename = here("figures", "FigS2.pdf")
ggsave(filename, FigS2, width = 7.20472, height = 4/2, units = "in")
FigS2 <- Expt5Locoplot_10mins / (Expt5SumPlot + Expt5DBSplot) + plot_annotation(tag_levels = 'A')
filename = here("figures", "FigS2.png")
ggsave(filename, FigS2, width = 7.20472, height = 4/2, units = "in", dpi = 1200)
filename = here("figures", "FigS2.pdf")
ggsave(filename, FigS2, width = 7.20472, height = 4/2, units = "in")
FigS2 <- Expt5Locoplot_10mins / (Expt5SumPlot + Expt5DBSplot) + plot_annotation(tag_levels = 'A')
filename = here("figures", "FigS2.png")
ggsave(filename, FigS2, width = 7.20472, height = 4, units = "in", dpi = 1200)
filename = here("figures", "FigS2.pdf")
ggsave(filename, FigS2, width = 7.20472, height = 4, units = "in")
FigS2 <- Expt5Locoplot_10mins / (Expt5SumPlot + Expt5DBSplot) + plot_annotation(tag_levels = 'A')
filename = here("figures", "FigS2.png")
ggsave(filename, FigS2, width = 5.51181, height = 4, units = "in", dpi = 1200)
filename = here("figures", "FigS2.pdf")
ggsave(filename, FigS2, width = 5.51181, height = 4, units = "in")
Expt5SumPlot <- plot_data4 %>%
ggplot(mapping = aes(x = Amph, y = activity, group =  interaction(Amph,Feeding),  fill = Feeding,  colour = Feeding, linetype = Feeding)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  colour="black", size = .5) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  colour="black", width = 0,  size = .5, linetype = "solid") +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0))) +
ggtitle("") + xlab("Amphetamine") + ylab("Total beam breaks \n (120 mins)") +
theme_cowplot(8) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=8)) +
coord_cartesian(ylim = c(0, 60000)) +
theme(axis.title.x=element_text(face = "bold")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_linetype_manual(name = "**", values = Linetypes) +
scale_colour_manual(name = "**", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "**", values = fillcolours) +
geom_signif(y_position = c(52000, 55000, 58000, 49000),xmin = c("Veh","Veh","Veh","1.0 mg/kg"), xmax = c("1.0 mg/kg","2.5 mg/kg", "5.0 mg/kg","2.5 mg/kg"), annotation = c("**", "**", "**", "**"), tip_length = c(.01, 0.01), size = .5, vjust = .5, colour = "black")
## Put plots together
FigS2 <- Expt5Locoplot_10mins / (Expt5SumPlot + Expt5DBSplot) + plot_annotation(tag_levels = 'A')
filename = here("figures", "FigS2.png")
ggsave(filename, FigS2, width = 5.51181, height = 4, units = "in", dpi = 1200)
filename = here("figures", "FigS2.pdf")
ggsave(filename, FigS2, width = 5.51181, height = 4, units = "in")
source('C:/Users/mario/Documents/GitHub/Marios-temp/LY354740_Rat/LY354740_Stats/scripts/figures/Fig2.R', echo=TRUE)
Expt5SumPlot <- plot_data4 %>%
ggplot(mapping = aes(x = Amph, y = activity, group =  interaction(Amph,Feeding),  fill = Feeding,  colour = Feeding, linetype = Feeding)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  colour="black", size = .5) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  colour="black", width = 0,  size = .5, linetype = "solid") +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0))) +
ggtitle("") + xlab("Amphetamine") + ylab("Total beam breaks \n (120 mins)") +
theme_cowplot(8) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=8)) +
coord_cartesian(ylim = c(0, 60000)) +
theme(axis.title.x=element_text(face = "bold")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_linetype_manual(name = "**", values = Linetypes) +
scale_colour_manual(name = "**", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "**", values = fillcolours) +
geom_signif(y_position = c(52000, 55000, 59000, 47000),xmin = c("Veh","Veh","Veh","1.0 mg/kg"), xmax = c("1.0 mg/kg","2.5 mg/kg", "5.0 mg/kg","2.5 mg/kg"), annotation = c("**", "**", "**", "**"), tip_length = c(.01, 0.01), size = .5, vjust = .5, colour = "black")
source('C:/Users/mario/Documents/GitHub/Marios-temp/LY354740_Rat/LY354740_Stats/scripts/figures/Fig2.R', echo=TRUE)
source('C:/Users/mario/Documents/GitHub/Marios-temp/LY354740_Rat/LY354740_Stats/scripts/figures/Fig2.R', echo=TRUE)
source('C:/Users/mario/Documents/GitHub/Marios-temp/LY354740_Rat/LY354740_Stats/scripts/figures/Fig2.R', echo=TRUE)
source('C:/Users/mario/Documents/GitHub/Marios-temp/LY354740_Rat/LY354740_Stats/scripts/figures/Fig2.R', echo=TRUE)
# Plot for fun
Expt5DBSplot <- ggplot(data = plot_data5, mapping = aes(x = as.factor(Time_hrs), y = nM, group = interaction(Amph,Feeding), colour = interaction(Amph,Feeding), linetype = interaction(Amph,Feeding), shape = interaction(Amph,Feeding), fill = interaction(Amph, Feeding))) +
stat_summary_bin(fun.data = "mean_se", geom = "line", size = .5) +
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0.0, size = .5, linetype = 1, show.legend = FALSE) +
stat_summary_bin(fun.data = "mean_se", geom = "point", size = 2) +
# Make Pretty
scale_y_continuous(expand = expansion(mult = c(0, 0))) +
ggtitle("Amphetamine") + xlab("Mins") + ylab("Concentration (nM)") +
theme_cowplot(8) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=8)) +
coord_cartesian(ylim = c(0,8000)) +
theme(axis.title.x=element_text(face = "bold")) +
theme(strip.background = element_rect(fill=NA )) +
scale_linetype_manual(name = "", values = Linetypes) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_shape_manual(name = "", values = pointshapes) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(1.5,"line"))
Expt5DBSplot
source('C:/Users/mario/Documents/GitHub/Marios-temp/LY354740_Rat/LY354740_Stats/scripts/figures/Fig2.R', echo=TRUE)
# Run script to generate figure
# Script run separately to minimize clutter
source(here("scripts","figures", "Fig2.R"))
