same_diff = str_replace(string = same_diff, pattern = "Devalued_Devalued Lever",replacement = "Same"),
same_diff = str_replace(string = same_diff, pattern = "General_Devalued Lever",replacement = "General"),
same_diff = str_replace(string = same_diff, pattern = "General_Non-Devalued Lever",replacement = "General"),
same_diff = str_replace(string = same_diff, pattern = "PreCS_Devalued Lever",replacement = "PreCS"),
same_diff = str_replace(string = same_diff, pattern = "PreCS_Non-Devalued Lever",replacement = "PreCS"))
# Average across repeated session
summary_LP_commonPreCS <- summary_LP_commonPreCS %>%
group_by(Subject, Devaluation,  `Trial Structure`, same_diff, `Devalued Pavlovian US?`) %>%
summarise(`lever Presses` = mean(`lever Presses`)) %>%
ungroup()
levelorder <- c("Non-Devalued", "Devalued")
levelorderCS <- c("PreCS", "Non-Devalued", "Devalued", "General")
leverlorderCS2 <- c("PreCS", "Same", "Different", "General")
summary_LP_commonPreCS <- summary_LP_commonPreCS %>%
mutate(Devaluation = str_replace(string = Devaluation, pattern = "Non-Devalued Lever",replacement = "Non-Devalued"),
Devaluation = str_replace(string = Devaluation, pattern = "Devalued Lever",replacement = "Devalued"),
Devaluation = factor(Devaluation, levels = levelorder),
`Devalued Pavlovian US?` = factor(`Devalued Pavlovian US?`, levels = levelorderCS),
same_diff = factor(same_diff, levels = leverlorderCS2))
return(summary_LP_commonPreCS)
}
# Save data for analysis
summary <- plot_data(data_path)
save_path <- here("rawdata", "processed_data", "SKR214_SatietysPITTest.csv")
write_csv(summary, save_path)
# Plot Data
scalelims = c(0,6)
scalelims_breaks = 1
# SKR214_Satiety_sPITTest_splitDeval <- summary %>% ggplot(mapping = aes(x = Devaluation, y = `lever Presses`, colour = `Devalued Pavlovian US?`, group = `Devalued Pavlovian US?`, fill = `Devalued Pavlovian US?`)) +
#   stat_summary(fun = "mean", geom = "bar", size = 1, position = position_dodge(width = .9)) +
#   stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0, size = 0.2, position = position_dodge(width = 0.9), colour = "black", linetype = 1, show.legend = FALSE) +
#   theme_cowplot() +
#   coord_cartesian(ylim = scalelims) +
#   scale_y_continuous(breaks = seq(scalelims[1],scalelims[2],by = scalelims_breaks), expand = c(0.0,0)) +
#   # ggtitle("",subtitle = "") +
#   ylab("Lever presses/min") +
#   xlab("Lever") +
#   theme(axis.title.x=element_text(face = "bold")) +
#   scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour"), limits = force) +
#   scale_fill_manual(name = "", values = fillcolours, limits = force)
#
# SKR214_Satiety_sPITTest_splitDeval
# Alternative Plots that help visualise the 2 Lever tests! ----------------
# summary %>% ggplot(mapping = aes(x = Devaluation, y = `lever Presses`, colour = same_diff, group = same_diff, fill = same_diff)) +
#   stat_summary(fun = "mean", geom = "bar", size = 1, position = position_dodge(width = .9)) +
#   stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0, size = 0.2, position = position_dodge(width = 0.9), colour = "black", linetype = 1, show.legend = FALSE) +
#   facet_grid(cols = vars(`Devalued Pavlovian US?`)) +
#   theme_cowplot() +
#   coord_cartesian(ylim = scalelims) +
#   scale_y_continuous(breaks = seq(scalelims[1],scalelims[2],by = scalelims_breaks), expand = c(0.0,0)) +
#   # ggtitle("",subtitle = "") +
#   ylab("Lever presses/min") +
#   xlab("Lever") +
#   theme(axis.title.x=element_text(face = "bold"))
#   # scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour"), limits = force, limits = force) +
#   # scale_fill_manual(name = "", values = fillcolours, limits = force)
#
# summary %>% ggplot(mapping = aes(x = Devaluation, y = `lever Presses`, colour = `Devalued Pavlovian US?`, group = `Devalued Pavlovian US?`, fill = `Devalued Pavlovian US?`)) +
#   stat_summary(fun = "mean", geom = "bar", size = 1, position = position_dodge(width = .9)) +
#   stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0, size = 0.2, position = position_dodge(width = 0.9), colour = "black", linetype = 1, show.legend = FALSE) +
#   facet_grid(cols = vars(Devaluation)) +
#   theme_cowplot() +
#   coord_cartesian(ylim = scalelims) +
#   scale_y_continuous(breaks = seq(scalelims[1],scalelims[2],by = scalelims_breaks), expand = c(0.0,0)) +
#   # ggtitle("",subtitle = "") +
#   ylab("Lever presses/min") +
#   xlab("Pavlovian CS") +
#   theme(axis.title.x=element_text(face = "bold"))
SKR214_Satiety_sPITTest_splitSameDiff <- summary %>% ggplot(mapping = aes(x = Devaluation, y = `lever Presses`, colour = same_diff, group = same_diff, fill = same_diff)) +
stat_summary(fun = "mean", geom = "bar", size = 1, position = position_dodge(width = .9)) +
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0, size = 0.2, position = position_dodge(width = 0.9), colour = "black", linetype = 1, show.legend = FALSE) +
theme_cowplot() +
coord_cartesian(ylim = scalelims) +
scale_y_continuous(breaks = seq(scalelims[1],scalelims[2],by = scalelims_breaks), expand = c(0.0,0)) +
# ggtitle("",subtitle = "") +
ylab("Lever presses/min") +
xlab("Lever") +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour"), limits = force, limits = force) +
scale_fill_manual(name = "", values = fillcolours, limits = force)
SKR214_Satiety_sPITTest_splitSameDiff
view(summary)
# Expt1. SKR214 - Instrumental Acquisition --------------------------------
# Define rawdata filepath
data_path <- here("rawdata", "SKR214_Inst_Acquisition.csv")
# Load and organise data
plot_data <- function(data_path) {
### 1. Prepare Data
# Load Data
full_data <- read_csv(data_path)
# Summarise data into averages per session/day
summary <- full_data %>%
group_by(Experiment, Schedule, Day, Subject, RewardName, LeverName) %>%
summarise(LP = sum(`LP Bin`),
Rewards = sum(`Rewards Bin`),
SessionLength = median(`Session Length`[`Session Length` != 0]),
LP_rate_min = (LP/SessionLength) *60,
MagEntry = sum(`MagEntry Bin`),
MagEntry_rate_min = (MagEntry/SessionLength) *60,
) %>%
ungroup()
# Check that there is only a single value per subject/reward/day
summary %>%
group_by(Subject,RewardName, Day) %>%
summarise(n = n()) %>%
spread(Day, n)%>%
kable()
### 2. Fix data Order for plotting
levelorder <- c("Sucrose", "Maltodextrin")
summary <- summary %>%
mutate(RewardName = str_replace(string = RewardName, pattern = "maltodextrin",replacement = "Maltodextrin"),
RewardName = factor(RewardName, levels = levelorder)) %>%
arrange(RewardName,Day)
# Return Summary Data
return(summary)
}
# Save data for analysis
summary <- plot_data(data_path)
save_path <- here("rawdata", "processed_data", "SKR214_InstrumentalAcquisition.csv")
write_csv(summary, save_path)
# Plot Data
scalelims = c(0,40)
scalelims_breaks = 5
SKR214_Instrumental_acquisition <- summary %>%
filter(Day <= 6) %>%
ggplot(mapping = aes(x = as.factor(Day), y = LP_rate_min, colour = RewardName, group = RewardName, fill = RewardName, shape = RewardName, linetype = RewardName)) +
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0, size = 0.5, linetype = 1, show.legend = FALSE) +
stat_summary(fun = "mean", geom = "line", size = 0.5) +
stat_summary(fun = "mean", geom = "point", size = 3) +
theme_cowplot() +
coord_cartesian(ylim = scalelims) +
scale_y_continuous(breaks = seq(scalelims[1],scalelims[2],by = scalelims_breaks), expand = c(0.0,0)) +
# ggtitle("",subtitle = "") +
ylab("Lever presses/min") +
xlab("Day") +
theme(axis.title.x=element_text(face = "bold")) +
scale_linetype_manual(name = "", values = linetypes, limits = force)+
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour"), limits = force) +
scale_shape_manual(name = "", values = pointshapes, limits = force) +
scale_fill_manual(name = "", values = fillcolours, limits = force)
SKR214_Instrumental_acquisition
# Expt1. SKR214 - Pavlovian Acquisition -----------------------------------
# Define rawdata filepath
data_path <- here("rawdata", "SKR214_Pav_Freq_Acquisition.csv")
# Load and organise data
plot_data <- function(data_path) {
### 1. Prepare Data
# Load Data
full_data <- read_csv(data_path)
# Remove unnecessary calculation columns
full_data <- full_data %>%
select(`Day`,
`MSN`,
`StartDate`,
`StartTime`,
`Experiment`,
`Group`,
`Box`,
`Subject`,
`Total MagEntries`,
`Total MagDuration`,
`Total Rewards`,
`Total Session Time`,
`Trial Number`,
`ITI_Duration(minus PreCS)`,
`CS_Identity [1 = Noise, 2 = Click, 3 = tone]`,
`US_Identity [1 = Sucrose, 2 = Maltodextrin, 3 = Pellet]`,
`Number of USs`,
`MagEntry_ITI`,
`Latency to first magazine Entry`,
`First response was an Exit`,
`MagEntry_PreCS (2mins)`,
`MagEntry_CS (2 mins)`,
`CS-PreCS`,
`Trial Number, 1 CS`,
`CS_Name`,
`US_Name`,
`MagEntriesCS excluding reward delivery 5s`,
`CS_Duration (s)_NoReward5s`,
`Devalued Reward 1st test`,
`Devalued?`)
# Summarise data into averages per Outcome ID, rates per trial (1 mins)
summary <- full_data %>%
group_by(Experiment, Day, Subject, CS_Name, US_Name) %>%
summarise(AvgRewards = mean(`Number of USs`),
CS_PreCS = mean(`CS-PreCS`)/2,
MagEntry_PreCS = mean(`MagEntry_PreCS (2mins)`)/2,
MagEntry_CS = mean(`MagEntry_CS (2 mins)`)/2
) %>%
ungroup()
### 2. Fix data Order for plotting
levelorder <- c("Sucrose", "Maltodextrin", "Pellet")
summary <- summary %>%
mutate(US_Name = factor(US_Name, levels = levelorder))
# Return Summary Data
return(summary)
}
# Save data for analysis
summary <- plot_data(data_path)
save_path <- here("rawdata", "processed_data", "SKR214_PavlovianAcquisition.csv")
write_csv(summary, save_path)
# Plot Data
scalelims = c(0,15)
scalelims_breaks = 5
SKR214_Pavlovian_acquisition <- summary %>%
filter(Day <= 6) %>%
ggplot(mapping = aes(x = as.factor(Day), y = CS_PreCS, colour = US_Name, group = US_Name, fill = US_Name, shape = US_Name, linetype = US_Name)) +
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0, size = 0.5, linetype = 1, show.legend = FALSE) +
stat_summary(fun = "mean", geom = "line", size = 0.5) +
stat_summary(fun = "mean", geom = "point", size = 3) +
theme_cowplot() +
coord_cartesian(ylim = scalelims) +
scale_y_continuous(breaks = seq(scalelims[1],scalelims[2],by = scalelims_breaks), expand = c(0.0,0)) +
# ggtitle("",subtitle = "") +
ylab("CS-PreCS Entries/min") +
xlab("Day") +
theme(axis.title.x=element_text(face = "bold")) +
scale_linetype_manual(name = "", values = linetypes, limits = force)+
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour"), limits = force) +
scale_shape_manual(name = "", values = pointshapes, limits = force) +
scale_fill_manual(name = "", values = fillcolours, limits = force)
SKR214_Pavlovian_acquisition
# SKR214_Satiety_consumption ----------------------------------------------
# Define rawdata filepath
data_path <- here("rawdata", "SKR214_Satiety_consumption.csv")
# Load and organise data
plot_data <- function(data_path) {
### 1. Prepare Data
# Load Data
full_data <- read_csv(data_path)
# Check that there are equal numbers of entries per subject/day
full_data %>%
group_by(Rat, TestNumber) %>%
summarise(n = n()) %>%
spread(TestNumber, n)%>%
kable()
summary <- full_data
### 2. Fix data Order for plotting
levelorder <- c("Sucrose", "Maltodextrin", "Pellet")
summary <- summary %>%
mutate(Liquid = factor(Liquid, levels = levelorder))
# Return Summary Data
return(summary)
}
# Save data for analysis
summary <- plot_data(data_path)
save_path <- here("rawdata", "processed_data", "SKR214_SatietyConsumption.csv")
write_csv(summary, save_path)
# Plot Data
scalelims = c(0,24)
scalelims_breaks = 2
SKR214_Satiety_Consumption <- summary %>% ggplot(mapping = aes(x = Liquid, y = `Consumed (g)`, colour = Liquid, group = Liquid, fill = Liquid)) +
stat_summary(fun = "mean", geom = "bar", size = 1, position = position_dodge(width = .9)) +
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0, size = 0.2, position = position_dodge(width = 0.9), colour = "black", linetype = 1, show.legend = FALSE) +
theme_cowplot() +
coord_cartesian(ylim = scalelims) +
scale_y_continuous(breaks = seq(scalelims[1],scalelims[2],by = scalelims_breaks), expand = c(0.0,0)) +
# ggtitle("",subtitle = "") +
ylab("Consumed (g)") +
xlab("") +
# theme(axis.title.x=element_blank())+
theme(axis.text.x = element_blank()) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour"), limits = force) +
scale_fill_manual(name = "", values = fillcolours, limits = force)
SKR214_Satiety_Consumption
# Expt1. SKR214 - Satiety Instrumental Devaluation  ----------------------------------------------
# Define rawdata filepath
data_path <- here("rawdata", "SKR214_sPIT_Test.csv")
# Load and organise data
plot_data <- function(data_path) {
### 1. Prepare Data
# Load Data
full_data <- read_csv(data_path)
summary <- full_data %>%
filter(`Trial Structure` == "Baseline Extinction",
Devaluation == "Satiety") %>%
group_by(Devaluation, Subject, `Minute Counter`) %>%
summarise(`Devalued Lever` = mean(`Devalued Lever`)*60,
`Non-Devalued Lever` = mean(`Non-Devalued Lever`)*60,
MagEntries = mean(MagEntries)*60,
# MagDuration = mean(MagDuration)*60 # MagDuration not recorded in these data
) %>%
ungroup()
summary_LP <- summary %>%
select(Subject, `Minute Counter`, `Devalued Lever`, `Non-Devalued Lever`) %>%
gather(key = "Devaluation", value = "lever Presses", `Devalued Lever`, `Non-Devalued Lever`)
### 2. Fix data Order for plotting
levelorder <- c("Non-Devalued", "Devalued")
summary_LP <- summary_LP %>%
mutate(Devaluation = str_replace(string = Devaluation, pattern = "Non-Devalued Lever",replacement = "Non-Devalued"),
Devaluation = str_replace(string = Devaluation, pattern = "Devalued Lever",replacement = "Devalued"),
Devaluation = factor(Devaluation, levels = levelorder))
# Check that there are equal numbers of entries per subject/day
summary_LP %>%
group_by(Subject) %>%
summarise(n = n()) %>%
spread(Subject, n)%>%
kable()
return(summary_LP)
}
# Save data for analysis
summary <- plot_data(data_path)
save_path <- here("rawdata", "processed_data", "SKR214_SatietyDevalTest.csv")
write_csv(summary, save_path)
# Plot Data
scalelims = c(0,14)
scalelims_breaks = 2
SKR214_Satiety_DevalTest <- summary %>% ggplot(mapping = aes(x = as.factor(`Minute Counter`), y = `lever Presses`, colour = Devaluation, group = Devaluation, fill = Devaluation, shape = Devaluation, linetype = Devaluation)) +
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0, size = 0.5, linetype = 1, show.legend = FALSE) +
stat_summary(fun = "mean", geom = "line", size = 0.5) +
stat_summary(fun = "mean", geom = "point", size = 3) +
theme_cowplot() +
coord_cartesian(ylim = scalelims) +
scale_y_continuous(breaks = seq(scalelims[1],scalelims[2],by = scalelims_breaks), expand = c(0.0,0)) +
# ggtitle("",subtitle = "") +
ylab("Lever presses/min") +
xlab("1 minute bins") +
theme(axis.title.x=element_text(face = "bold")) +
scale_linetype_manual(name = "", values = linetypes, limits = force)+
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour"), limits = force) +
scale_shape_manual(name = "", values = pointshapes, limits = force) +
scale_fill_manual(name = "", values = fillcolours, limits = force)
SKR214_Satiety_DevalTest
# Expt1. SKR214 - Satiety Instrumental Devaluation DevalIndex  ----------------------------------------------
# Define rawdata filepath
data_path <- here("rawdata", "SKR214_sPIT_Test.csv")
# Load and organise data
plot_data <- function(data_path) {
### 1. Prepare Data
# Load Data
full_data <- read_csv(data_path)
summary <- full_data %>%
filter(`Trial Structure` == "Baseline Extinction",
Devaluation == "Satiety",
`Minute Counter` <= 4) %>%
group_by(Devaluation, Subject) %>%
summarise(`Devalued Lever` = mean(`Devalued Lever`)*60,
`Non-Devalued Lever` = mean(`Non-Devalued Lever`)*60,
MagEntries = mean(MagEntries)*60,
# MagDuration = mean(MagDuration)*60 # MagDuration not recorded in these data
) %>%
ungroup() %>%
mutate( Deval_index = `Non-Devalued Lever` - `Devalued Lever`)
# Check that there are equal numbers of entries per subject/day
summary %>%
group_by(Subject) %>%
summarise(n = n()) %>%
spread(Subject, n)%>%
kable()
return(summary)
}
# Save data for analysis
summary <- plot_data(data_path)
save_path <- here("rawdata", "processed_data", "SKR214_SatietyDevalTest_DevalIndex.csv")
write_csv(summary, save_path)
# Plot Data
scalelims = c(0,14)
scalelims_breaks = 2
SKR214_Satiety_DevalTest_Index <- summary %>% ggplot(mapping = aes(x = Devaluation, y = Deval_index, colour = Devaluation, group = Devaluation, fill = Devaluation)) +
# stat_summary(fun = "mean", geom = "bar", size = 1, position = position_dodge(width = .9)) +
# stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0, size = 0.2, position = position_dodge(width = 0.9), colour = "black", linetype = 1, show.legend = FALSE) +
geom_violin(show.legend = FALSE)+
geom_point(show.legend = FALSE)+
theme_cowplot() +
coord_cartesian(ylim = scalelims) +
scale_y_continuous(breaks = seq(scalelims[1],scalelims[2],by = scalelims_breaks), expand = c(0.0,0)) +
# ggtitle("",subtitle = "") +
ylab("Non-Devalued - Devalued \n Lever presses/min") +
xlab("Devaluation") +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour"), limits = force) +
scale_fill_manual(name = "", values = fillcolours, limits = force)
SKR214_Satiety_DevalTest_Index
# Expt1. SKR214 - Satiety sPIT Test  ----------------------------------------------
# Define rawdata filepath
data_path <- here("rawdata", "SKR214_sPIT_Test.csv")
# Load and organise data
plot_data <- function(data_path) {
### 1. Prepare Data
# Load Data
full_data <- read_csv(data_path)
summary <- full_data %>%
filter(
`Trial Structure` == "PreCS" | `Trial Structure` == "CS",
# `trial period split minutes [1,2]` == "PreCS2"|`trial period split minutes [1,2]` == "CS1",
# `trial period split minutes [1,2]` == "PreCS2"|`trial period split minutes [1,2]` == "CS2",
# `trial period split minutes [1,2]` == "PreCS1" | `trial period split minutes [1,2]` == "PreCS2"|`trial period split minutes [1,2]` == "CS1"|`trial period split minutes [1,2]` == "CS2",
# `Trial Number` == 1|`Trial Number` == 2,
Devaluation == "Satiety"
) %>%
group_by(Devaluation, Group, Session, Subject, `Trial Structure`, `Devalued Pavlovian US?`) %>%
summarise(`Devalued Lever` = mean(`Devalued Lever`)*60,
`Non-Devalued Lever` = mean(`Non-Devalued Lever`)*60,
MagEntries = mean(MagEntries)*60,
# MagDuration = mean(MagDuration)*60 # MagDuration not recorded in these data
) %>%
ungroup()
summary_LP <- summary %>%
select(-MagEntries, -Devaluation) %>%
pivot_longer( cols =  `Devalued Lever`:`Non-Devalued Lever`, names_to = "Devaluation", values_to = "lever Presses")
summary_LP_wide <- summary_LP %>%
pivot_wider(names_from = `Trial Structure`, values_from = `lever Presses`)
summary_LP_PreCSonly <- summary_LP_wide %>%
select(-CS) %>%
group_by(Group, Session, Subject, Devaluation) %>%
summarise(PreCS = mean(PreCS)) %>%
ungroup()
summary_LP_PreCSonly <- summary_LP_PreCSonly %>%
pivot_longer(cols = PreCS, names_to = "Trial Structure", values_to = "lever Presses") %>%
mutate("Devalued Pavlovian US?" = "PreCS")
summary_LP_commonPreCS <- summary_LP %>%
filter(`Trial Structure` == "CS") %>%
full_join(summary_LP_PreCSonly)
summary_LP_commonPreCS <- summary_LP_commonPreCS %>%
unite("same_diff",c("Devalued Pavlovian US?", "Devaluation"), sep = "_", remove = FALSE) %>%
mutate(same_diff = str_replace(string = same_diff, pattern = "Non-Devalued_Non-Devalued Lever",replacement = "Same"),
same_diff = str_replace(string = same_diff, pattern = "Devalued_Non-Devalued Lever",replacement = "Different"),
same_diff = str_replace(string = same_diff, pattern = "Non-Devalued_Devalued Lever",replacement = "Different"),
same_diff = str_replace(string = same_diff, pattern = "Devalued_Devalued Lever",replacement = "Same"),
same_diff = str_replace(string = same_diff, pattern = "General_Devalued Lever",replacement = "General"),
same_diff = str_replace(string = same_diff, pattern = "General_Non-Devalued Lever",replacement = "General"),
same_diff = str_replace(string = same_diff, pattern = "PreCS_Devalued Lever",replacement = "PreCS"),
same_diff = str_replace(string = same_diff, pattern = "PreCS_Non-Devalued Lever",replacement = "PreCS"))
# Average across repeated session
summary_LP_commonPreCS <- summary_LP_commonPreCS %>%
group_by(Subject, Devaluation,  `Trial Structure`, same_diff, `Devalued Pavlovian US?`) %>%
summarise(`lever Presses` = mean(`lever Presses`)) %>%
ungroup()
levelorder <- c("Non-Devalued", "Devalued")
levelorderCS <- c("PreCS", "Non-Devalued", "Devalued", "General")
leverlorderCS2 <- c("PreCS", "Same", "Different", "General")
summary_LP_commonPreCS <- summary_LP_commonPreCS %>%
mutate(Devaluation = str_replace(string = Devaluation, pattern = "Non-Devalued Lever",replacement = "Non-Devalued"),
Devaluation = str_replace(string = Devaluation, pattern = "Devalued Lever",replacement = "Devalued"),
Devaluation = factor(Devaluation, levels = levelorder),
`Devalued Pavlovian US?` = factor(`Devalued Pavlovian US?`, levels = levelorderCS),
same_diff = factor(same_diff, levels = leverlorderCS2))
return(summary_LP_commonPreCS)
}
# Save data for analysis
summary <- plot_data(data_path)
save_path <- here("rawdata", "processed_data", "SKR214_SatietysPITTest.csv")
write_csv(summary, save_path)
# Plot Data
scalelims = c(0,6)
scalelims_breaks = 1
# SKR214_Satiety_sPITTest_splitDeval <- summary %>% ggplot(mapping = aes(x = Devaluation, y = `lever Presses`, colour = `Devalued Pavlovian US?`, group = `Devalued Pavlovian US?`, fill = `Devalued Pavlovian US?`)) +
#   stat_summary(fun = "mean", geom = "bar", size = 1, position = position_dodge(width = .9)) +
#   stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0, size = 0.2, position = position_dodge(width = 0.9), colour = "black", linetype = 1, show.legend = FALSE) +
#   theme_cowplot() +
#   coord_cartesian(ylim = scalelims) +
#   scale_y_continuous(breaks = seq(scalelims[1],scalelims[2],by = scalelims_breaks), expand = c(0.0,0)) +
#   # ggtitle("",subtitle = "") +
#   ylab("Lever presses/min") +
#   xlab("Lever") +
#   theme(axis.title.x=element_text(face = "bold")) +
#   scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour"), limits = force) +
#   scale_fill_manual(name = "", values = fillcolours, limits = force)
#
# SKR214_Satiety_sPITTest_splitDeval
# Alternative Plots that help visualise the 2 Lever tests! ----------------
# summary %>% ggplot(mapping = aes(x = Devaluation, y = `lever Presses`, colour = same_diff, group = same_diff, fill = same_diff)) +
#   stat_summary(fun = "mean", geom = "bar", size = 1, position = position_dodge(width = .9)) +
#   stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0, size = 0.2, position = position_dodge(width = 0.9), colour = "black", linetype = 1, show.legend = FALSE) +
#   facet_grid(cols = vars(`Devalued Pavlovian US?`)) +
#   theme_cowplot() +
#   coord_cartesian(ylim = scalelims) +
#   scale_y_continuous(breaks = seq(scalelims[1],scalelims[2],by = scalelims_breaks), expand = c(0.0,0)) +
#   # ggtitle("",subtitle = "") +
#   ylab("Lever presses/min") +
#   xlab("Lever") +
#   theme(axis.title.x=element_text(face = "bold"))
#   # scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour"), limits = force, limits = force) +
#   # scale_fill_manual(name = "", values = fillcolours, limits = force)
#
# summary %>% ggplot(mapping = aes(x = Devaluation, y = `lever Presses`, colour = `Devalued Pavlovian US?`, group = `Devalued Pavlovian US?`, fill = `Devalued Pavlovian US?`)) +
#   stat_summary(fun = "mean", geom = "bar", size = 1, position = position_dodge(width = .9)) +
#   stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0, size = 0.2, position = position_dodge(width = 0.9), colour = "black", linetype = 1, show.legend = FALSE) +
#   facet_grid(cols = vars(Devaluation)) +
#   theme_cowplot() +
#   coord_cartesian(ylim = scalelims) +
#   scale_y_continuous(breaks = seq(scalelims[1],scalelims[2],by = scalelims_breaks), expand = c(0.0,0)) +
#   # ggtitle("",subtitle = "") +
#   ylab("Lever presses/min") +
#   xlab("Pavlovian CS") +
#   theme(axis.title.x=element_text(face = "bold"))
SKR214_Satiety_sPITTest_splitSameDiff <- summary %>% ggplot(mapping = aes(x = Devaluation, y = `lever Presses`, colour = same_diff, group = same_diff, fill = same_diff)) +
stat_summary(fun = "mean", geom = "bar", size = 1, position = position_dodge(width = .9)) +
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0, size = 0.2, position = position_dodge(width = 0.9), colour = "black", linetype = 1, show.legend = FALSE) +
theme_cowplot() +
coord_cartesian(ylim = scalelims) +
scale_y_continuous(breaks = seq(scalelims[1],scalelims[2],by = scalelims_breaks), expand = c(0.0,0)) +
# ggtitle("",subtitle = "") +
ylab("Lever presses/min") +
xlab("Lever") +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour"), limits = force, limits = force) +
scale_fill_manual(name = "", values = fillcolours, limits = force)
SKR214_Satiety_sPITTest_splitSameDiff
SKR214_Satiety_sPITTest_splitSameDiff <- summary %>% ggplot(mapping = aes(x = Devaluation, y = `lever Presses`, colour = same_diff, group = same_diff, fill = same_diff)) +
stat_summary(fun = "mean", geom = "bar", size = 1, position = position_dodge(width = .9)) +
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0, size = 0.2, position = position_dodge(width = 0.9), colour = "black", linetype = 1, show.legend = FALSE) +
theme_cowplot() +
coord_cartesian(ylim = scalelims) +
scale_y_continuous(breaks = seq(scalelims[1],scalelims[2],by = scalelims_breaks), expand = c(0.0,0)) +
# ggtitle("",subtitle = "") +
ylab("Lever presses/min") +
xlab("Lever") +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour"), limits = force, limits = force) +
scale_fill_manual(name = "", values = fillcolours, limits = force)
SKR214_Satiety_sPITTest_splitSameDiff
