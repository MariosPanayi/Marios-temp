(C+D+E)/(F1+G+H)/(I+J+K)
layout <- "
AAAA
BBCC
DEF#
GHI#
JKL#
"
Fig4 <- Blank+B1+B2C+D+E+F1+G+H+I+J+K + plot_annotation(tag_levels = 'A') +
plot_layout(design = layout)
Fig4 <- blank+B1+B2C+D+E+F1+G+H+I+J+K + plot_annotation(tag_levels = 'A') +
plot_layout(design = layout)
blank <- ggplot() + geom_blank()
layout <- "
AAAA
BBCC
DEF#
GHI#
JKL#
"
Fig4 <- blank+B1+B2C+D+E+F1+G+H+I+J+K + plot_annotation(tag_levels = 'A') +
plot_layout(design = layout)
blank <- ggplot() + geom_blank()
B1 <- Expt6_aFCV_AvgTraces_Pre
B2 <- Expt6_aFCV_AvgTraces_Post
B1 + B2
C <- Expt6_aFCV_PrePost_DA_max +
theme(legend.position="none") +
theme(axis.title.x = element_blank())
D <- Expt6_aFCV_PrePost_DA_AUC +
theme(legend.position="none") +
theme(axis.title.x = element_blank())
E <- Expt6_aFCV_PrePost_DA_latency +
theme(legend.position="none") +
theme(axis.title.x = element_blank())
F1 <- Expt6_StimIntensityPost_DA_max_PercBaseline  +
theme(legend.position="none") +
theme(plot.title = element_blank())
G <-  Expt6_StimIntensityPost_DA_AUC_PercBaseline  +
theme(legend.position="none") +
theme(plot.title = element_blank())
H <- Expt6_StimIntensityPost_DA_Latency_PercBaseline +
theme(legend.position="none") +
theme(plot.title = element_blank())
I <- Expt6_StimPulsesPost_DA_max_PercBaseline  +
theme(legend.position="none") +
theme(plot.title = element_blank())
J <- Expt6_StimPulsesPost_DA_AUC_PercBaseline  +
theme(legend.position="none") +
theme(plot.title = element_blank())
K <- Expt6_StimPulsesPost_DA_Latency_PercBaseline +
theme(legend.position="none") +
theme(plot.title = element_blank())
layout <- "
AAAA
BBCC
DEF#
GHI#
JKL#
"
Fig4 <- blank+B1+B2C+D+E+F1+G+H+I+J+K + plot_annotation(tag_levels = 'A') +
plot_layout(design = layout)
Fig4 <- blank+B1+B2+C+D+E+F1+G+H+I+J+K + plot_annotation(tag_levels = 'A') +
plot_layout(design = layout)
Fig4
layout <- "
AAAA
BC##
DEF#
GHI#
JKL#
"
Fig4 <- blank+B1+B2+C+D+E+F1+G+H+I+J+K + plot_annotation(tag_levels = 'A') +
plot_layout(design = layout)
Fig4
layout <- "
AAA
BC#
DEF
GHI
JKL
"
Fig4 <- blank+B1+B2+C+D+E+F1+G+H+I+J+K + plot_annotation(tag_levels = 'A') +
plot_layout(design = layout)
source('C:/Users/mario/Documents/GitHub/Marios-temp/LY354740_Rat/LY354740_Stats/scripts/figures/Fig4.R', echo=TRUE)
source('C:/Users/mario/Documents/GitHub/Marios-temp/LY354740_Rat/LY354740_Stats/scripts/figures/Fig4.R', echo=TRUE)
(SA1 +SA2 +SA3)/(SA4 +SA5 +SA6)/(SA7 +SA8 +SA9)/(SA10+SA11+SA12)
## Supplementary Figure Plotting arrangement ====
SA1 <-  Expt6_StimIntensityPre_DA_max
SA2 <-  Expt6_StimIntensityPre_DA_AUC
SA3 <-  Expt6_StimIntensityPre_DA_Latency
SA4 <-  Expt6_StimPulsesPre_DA_max
SA5 <-  Expt6_StimPulsesPre_DA_AUC
SA6 <-  Expt6_StimPulsesPre_DA_Latency
SA7 <-  Expt6_StimIntensityPost_DA_max
SA8 <-  Expt6_StimIntensityPost_DA_AUC
SA9 <-  Expt6_StimIntensityPost_DA_Latency
SA10 <-  Expt6_StimPulsesPost_DA_max
SA11 <-  Expt6_StimPulsesPost_DA_AUC
SA12 <-  Expt6_StimPulsesPost_DA_Latency
# Expt6_StimIntensityPre_DA_max_PercBaseline + Expt6_StimIntensityPre_DA_AUC_PercBaseline + Expt6_StimIntensityPre_DA_Latency_PercBaseline
# Expt6_StimPulsesPre_DA_max_PercBaseline + Expt6_StimPulsesPre_DA_AUC_PercBaseline + Expt6_StimPulsesPre_DA_Latency_PercBaseline
(SA1 +SA2 +SA3)/(SA4 +SA5 +SA6)/(SA7 +SA8 +SA9)/(SA10+SA11+SA12)
(SA1 +SA2 +SA3)/(SA4 +SA5 +SA6)/(SA7 +SA8 +SA9)/(SA10+SA11+SA12)
(SA1 +SA2 +SA3)/(SA4 +SA5 +SA6)/(SA7 +SA8 +SA9)/(SA10+SA11+SA12) + plot_layout(guides = "collect")   + plot_annotation(tag_levels = 'A')
## Supplementary Figure Plotting arrangement ====
SA1 <-  Expt6_StimIntensityPre_DA_max
SA2 <-  Expt6_StimIntensityPre_DA_AUC
SA3 <-  Expt6_StimIntensityPre_DA_Latency
SA4 <-  Expt6_StimPulsesPre_DA_max  +
theme(plot.title = element_blank())
SA5 <-  Expt6_StimPulsesPre_DA_AUC  +
theme(plot.title = element_blank())
SA6 <-  Expt6_StimPulsesPre_DA_Latency +
theme(plot.title = element_blank())
SA7 <-  Expt6_StimIntensityPost_DA_max  +
theme(plot.title = element_blank())
SA8 <-  Expt6_StimIntensityPost_DA_AUC  +
theme(plot.title = element_blank())
SA9 <-  Expt6_StimIntensityPost_DA_Latency +
theme(plot.title = element_blank())
SA10 <-  Expt6_StimPulsesPost_DA_max  +
theme(plot.title = element_blank())
SA11 <-  Expt6_StimPulsesPost_DA_AUC  +
theme(plot.title = element_blank())
SA12 <-  Expt6_StimPulsesPost_DA_Latency +
theme(plot.title = element_blank())
# Expt6_StimIntensityPre_DA_max_PercBaseline + Expt6_StimIntensityPre_DA_AUC_PercBaseline + Expt6_StimIntensityPre_DA_Latency_PercBaseline
# Expt6_StimPulsesPre_DA_max_PercBaseline + Expt6_StimPulsesPre_DA_AUC_PercBaseline + Expt6_StimPulsesPre_DA_Latency_PercBaseline
(SA1 +SA2 +SA3)/(SA4 +SA5 +SA6)/(SA7 +SA8 +SA9)/(SA10+SA11+SA12) + plot_layout(guides = "collect") + plot_annotation(tag_levels = 'A')
## Supplementary Figure Plotting arrangement ====
SA1 <-  Expt6_StimIntensityPre_DA_max
SA2 <-  Expt6_StimIntensityPre_DA_AUC
SA3 <-  Expt6_StimIntensityPre_DA_Latency
SA4 <-  Expt6_StimPulsesPre_DA_max  +
theme(plot.title = element_blank())
SA5 <-  Expt6_StimPulsesPre_DA_AUC  +
theme(plot.title = element_blank())
SA6 <-  Expt6_StimPulsesPre_DA_Latency +
theme(plot.title = element_blank())
SA7 <-  Expt6_StimIntensityPost_DA_max  +
theme(plot.title = element_blank())
SA8 <-  Expt6_StimIntensityPost_DA_AUC  +
theme(plot.title = element_blank())
SA9 <-  Expt6_StimIntensityPost_DA_Latency +
theme(plot.title = element_blank())
SA10 <-  Expt6_StimPulsesPost_DA_max  +
theme(plot.title = element_blank())
SA11 <-  Expt6_StimPulsesPost_DA_AUC  +
theme(plot.title = element_blank())
SA12 <-  Expt6_StimPulsesPost_DA_Latency +
theme(plot.title = element_blank())
# Expt6_StimIntensityPre_DA_max_PercBaseline + Expt6_StimIntensityPre_DA_AUC_PercBaseline + Expt6_StimIntensityPre_DA_Latency_PercBaseline
# Expt6_StimPulsesPre_DA_max_PercBaseline + Expt6_StimPulsesPre_DA_AUC_PercBaseline + Expt6_StimPulsesPre_DA_Latency_PercBaseline
FigS4 <- (SA1 +SA2 +SA3)/(SA4 +SA5 +SA6)/(SA7 +SA8 +SA9)/(SA10+SA11+SA12) + plot_layout(guides = "collect") + plot_annotation(tag_levels = 'A')
filename = here("figures", "FigS4.pdf")
ggsave(filename, FigS4, width =  6, height = 10, units = "in")
source('C:/Users/mario/Documents/GitHub/Marios-temp/LY354740_Rat/LY354740_Stats/scripts/figures/Fig4.R', echo=TRUE)
knitr::opts_chunk$set(echo = FALSE)
## Packages for data organisation and plotting
library(tidyverse)
# Package for relative file paths
library(here)
# library(ggpubr)
library(cowplot)
library(ggsignif)
library(patchwork)
################################################################################
## Packages for Data analysis
library(afex)
afex_options(emmeans_model = "multivariate")# use multivariate model for all follow-up tests.
library(emmeans)
# install.packages("devtools")
# devtools::install_github("crsh/papaja")
library(papaja)
library(knitr)
# remotes::install_github("noamross/redoc")
# library(redoc)
full_data <- read_csv("../rawdata/Anaesthetized_rawdata.csv")
#Filter the relevant stage of data for analysis
data_subset <- full_data %>%
filter(ExperimentalStage == "02_StimIntensity_Pre")
anova <- aov_4(DA_max_PercBaseline ~ drugs + (stimStrength|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~stimStrength)
simple_print <- apa_print.emmGrid(pairs(simple, adjust = "tukey"))
simple_print
knitr::opts_chunk$set(echo = FALSE)
## Packages for data organisation and plotting
library(tidyverse)
# Package for relative file paths
library(here)
# library(ggpubr)
library(cowplot)
library(ggsignif)
library(patchwork)
################################################################################
## Packages for Data analysis
library(afex)
afex_options(emmeans_model = "multivariate")# use multivariate model for all follow-up tests.
library(emmeans)
# install.packages("devtools")
# devtools::install_github("crsh/papaja")
library(papaja)
library(knitr)
# remotes::install_github("noamross/redoc")
# library(redoc)
full_data_Expt6 <- read_csv("../rawdata/Anaesthetized_rawdata.csv")
#Filter the relevant stage of data for analysis
data_subset_Expt6_StimIntensityPre <- full_data %>%
filter(ExperimentalStage == "02_StimIntensity_Pre")
full_data_Expt6 <- read_csv("../rawdata/Anaesthetized_rawdata.csv")
#Filter the relevant stage of data for analysis
data_subset_Expt6_StimIntensityPre <- full_data_Expt6 %>%
filter(ExperimentalStage == "02_StimIntensity_Pre")
anova_StimIntensityPre <- aov_4(DA_max_PercBaseline ~ drugs + (stimStrength|subj), data = data_subset_Expt6_StimIntensityPre, anova_table = list(correction = "none", es = "pes"))
anova_print_StimIntensityPre <- apa_print(anova_StimIntensityPre, mse = "FALSE",correction = "none",es = "pes")
simple_StimIntensityPre <- emmeans(anova_StimIntensityPre, ~stimStrength)
simple_print_StimIntensityPre <- apa_print.emmGrid(pairs(simple, adjust = "tukey"))
full_data_Expt6 <- read_csv("../rawdata/Anaesthetized_rawdata.csv")
#Filter the relevant stage of data for analysis
data_subset_Expt6_StimIntensityPre <- full_data_Expt6 %>%
filter(ExperimentalStage == "02_StimIntensity_Pre")
anova_StimIntensityPre <- aov_4(DA_max_PercBaseline ~ drugs + (stimStrength|subj), data = data_subset_Expt6_StimIntensityPre, anova_table = list(correction = "none", es = "pes"))
anova_print_StimIntensityPre <- apa_print(anova_StimIntensityPre, mse = "FALSE",correction = "none",es = "pes")
simple_StimIntensityPre <- emmeans(anova_StimIntensityPre, ~stimStrength)
simple_print_StimIntensityPre <- apa_print.emmGrid(pairs(simple_StimIntensityPre, adjust = "tukey"))
full_data_Expt6 <- read_csv("../rawdata/Anaesthetized_rawdata.csv")
#Filter the relevant stage of data for analysis
data_subset_Expt6_StimIntensityPre <- full_data_Expt6 %>%
filter(ExperimentalStage == "02_StimIntensity_Pre")
anova_StimIntensityPre_Peak_Max <- aov_4(DA_max_PercBaseline ~ drugs + (stimStrength|subj), data = data_subset_Expt6_StimIntensityPre_Peak_Max, anova_table = list(correction = "none", es = "pes"))
full_data_Expt6 <- read_csv("../rawdata/Anaesthetized_rawdata.csv")
#Filter the relevant stage of data for analysis
data_subset_Expt6_StimIntensityPre <- full_data_Expt6 %>%
filter(ExperimentalStage == "02_StimIntensity_Pre")
anova_StimIntensityPre_Peak_Max <- aov_4(DA_max_PercBaseline ~ drugs + (stimStrength|subj), data = data_subset_Expt6_StimIntensityPre, anova_table = list(correction = "none", es = "pes"))
anova_print_StimIntensityPre_Peak_Max <- apa_print(anova_StimIntensityPre_Peak_Max, mse = "FALSE",correction = "none",es = "pes")
simple_StimIntensityPre_Peak_Max <- emmeans(anova_StimIntensityPre_Peak_Max, ~stimStrength)
simple_print_StimIntensityPre_Peak_Max <- apa_print.emmGrid(pairs(simple_StimIntensityPre_Peak_Max, adjust = "tukey"))
full_data <- read_csv("../rawdata/Anaesthetized_rawdata.csv")
#Filter the relevant stage of data for analysis
data_subset_StimIntensityPre <- full_data %>%
filter(ExperimentalStage == "02_StimIntensity_Pre")
anova <- aov_4(DA_max_PercBaseline ~ drugs + (stimStrength|subj), data = data_subset_StimIntensityPre, anova_table = list(correction = "none", es = "pes"))
anova_print_StimIntensityPre <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~stimStrength)
simple_print_StimIntensityPre <- apa_print.emmGrid(pairs(simple, adjust = "tukey"))
full_data <- read_csv("../rawdata/Anaesthetized_rawdata.csv")
# Pre vs Post Injection Analysis - Raw
# Filter the relevant stage of data for analysis
data_subset <- full_data %>%
filter(ExperimentalStage == "04_Baseline2_Pre" | ExperimentalStage == "05_Baseline_Post") %>%
separate(ExperimentalStage, c("stagenumber", "stagename", "injectiontime"))
## Peak DA
anova <- aov_4(DA_max ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_Peak <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
full_data <- read_csv("../rawdata/Anaesthetized_rawdata.csv")
# Pre vs Post Injection Analysis - Raw
# Filter the relevant stage of data for analysis
data_subset <- full_data %>%
filter(ExperimentalStage == "04_Baseline2_Pre" | ExperimentalStage == "05_Baseline_Post") %>%
separate(ExperimentalStage, c("stagenumber", "stagename", "injectiontime"))
## Peak DA
anova <- aov_4(DA_max ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_Peak <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
## AUC
anova <- aov_4(DA_AUC ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_AUC <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
## Latency
anova <- aov_4(DA_Latency_s ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_Latency <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
anova_print_PrePost_Peak
anova_print_PrePost_AUC
anova <- aov_4(DA_Latency_s ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_Latency <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
anova_print_PrePost_Latency
anova <- aov_4(DA_max ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_Peak <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~drugs*injectiontime)
simple_print <- apa_print.emmGrid(pairs(simple, adjust = "tukey"))
simple_print
simple <- emmeans(anova, ~drugs*injectiontime)
simple_print <- apa_print.emmGrid(contrast(simple, interaction = "simple", adjust = "tukey"))
simple_print <- apa_print.emmGrid(contrast(simple, by = injectiontime, interaction = "simple", adjust = "tukey"))
simple_print <- apa_print.emmGrid(contrast(simple, by = injectiontime, interaction = "pairwise", adjust = "tukey"))
# Pre vs Post Injection Analysis - Raw
# Filter the relevant stage of data for analysis
data_subset <- full_data %>%
filter(ExperimentalStage == "04_Baseline2_Pre" | ExperimentalStage == "05_Baseline_Post") %>%
separate(ExperimentalStage, c("stagenumber", "stagename", "injectiontime"))
## Peak DA
anova <- aov_4(DA_max ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_Peak <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~drugs*injectiontime)
simple_print <- apa_print.emmGrid(contrast(simple, by = injectiontime, interaction = "pairwise", adjust = "tukey"))
simple_print <- apa_print.emmGrid(contrast(simple, by = drugs, interaction = "pairwise", adjust = "tukey"))
simple_print <- apa_print.emmGrid(contrast(simple, by = "drugs", interaction = "pairwise", adjust = "tukey"))
simple_print
anova <- aov_4(DA_AUC ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_AUC <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~drugs*injectiontime)
simple_print <- apa_print.emmGrid(contrast(simple, by = "drugs", interaction = "pairwise", adjust = "tukey"))
simple_print
anova <- aov_4(DA_Latency_s ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_Latency <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~drugs*injectiontime)
simple_print <- apa_print.emmGrid(contrast(simple, by = "drugs", interaction = "pairwise", adjust = "tukey"))
simple_print
full_data <- read_csv("../rawdata/Anaesthetized_rawdata.csv")
# Pre vs Post Injection Analysis - Raw
# Filter the relevant stage of data for analysis
data_subset <- full_data %>%
filter(ExperimentalStage == "04_Baseline2_Pre" | ExperimentalStage == "05_Baseline_Post") %>%
separate(ExperimentalStage, c("stagenumber", "stagename", "injectiontime"))
## Peak DA
anova <- aov_4(DA_max ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_Peak <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~drugs*injectiontime)
simple_print_PrePost_Peak <- apa_print.emmGrid(contrast(simple, by = "drugs", interaction = "pairwise", adjust = "tukey"))
## AUC
anova <- aov_4(DA_AUC ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_AUC <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~drugs*injectiontime)
simple_print_PrePost_AUC <- apa_print.emmGrid(contrast(simple, by = "drugs", interaction = "pairwise", adjust = "tukey"))
## Latency
anova <- aov_4(DA_Latency_s ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_Latency <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
full_data <- read_csv("../rawdata/Anaesthetized_rawdata.csv")
# Pre vs Post Injection Analysis - Raw
# Filter the relevant stage of data for analysis
data_subset <- full_data %>%
filter(ExperimentalStage == "04_Baseline2_Pre" | ExperimentalStage == "05_Baseline_Post") %>%
separate(ExperimentalStage, c("stagenumber", "stagename", "injectiontime"))
## Peak DA
anova <- aov_4(DA_max ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_Peak <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~drugs*injectiontime)
simple_print_PrePost_Peak <- apa_print.emmGrid(contrast(simple, by = "drugs", interaction = "pairwise", adjust = "tukey"))
## AUC
anova <- aov_4(DA_AUC ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_AUC <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~drugs*injectiontime)
simple_print_PrePost_AUC <- apa_print.emmGrid(contrast(simple, by = "drugs", interaction = "pairwise", adjust = "tukey"))
## Latency
anova <- aov_4(DA_Latency_s ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_Latency <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
full_data <- read_csv("../rawdata/Anaesthetized_rawdata.csv")
# Pre vs Post Injection Analysis - Raw
# Filter the relevant stage of data for analysis
data_subset <- full_data %>%
filter(ExperimentalStage == "04_Baseline2_Pre" | ExperimentalStage == "05_Baseline_Post") %>%
separate(ExperimentalStage, c("stagenumber", "stagename", "injectiontime"))
## Peak DA
anova <- aov_4(DA_max ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_Peak <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~drugs*injectiontime)
simple_print_PrePost_Peak <- apa_print.emmGrid(contrast(simple, by = "drugs", interaction = "pairwise", adjust = "tukey"))
## AUC
anova <- aov_4(DA_AUC ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_AUC <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~drugs*injectiontime)
simple_print_PrePost_AUC <- apa_print.emmGrid(contrast(simple, by = "drugs", interaction = "pairwise", adjust = "tukey"))
## Latency
anova <- aov_4(DA_Latency_s ~ drugs + (injectiontime|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_PrePost_Latency <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
# Stim Intensity Curve
#Filter the relevant stage of data for analysis
data_subset <- full_data %>%
filter(ExperimentalStage == "06_StimIntensity_Post")
anova <- aov_4(DA_max_PercBaseline ~ drugs + (stimStrength|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
anova_print_Intenisty_Peak_Perc <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simple <- emmeans(anova, ~stimStrength)
simple_print_Intenisty_Peak_Perc  <- apa_print.emmGrid(pairs(simple, adjust = "tukey"))
# Stim Pulses Curve
install.packages(c("diffobj", "openxlsx", "pkgbuild", "ps", "rpf", "scales", "tidyr", "tidyselect", "vctrs"))
knitr::opts_chunk$set(echo = FALSE)
## Packages for data organisation and plotting
library(tidyverse)
# Package for relative file paths
library(here)
# library(ggpubr)
library(cowplot)
library(ggsignif)
library(patchwork)
################################################################################
## Packages for Data analysis
library(afex)
afex_options(emmeans_model = "multivariate")# use multivariate model for all follow-up tests.
library(emmeans)
# install.packages("devtools")
# devtools::install_github("crsh/papaja")
library(papaja)
library(knitr)
# remotes::install_github("noamross/redoc")
# library(redoc)
full_data <- read_csv("../rawdata/Anaesthetized_rawdata.csv")
## 02_StimIntensity_Pre ----
##Filter the relevant stage of data for analysis
data_subset_ <- full_data %>%
filter(ExperimentalStage == "02_StimIntensity_Pre")
# Intensity - PreInjection ====
##Peak
anova <- aov_4(DA_max ~ drugs + (stimStrength|subj), data = data_subset, anova_table = list(correction = "none", es = "pes"))
#Load Data
full_data <- read_csv(here("rawdata", "/LY354740_TMaze_Expt1_rawdata.csv"))
# Delay 0s data only
short_data <- full_data %>%
filter(Delay == "0")
# Stats - Accuracy
anova <- aov_4(Accuracy ~ (Drug|Subj), data = short_data, anova_table = list(correction = "none", es = "pes"))
anova_print <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simpledrug <- emmeans(anova, ~Drug)
simpledrug_print <- apa_print.emmGrid(contrast(simpledrug, method = "pairwise", simple = "Drug", adjust = "tukey"))
# Stats - Latency Sample
anova_latencySample <- aov_4(Latency_Sample ~ (Drug|Subj), data = short_data, anova_table = list(correction = "none", es = "pes"))
anova_latencySample_print <- apa_print(anova_latencySample, mse = "FALSE",correction = "none",es = "pes")
simpledrug_latencySample <- emmeans(anova_latencySample, ~Drug)
simpledrug_latencySample_print <- apa_print.emmGrid(contrast(simpledrug_latencySample, method = "pairwise", simple = "Drug", adjust = "tukey"))
# Stats - Latency Choice
# Stats - Latency Choice
anova_latencyChoice <- aov_4(Latency_Choice ~ (Drug|Subj), data = short_data, anova_table = list(correction = "none", es = "pes"))
anova_latencyChoice_print <- apa_print(anova_latencyChoice, mse = "FALSE",correction = "none",es = "pes")
simpledrug_latencyChoice <- emmeans(anova_latencyChoice, ~Drug)
simpledrug_latencyChoice_print <- apa_print.emmGrid(contrast(simpledrug_latencyChoice, method = "pairwise", simple = "Drug", adjust = "tukey"))
# anova_print$table
# simpledrug_print$table
#
# anova_latencySample_print$table
# simpledrug_latencySample_print$table
#
# anova_latencyChoice_print$table
simpledrug_latencyChoice_print$statistic$NoInj_X10mgkg
simpledrug_latencyChoice_print$statistic$X1mgkg_X10mgkg
install.packages(c("backports", "glue", "lavaan", "officer", "openxlsx"))
knitr::opts_chunk$set(echo = FALSE)
## Packages for data organisation and plotting
library(tidyverse)
# Package for relative file paths
library(here)
# library(ggpubr)
library(cowplot)
library(ggsignif)
library(patchwork)
################################################################################
## Packages for Data analysis
library(afex)
afex_options(emmeans_model = "multivariate")# use multivariate model for all follow-up tests.
library(emmeans)
# install.packages("devtools")
# devtools::install_github("crsh/papaja")
library(papaja)
library(knitr)
# remotes::install_github("noamross/redoc")
# library(redoc)
#Load Data
full_data <- read_csv(here("rawdata", "/LY354740_TMaze_Expt1_rawdata.csv"))
# Delay 0s data only
short_data <- full_data %>%
filter(Delay == "0")
# Stats - Accuracy
anova <- aov_4(Accuracy ~ (Drug|Subj), data = short_data, anova_table = list(correction = "none", es = "pes"))
anova_print <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
simpledrug <- emmeans(anova, ~Drug)
simpledrug_print <- apa_print.emmGrid(contrast(simpledrug, method = "pairwise", simple = "Drug", adjust = "tukey"))
# Stats - Latency Sample
anova_latencySample <- aov_4(Latency_Sample ~ (Drug|Subj), data = short_data, anova_table = list(correction = "none", es = "pes"))
anova_latencySample_print <- apa_print(anova_latencySample, mse = "FALSE",correction = "none",es = "pes")
simpledrug_latencySample <- emmeans(anova_latencySample, ~Drug)
simpledrug_latencySample_print <- apa_print.emmGrid(contrast(simpledrug_latencySample, method = "pairwise", simple = "Drug", adjust = "tukey"))
# Stats - Latency Choice
# Stats - Latency Choice
anova_latencyChoice <- aov_4(Latency_Choice ~ (Drug|Subj), data = short_data, anova_table = list(correction = "none", es = "pes"))
anova_latencyChoice_print <- apa_print(anova_latencyChoice, mse = "FALSE",correction = "none",es = "pes")
simpledrug_latencyChoice <- emmeans(anova_latencyChoice, ~Drug)
simpledrug_latencyChoice_print <- apa_print.emmGrid(contrast(simpledrug_latencyChoice, method = "pairwise", simple = "Drug", adjust = "tukey"))
# anova_print$table
# simpledrug_print$table
#
# anova_latencySample_print$table
# simpledrug_latencySample_print$table
#
# anova_latencyChoice_print$table
# simpledrug_latencyChoice_print$table
unique(full_data$Subj)
unique(full_data$Subj) %>% summarise(count = n())
levels(unique(full_data$Subj))
levels(full_data$Subj)
levels(as.factor(full_data$Subj))
count(as.factor(full_data$Subj))
unique(full_data$Subj)
<-
full_data <- read_csv(here("rawdata", "/LY354740_Expt3_Locomotor_FoodDep.csv"))
unique(full_data$Subj)
full_data <- read_csv(here("rawdata", "/LY354740_Expt4_Locomotor_AdLib.csv"))
unique(full_data$Subj)
unique(full_data$Subj)
full_data <- read_csv(here("rawdata", "/LY354740_Expt5_Locomotor_FoodDepAmphDose.csv"))
unique(full_data$Subj)
unique(full_data$Subj)
full_data <- read_csv("../rawdata/Anaesthetized_rawdata.csv")
unique(full_data$Subj)
unique(full_data$subj)
#Read in the data as global variable
full_data <- read_csv("../rawdata/AwakeVarReward_rawdata.csv")
unique(full_data$subj)
unique(full_data$subject)
full_data <- full_data %>%
filter(include == TRUE)
#Filter the relevant stage of data for analysis
data_subset <- full_data
unique(full_data$subject)
