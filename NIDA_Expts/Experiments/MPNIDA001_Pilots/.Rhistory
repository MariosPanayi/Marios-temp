trialTimes <- c(which(rawdata$`Transition State` == trialstartstate), which(rawdata$`Transition State` == -1))
totalTrials <- length(trialTimes)
trialTimes
totalTrials
totalTrials <- length(trialTimes) - 1
i = 1
c(trialTimes[i]:(trialTimes[i+1]-1))
i = 2
c(trialTimes[i]:(trialTimes[i+1]-1))
for (i in c(1:totalTrials)) {
trialNum[c(trialTimes[i]:(trialTimes[i+1]-1))] = i
}
length(rawdata)
length(rawdata,2)
nrows(rawdata)
nrow(rawdata)
trialNum <- replicate(nrow(rawdata),0)
for (i in c(1:totalTrials)) {
trialNum[c(trialTimes[i]:(trialTimes[i+1]-1))] = i
}
## Initialise trialnum variable with 0s for every row
trialNum <- replicate(nrow(rawdata),0)
for (i in c(1:totalTrials)) {
trialNum[c(trialTimes[i]:(trialTimes[i+1]-1))] = i
}
trialNum
cbind(rawdata,trialNum)
View(rawdata)
rawdata <- cbind(rawdata,trialNum)
5*20
1000/20
100/20
100*20
/1000
2000/1000
1000/20
3347*20
/1000
66940/1000
rawdata %>%
mutate(Time = (Time*timebinwidth)/1000)
rawdata %>%
mutate(Time = (Time*timebinwidth)/1000)
rawdata %>%
mutate(Time1 = (Time*timebinwidth)/1000)
# Title: CoulbournDataANalysis_Frequency_PerTrial_1sBins
## Author: Marios Panayi
## Date: 16-DEC-2020
## Purpose: Analyze Extracted [i.e. individual] data from Coulbourn boxes
## Notes: Data from NIDA Pilots
# Load Packagaes ----------------------------------------------------------
## Packages for data organisation and plotting
library(tidyverse)
library(knitr)
# Package for relative file paths
library(here)
# library(ggpubr)
library(cowplot)
library(ggsignif)
library(patchwork)
library(RColorBrewer)
## Packages for Data analysis
library(afex)
afex_options(emmeans_model = "multivariate")# use multivariate model for all follow-up tests.
library(emmeans)
# install.packages("devtools")
# devtools::install_github("crsh/papaja")
# library(papaja)
# library(knitr)
# remotes::install_github("noamross/redoc")
# library(redoc)
rawdata %>%
mutate(Time1 = (Time*timebinwidth)/1000)
rawdata %>%
mutate(Time1 = Time*timebinwidth/1000)
rawdata
rawdata %>%
mutate(Time1 = Time*timebase/1000)
rawdata %>%
mutate(Time = Time*timebase/1000)
# Load Individual File ----------------------------------------------------
## Set file path
filename <- "CRFMagTrainSess1_Rat10_Run1.csv"
folderpath <- here("rawdata", "Marios",'ConditionedReinforcement')
filepath <- here(folderpath, filename)
## Read in data
rawdata <- read_csv(filepath)
# Set parameters ----------------------------------------------------------
## List of states
S = c("ITI" = 1,
"Pre" = 2,
"Pel" = 3)
## Time base the linc was set to, in ms
timebase = 20
## Time bins to analyze each state in, in s
timebinwidth = 1
## States not to bin
nobin = c("ITI" = 1)
# Change time units to seconds --------------------------------------------
rawdata %>%
mutate(Time = Time*timebase/1000)
# Calculate Trials --------------------------------------------------------
## Identify state that trials start in, usually the ITI ;)
trialstartstate = S["ITI"]
## Add a column to the data set indicating trial number
### Identify the start time of each trial, and the final end state (indicated by -1 in Coulbourn)
trialTimes <- c(which(rawdata$`Transition State` == trialstartstate), which(rawdata$`Transition State` == -1))
totalTrials <- length(trialTimes) - 1
## Initialise trialnum variable with 0s for every row
trialNum <- replicate(nrow(rawdata),0)
for (i in c(1:totalTrials)) {
trialNum[c(trialTimes[i]:(trialTimes[i+1]-1))] = i
}
## append trial counter to dataframe
rawdata <- cbind(rawdata,trialNum)
## States not to bin
nobin = S["ITI"]
S["ITI"]
bin = c(s["Pre"], s["Pel"])
bin = c(S["Pre"], S["Pel"])
bin
for (i in c(1:totalTrials)) {
trialIdx = c(trialTimes[i]:(trialTimes[i+1]-1))
trialNum[trialIdx] = i
}
which(rawdata$`Transition State` == bin)
match(rawdata$`Transition State`, bin)
which(match(rawdata$`Transition State`, bin))
which(match(rawdata$`Transition State`, bin) != NA)
which(match(rawdata$`Transition State`))
which(match(rawdata$`Transition State`, bin))
match(rawdata$`Transition State`, bin)
logical(match(rawdata$`Transition State`, bin))
is.na(match(rawdata$`Transition State`, bin))
!is.na(match(rawdata$`Transition State`, bin))
which(!is.na(match(rawdata$`Transition State`, bin)))
statechange_idx = which(rawdata$`Transition State` !=0)
statechange_idx
statechange_idx = which(rawdata$`Transition State` !=0)
statechange_ID = rawdata$`Transition State`[statechange_idx]
statechange_ID
statechange_trialNUm = rawdata$trialNum
statechange_trialNUm
statechange_trialNUm = rawdata$trialNum[statechange_idx]
statechange_trialNUm
statechange_idx
cbind(statechange_idx,statechange_ID,statechange_trialNUm)
data.frame(statechange_idx,statechange_ID,statechange_trialNUm)
rawdata
# Title: CoulbournDataANalysis_Frequency_PerTrial_1sBins
## Author: Marios Panayi
## Date: 16-DEC-2020
## Purpose: Analyze Extracted [i.e. individual] data from Coulbourn boxes
## Notes: Data from NIDA Pilots
# Load Packagaes ----------------------------------------------------------
## Packages for data organisation and plotting
library(tidyverse)
library(knitr)
# Package for relative file paths
library(here)
# library(ggpubr)
library(cowplot)
library(ggsignif)
library(patchwork)
library(RColorBrewer)
## Packages for Data analysis
library(afex)
afex_options(emmeans_model = "multivariate")# use multivariate model for all follow-up tests.
library(emmeans)
# install.packages("devtools")
# devtools::install_github("crsh/papaja")
# library(papaja)
# library(knitr)
# remotes::install_github("noamross/redoc")
# library(redoc)
# Load Individual File ----------------------------------------------------
## Set file path
filename <- "CRFMagTrainSess1_Rat10_Run1.csv"
folderpath <- here("rawdata", "Marios",'ConditionedReinforcement')
filepath <- here(folderpath, filename)
## Read in data
rawdata <- read_csv(filepath)
# Set parameters ----------------------------------------------------------
## List of states
S = c("ITI" = 1,
"Pre" = 2,
"Pel" = 3)
## Time base the linc was set to, in ms
timebase = 20
## Time bins to analyze each state in, in s
timebinwidth = 1
## States not to bin
nobin = S["ITI"]
bin = c(S["Pre"], S["Pel"])
# Change time units to seconds --------------------------------------------
rawdata %>%
mutate(Time = Time*timebase/1000)
# Calculate Trials --------------------------------------------------------
## Identify state that trials start in, usually the ITI ;)
trialstartstate = S["ITI"]
## Add a column to the data set indicating trial number
### Identify the start time of each trial, and the final end state (indicated by -1 in Coulbourn)
trialTimes <- c(which(rawdata$`Transition State` == trialstartstate), which(rawdata$`Transition State` == -1))
totalTrials <- length(trialTimes) - 1
## Initialise trialnum variable with 0s for every row
trialNum <- replicate(nrow(rawdata),0)
for (i in c(1:totalTrials)) {
trialIdx = c(trialTimes[i]:(trialTimes[i+1]-1))
trialNum[trialIdx] = i
}
## append trial counter to dataframe
rawdata <- cbind(rawdata,trialNum)
# Create time-binned data - Frequency --------------------------------------
## Set up new dataframe
for (i in c(1:totalTrials)) {
trialIdx = c(trialTimes[i]:(trialTimes[i+1]-1))
## Find row values for the tranisition state entries that are in the "bin" list
statechange_start = which(!is.na(match(rawdata$`Transition State`, bin)))
statechange_idx = which(rawdata$`Transition State` !=0)
statechange_ID = rawdata$`Transition State`[statechange_idx]
statechange_trialNUm = rawdata$trialNum[statechange_idx]
# data.frame(statechange_idx,statechange_ID,statechange_trialNUm)
}
summary(rawdata)
rawdata$Time[Mag_on == 1]
rawdata$Time[rawdata$Mag_on == 1]
rawdata$Time[rawdata$Mag_on == 1]
rawdata$Time[which(rawdata$Mag_on == 1)]
rawdata$Mag_on == 1
View(rawdata)
rawdata$Mag_on = 1
rawdata$Time[which(rawdata$Mag_on = 1)]
rawdata$Mag_on
# Load Individual File ----------------------------------------------------
## Set file path
filename <- "CRFMagTrainSess1_Rat10_Run1.csv"
folderpath <- here("rawdata", "Marios",'ConditionedReinforcement')
filepath <- here(folderpath, filename)
## Read in data
rawdata <- read_csv(filepath)
# Set parameters ----------------------------------------------------------
## List of states
S = c("ITI" = 1,
"Pre" = 2,
"Pel" = 3)
## Time base the linc was set to, in ms
timebase = 20
## Time bins to analyze each state in, in s
timebinwidth = 1
## States not to bin
nobin = S["ITI"]
bin = c(S["Pre"], S["Pel"])
# Change time units to seconds --------------------------------------------
rawdata %>%
mutate(Time = Time*timebase/1000)
# Calculate Trials --------------------------------------------------------
## Identify state that trials start in, usually the ITI ;)
trialstartstate = S["ITI"]
## Add a column to the data set indicating trial number
### Identify the start time of each trial, and the final end state (indicated by -1 in Coulbourn)
trialTimes <- c(which(rawdata$`Transition State` == trialstartstate), which(rawdata$`Transition State` == -1))
totalTrials <- length(trialTimes) - 1
## Initialise trialnum variable with 0s for every row
trialNum <- replicate(nrow(rawdata),0)
for (i in c(1:totalTrials)) {
trialIdx = c(trialTimes[i]:(trialTimes[i+1]-1))
trialNum[trialIdx] = i
}
## append trial counter to dataframe
rawdata <- cbind(rawdata,trialNum)
# Create time-binned data - Frequency --------------------------------------
## Set up new dataframe
A1_times <-
for (i in c(1:totalTrials)) {
trialIdx = c(trialTimes[i]:(trialTimes[i+1]-1))
## Find row values for the tranisition state entries that are in the "bin" list
statechange_start = which(!is.na(match(rawdata$`Transition State`, bin)))
statechange_idx = which(rawdata$`Transition State` !=0)
statechange_ID = rawdata$`Transition State`[statechange_idx]
statechange_trialNUm = rawdata$trialNum[statechange_idx]
# data.frame(statechange_idx,statechange_ID,statechange_trialNUm)
}
rawdata$Time[which(rawdata$Mag_on == 1)]
rawdata$Mag_on
rawdata$Time[which(rawdata$Mag_On == 1)]
colnames(rawdata)
rawdata$Time[which(rawdata$[12] == 1)]
rawdata$Time[which(rawdata[12] == 1)]
rawdata$Time[which(rawdata[,12] == 1)]
rawdata[,12]
rawdata[,12] == 1
## Set file path
filename <- "CRFMagTrainSess1_Rat10_Run1.csv"
folderpath <- here("rawdata", "Marios",'ConditionedReinforcement')
filepath <- here(folderpath, filename)
## Read in data
rawdata <- read_csv(filepath)
# Set parameters ----------------------------------------------------------
## List of states
S = c("ITI" = 1,
"Pre" = 2,
"Pel" = 3)
## Time base the linc was set to, in ms
timebase = 20
## Time bins to analyze each state in, in s
timebinwidth = 1
## States not to bin
nobin = S["ITI"]
bin = c(S["Pre"], S["Pel"])
# Change time units to seconds --------------------------------------------
rawdata %>%
mutate(Time = Time*timebase/1000)
# Calculate Trials --------------------------------------------------------
## Identify state that trials start in, usually the ITI ;)
trialstartstate = S["ITI"]
## Add a column to the data set indicating trial number
### Identify the start time of each trial, and the final end state (indicated by -1 in Coulbourn)
trialTimes <- c(which(rawdata$`Transition State` == trialstartstate), which(rawdata$`Transition State` == -1))
totalTrials <- length(trialTimes) - 1
## Initialise trialnum variable with 0s for every row
trialNum <- replicate(nrow(rawdata),0)
for (i in c(1:totalTrials)) {
trialIdx = c(trialTimes[i]:(trialTimes[i+1]-1))
trialNum[trialIdx] = i
}
## append trial counter to dataframe
rawdata <- cbind(rawdata,trialNum)
# Create time-binned data - Frequency --------------------------------------
## Set up new dataframe
A1_times <-
for (i in c(1:totalTrials)) {
trialIdx = c(trialTimes[i]:(trialTimes[i+1]-1))
## Find row values for the tranisition state entries that are in the "bin" list
statechange_start = which(!is.na(match(rawdata$`Transition State`, bin)))
statechange_idx = which(rawdata$`Transition State` !=0)
statechange_ID = rawdata$`Transition State`[statechange_idx]
statechange_trialNUm = rawdata$trialNum[statechange_idx]
# data.frame(statechange_idx,statechange_ID,statechange_trialNUm)
}
rawdata$Time[which(rawdata[,12] == 1)]
(rawdata[,12] == 1)
rawdata$Time[which(rawdata[,14] == 1)]
# Title: CoulbournDataANalysis_Frequency_PerTrial_1sBins
## Author: Marios Panayi
## Date: 16-DEC-2020
## Purpose: Analyze Extracted [i.e. individual] data from Coulbourn boxes
## Notes: Data from NIDA Pilots
# Load Packagaes ----------------------------------------------------------
## Packages for data organisation and plotting
library(tidyverse)
library(knitr)
# Package for relative file paths
library(here)
# library(ggpubr)
library(cowplot)
library(ggsignif)
library(patchwork)
library(RColorBrewer)
## Packages for Data analysis
library(afex)
afex_options(emmeans_model = "multivariate")# use multivariate model for all follow-up tests.
library(emmeans)
# install.packages("devtools")
# devtools::install_github("crsh/papaja")
# library(papaja)
# library(knitr)
# remotes::install_github("noamross/redoc")
# library(redoc)
# Load Individual File ----------------------------------------------------
## Set file path
filename <- "CRFMagTrainSess1_Rat10_Run1.csv"
folderpath <- here("rawdata", "Marios",'ConditionedReinforcement')
filepath <- here(folderpath, filename)
## Read in data
rawdata <- read_csv(filepath)
# Set parameters ----------------------------------------------------------
## List of states
S = c("ITI" = 1,
"Pre" = 2,
"Pel" = 3)
## Time base the linc was set to, in ms
timebase = 20
## Time bins to analyze each state in, in s
timebinwidth = 1
## States not to bin
nobin = S["ITI"]
bin = c(S["Pre"], S["Pel"])
# Change time units to seconds --------------------------------------------
rawdata %>%
mutate(Time = Time*timebase/1000)
# Calculate Trials --------------------------------------------------------
## Identify state that trials start in, usually the ITI ;)
trialstartstate = S["ITI"]
## Add a column to the data set indicating trial number
### Identify the start time of each trial, and the final end state (indicated by -1 in Coulbourn)
trialTimes <- c(which(rawdata$`Transition State` == trialstartstate), which(rawdata$`Transition State` == -1))
totalTrials <- length(trialTimes) - 1
## Initialise trialnum variable with 0s for every row
trialNum <- replicate(nrow(rawdata),0)
for (i in c(1:totalTrials)) {
trialIdx = c(trialTimes[i]:(trialTimes[i+1]-1))
trialNum[trialIdx] = i
}
## append trial counter to dataframe
rawdata <- cbind(rawdata,trialNum)
# Create time-binned data - Frequency --------------------------------------
## Set up new dataframe
A1_times <-
for (i in c(1:totalTrials)) {
trialIdx = c(trialTimes[i]:(trialTimes[i+1]-1))
## Find row values for the tranisition state entries that are in the "bin" list
statechange_start = which(!is.na(match(rawdata$`Transition State`, bin)))
statechange_idx = which(rawdata$`Transition State` !=0)
statechange_ID = rawdata$`Transition State`[statechange_idx]
statechange_trialNUm = rawdata$trialNum[statechange_idx]
# data.frame(statechange_idx,statechange_ID,statechange_trialNUm)
}
rawdata$Time[which(rawdata[,14] == 1)]
statechange_start
statechange_idx
statechange_ID
statechange_Time = rawdata$Time[statechange_idx]
statechange_Time
3750*20
75000/1000
statechange_Time[2:end]
statechange_Time[2:3]
statechange_Time[2:]
statechange_Time[2:length(statechange_Time)]
statechange_start = which(!is.na(match(rawdata$`Transition State`, bin)))
statechange_start
statechange_idx
trialIdx
statechange_start
statechange_Time
statechange_idx
statechange_ID
binstates_idx =  which(!is.na(match(statechange_ID, bin)))
binstates_idx
statechange_Time = rawdata$Time[statechange_idx]
statechange_Time
binstart_Time = statechange_Time[binstates_idx]
binstart_Time
binend_Time = statechange_Time[binstates_idx+1]
binend_Time
binstart_Time-binend_Time
500*20/1000
binwidth = binend_Time - binstart_Time
binwidth
# Load Individual File ----------------------------------------------------
## Set file path
filename <- "CRFMagTrainSess1_Rat10_Run1.csv"
folderpath <- here("rawdata", "Marios",'ConditionedReinforcement')
filepath <- here(folderpath, filename)
## Read in data
rawdata <- read_csv(filepath)
# Set parameters ----------------------------------------------------------
## List of states
S = c("ITI" = 1,
"Pre" = 2,
"Pel" = 3)
## Time base the linc was set to, in ms
timebase = 20
## Time bins to analyze each state in, in s
timebinwidth = 1
## States not to bin
nobin = S["ITI"]
bin = c(S["Pre"], S["Pel"])
# Change time units to seconds --------------------------------------------
rawdata <- rawdata %>%
mutate(Time = Time*timebase/1000)
# Calculate Trials --------------------------------------------------------
## Identify state that trials start in, usually the ITI ;)
trialstartstate = S["ITI"]
## Add a column to the data set indicating trial number
### Identify the start time of each trial, and the final end state (indicated by -1 in Coulbourn)
trialTimes <- c(which(rawdata$`Transition State` == trialstartstate), which(rawdata$`Transition State` == -1))
totalTrials <- length(trialTimes) - 1
## Initialise trialnum variable with 0s for every row
trialNum <- replicate(nrow(rawdata),0)
for (i in c(1:totalTrials)) {
trialIdx = c(trialTimes[i]:(trialTimes[i+1]-1))
trialNum[trialIdx] = i
}
## append trial counter to dataframe
rawdata <- cbind(rawdata,trialNum)
# Create time-binned data - Frequency --------------------------------------
## Set up new dataframe
## get all times of interest to bin
##
## State change info
statechange_idx = which(rawdata$`Transition State` !=0)
statechange_ID = rawdata$`Transition State`[statechange_idx]
statechange_Time = rawdata$Time[statechange_idx]
## Target bin state info
binstates_idx =  which(!is.na(match(statechange_ID, bin)))
binstart_Time = statechange_Time[binstates_idx]
binend_Time = statechange_Time[binstates_idx+1]
binwidth = binend_Time - binstart_Time
binwidth
## State change info
statechange_idx = which(rawdata$`Transition State` !=0)
statechange_ID = rawdata$`Transition State`[statechange_idx]
statechange_Time = rawdata$Time[statechange_idx]
statechange_Time = rawdata$trialNum[statechange_idx]
## Target bin state info
binstates_idx =  which(!is.na(match(statechange_ID, bin)))
binstart_Time = statechange_Time[binstates_idx]
binend_Time = statechange_Time[binstates_idx+1]
binwidth = binend_Time - binstart_Time
binTrialNum = statechange_Time[binstates_idx]
binTrialNum
