stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("All tests") + xlab("Test Condition") + ylab("LP Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_All_LP_Diff
testdata_All_LP_Diff
testdata_All_LP_PercDiff
## Test Data - LP differences All conditions
A <- testdata_All_LP_Diff + theme(legend.position= c(0.05,.90),
legend.justification='left',
legend.direction='vertical')
B <- testdata_All_LP_PercDiff + theme(legend.position= c(0.05,.90),
legend.justification='left',
legend.direction='vertical')
CRF_Test_LPDiff_All <- (A + B ) + plot_annotation(tag_levels = 'A') + plot_layout(nrow = 2, ncol = 1, widths = c(1, 1))
filename = here("figures", "CRF_Test_LPDiff_All.png")
ggsave(filename, CRF_Test_LPDiff_All, width = 160, height = 160, units = "mm", dpi = 1200)
filename = here("figures", "CRF_Test_LPDiff_All.png")
ggsave(filename, CRF_Test_LPDiff_All, width = 90, height = 160, units = "mm", dpi = 1200)
ggsave(filename, CRF_Test_LPDiff_All, width = 100, height = 180, units = "mm", dpi = 1200)
## Test Data - LP differences All conditions
A <- testdata_All_LP_Diff + theme(legend.position= element_blank())
A
## Test Data - LP differences All conditions
A <- testdata_All_LP_Diff + theme(legend.position = "none")
B <- testdata_All_LP_PercDiff + theme(legend.position = "none")
CRF_Test_LPDiff_All <- (A + B ) + plot_annotation(tag_levels = 'A') + plot_layout(nrow = 2, ncol = 1, widths = c(1, 1))
filename = here("figures", "CRF_Test_LPDiff_All.png")
ggsave(filename, CRF_Test_LPDiff_All, width = 100, height = 180, units = "mm", dpi = 1200)
ggsave(filename, CRF_Test_LPDiff_All, width = 120, height = 180, units = "mm", dpi = 1200)
# Plot Test All Conditions Difference scores ------------------------------
testdata_All_LP_PercDiff <- CRF_ALL_data_long_Avg %>%
filter(measure == "LP",
Value == "PercDiff",
ExcludeSubject == "Keep") %>%
ggplot(mapping = aes(x = as.factor(TestCondition), y = Freq, group = TestCondition, colour = TestCondition, fill = TestCondition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("Percent Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_All_LP_PercDiff
testdata_All_LP_Diff <- CRF_ALL_data_long_Avg %>%
filter(measure == "LP",
Value == "Diff",
ExcludeSubject == "Keep") %>%
ggplot(mapping = aes(x = as.factor(TestCondition), y = Freq, group = TestCondition, colour = TestCondition, fill = TestCondition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("LP Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_All_LP_Diff
## Test Data - LP differences All conditions
A <- testdata_All_LP_Diff + theme(legend.position = "none")
B <- testdata_All_LP_PercDiff + theme(legend.position = "none")
CRF_Test_LPDiff_All <- (A + B ) + plot_annotation(tag_levels = 'A') + plot_layout(nrow = 2, ncol = 1, widths = c(1, 1))
filename = here("figures", "CRF_Test_LPDiff_All.png")
ggsave(filename, CRF_Test_LPDiff_All, width = 120, height = 180, units = "mm", dpi = 1200)
testdata_All_LP_PercDiff <- CRF_ALL_data_long_Avg %>%
filter(measure == "LP",
Value == "PercDiff",
ExcludeSubject == "Keep") %>%
ggplot(mapping = aes(x = as.factor(TestCondition), y = Freq, group = TestCondition, colour = TestCondition, fill = TestCondition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3, width = 0.1) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("Percent Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_All_LP_PercDiff
testdata_All_LP_PercDiff <- CRF_ALL_data_long_Avg %>%
filter(measure == "LP",
Value == "PercDiff",
ExcludeSubject == "Keep") %>%
ggplot(mapping = aes(x = as.factor(TestCondition), y = Freq, group = TestCondition, colour = TestCondition, fill = TestCondition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3, width = 0.9) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("Percent Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_All_LP_PercDiff
testdata_All_LP_PercDiff <- CRF_ALL_data_long_Avg %>%
filter(measure == "LP",
Value == "PercDiff",
ExcludeSubject == "Keep") %>%
ggplot(mapping = aes(x = as.factor(TestCondition), y = Freq, group = TestCondition, colour = TestCondition, fill = TestCondition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3, idth=0.1, position = position_dodge(width=0.2)) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("Percent Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_All_LP_PercDiff
testdata_All_LP_PercDiff <- CRF_ALL_data_long_Avg %>%
filter(measure == "LP",
Value == "PercDiff",
ExcludeSubject == "Keep") %>%
ggplot(mapping = aes(x = as.factor(TestCondition), y = Freq, group = TestCondition, colour = TestCondition, fill = TestCondition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar",  size = .3 , width=0.1, position = position_dodge(width=0.2)) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("Percent Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_All_LP_PercDiff
testdata_All_LP_PercDiff <- CRF_ALL_data_long_Avg %>%
filter(measure == "LP",
Value == "PercDiff",
ExcludeSubject == "Keep") %>%
ggplot(mapping = aes(x = as.factor(TestCondition), y = Freq, group = TestCondition, colour = TestCondition, fill = TestCondition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar",  size = .3 , width=0.9, position = position_dodge(width=0.2)) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("Percent Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_All_LP_PercDiff
testdata_All_LP_PercDiff <- CRF_ALL_data_long_Avg %>%
filter(measure == "LP",
Value == "PercDiff",
ExcludeSubject == "Keep") %>%
ggplot(mapping = aes(x = as.factor(TestCondition), y = Freq, group = TestCondition, colour = TestCondition, fill = TestCondition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar",  size = .3 , width=0.9, position = position_dodge(width=0.9)) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("Percent Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_All_LP_PercDiff
testdata_All_LP_PercDiff <- CRF_ALL_data_long_Avg %>%
filter(measure == "LP",
Value == "PercDiff",
ExcludeSubject == "Keep") %>%
ggplot(mapping = aes(x = as.factor(TestCondition), y = Freq, group = TestCondition, colour = TestCondition, fill = TestCondition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("Percent Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
testdata_All_LP_PercDiff
testdata_All_LP_Diff <- CRF_ALL_data_long_Avg %>%
filter(measure == "LP",
Value == "Diff",
ExcludeSubject == "Keep") %>%
ggplot(mapping = aes(x = as.factor(TestCondition), y = Freq, group = TestCondition, colour = TestCondition, fill = TestCondition)) +
stat_summary_bin(fun.data = "mean_se", geom = "bar", position = "dodge",  size = .3) +
stat_summary(fun.data = "mean_se", geom = "errorbar", position = position_dodge(width = 0.9),  width = 0,  size = .3, colour = "black", linetype = "solid", show.legend = FALSE) +
geom_point(aes(group = subject), colour = Black) +
# geom_line(aes(group = subject), colour = Black) +
# facet_wrap(~Day,) +
# Make Pretty
scale_y_continuous( expand = expansion(mult = c(0, 0)), breaks=seq(-1000,1000,20)) +
ggtitle("") + xlab("") + ylab("LP Difference") +
theme_cowplot(11) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(size=10)) +
coord_cartesian(ylim = c(-100,100.0001)) +
theme(axis.title.x=element_text(face = "bold")) +
scale_colour_manual(name = "", values = linecolours, aesthetics = c("colour")) +
scale_fill_manual(name = "", values = fillcolours) +
theme(legend.key.width=unit(0.5,"line")) +
scale_x_discrete(labels = c("P100 - P50\nHigh","P100 - P50\nLow","High - Low\nP100", "High - Low\nP50")) +
theme(axis.text.x = element_text(face = "bold"))
ggsave(filename, CRF_Test_LPDiff_All, width = 90, height = 180, units = "mm", dpi = 1200)
ggsave(filename, CRF_Test_LPDiff_All, width = 120, height = 210, units = "mm", dpi = 1200)
filename = here("figures", "CRF_Test_LPDiff_All.png")
ggsave(filename, CRF_Test_LPDiff_All, width = 120, height = 210, units = "mm", dpi = 1200)
ggsave(filename, CRF_Test_LPDiff_All, width = 120, height = 800, units = "mm", dpi = 1200)
ggsave(filename, CRF_Test_LPDiff_All, width = 120, height = 300, units = "mm", dpi = 1200)
ggsave(filename, CRF_Test_LPDiff_All, width = 120, height = 200, units = "mm", dpi = 1200)
ggsave(filename, CRF_Test_LPDiff_All, width = 120, height = 160, units = "mm", dpi = 1200)
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/MasterProcessingScript_3_LPL.R', echo=TRUE)
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/Plot_3_LPL.R', echo=TRUE)
knitr::opts_chunk$set(echo = FALSE)
## Packages for data organisation and plotting
library(tidyverse)
# Package for relative file paths
library(here)
# library(ggpubr)
library(cowplot)
library(ggsignif)
library(patchwork)
################################################################################
## Packages for Data analysis
library(afex)
afex_options(emmeans_model = "multivariate")# use multivariate model for all follow-up tests.
library(emmeans)
# install.packages("devtools")
# devtools::install_github("crsh/papaja")
library(papaja)
library(knitr)
# remotes::install_github("noamross/redoc")
# library(redoc)
CRF_Acquisition_CSPre <- read_csv(here("figures","figure_data","CRF_Acquisition_CSPre.csv"))
CRF_Acquisition_CSPre_Last5s <- read_csv(here("figures","figure_data","CRF_Acquisition_CSPre_Last5s.csv"))
# Test Data
CRF_data_P100_HighvsLow_long <- read_csv(here("figures","figure_data","CRF_data_P100_HighvsLow_long.csv"))
CRF_data_P50_HighvsLow_long <- read_csv(here("figures","figure_data","CRF_data_P50_HighvsLow_long.csv"))
CRF_data_High_100Vs50_long <- read_csv(here("figures","figure_data","CRF_data_High_100Vs50_long.csv"))
CRF_data_Low_100Vs50_long <- read_csv(here("figures","figure_data","CRF_data_Low_100Vs50_long.csv"))
# Test Data Create average session data
CRF_data_P100_HighvsLow_long_Avg <- CRF_data_P100_HighvsLow_long %>%
group_by(TestCondition, Day, subject, measure, Value, Probability) %>%
summarise(Freq = sum(Freq))
CRF_data_P50_HighvsLow_long_Avg <- CRF_data_P50_HighvsLow_long %>%
group_by(TestCondition, Day, subject, measure, Value, Probability) %>%
summarise(Freq = sum(Freq))
CRF_data_High_100Vs50_long_Avg <- CRF_data_High_100Vs50_long %>%
group_by(TestCondition, Day, subject, measure, Value, Probability) %>%
summarise(Freq = sum(Freq))
CRF_data_Low_100Vs50_long_Avg <- CRF_data_Low_100Vs50_long %>%
group_by(TestCondition, Day, subject, measure, Value, Probability) %>%
summarise(Freq = sum(Freq))
## Check things are being averaged correctly
# CRF_data_P100_HighvsLow_long_Avg %>%
#      count(unique(subject)) %>%
# kable()
CRF_data_HighvsLow_long_combined <- full_join(CRF_data_P100_HighvsLow_long_Avg, CRF_data_P50_HighvsLow_long_Avg)
CRF_data_100Vs50_long_combined <- full_join(CRF_data_High_100Vs50_long_Avg, CRF_data_Low_100Vs50_long_Avg)
CRF_data_P100_HighvsLow_long_Avg <- CRF_data_P100_HighvsLow_long_Avg %>%
pivot_wider(names_from = c(Value, Probability, measure), values_from =  Freq) %>%
mutate(ExcludeSubject = ifelse(High_P100_CS == 0 | Low_P100_CS == 0, "Exclude", "Keep"),
Diff_P100_CS = High_P100_CS - Low_P100_CS,
Diff_P100_LP = High_P100_LP - Low_P100_LP,
PercDiff_P100_LP = 100*(High_P100_LP - Low_P100_LP)/ (High_P100_LP + Low_P100_LP)) %>%
pivot_longer(c(4:7, 9:11),names_to = c("Value", "Probability", "measure"), names_sep = "_" , values_to = c("Freq"))
CRF_data_P50_HighvsLow_long_Avg <- CRF_data_P50_HighvsLow_long_Avg %>%
pivot_wider(names_from = c(Value, Probability, measure), values_from =  Freq) %>%
mutate(ExcludeSubject = ifelse(High_P50_CS == 0 | Low_P50_CS == 0, "Exclude", "Keep"),
Diff_P50_CS = High_P50_CS - Low_P50_CS,
Diff_P50_LP = High_P50_LP - Low_P50_LP,
PercDiff_P50_LP = 100*(High_P50_LP - Low_P50_LP)/ (High_P50_LP + Low_P50_LP)) %>%
pivot_longer(c(4:7, 9:11),names_to = c("Value", "Probability", "measure"), names_sep = "_" , values_to = c("Freq"))
CRF_data_High_100Vs50_long_Avg <- CRF_data_High_100Vs50_long_Avg %>%
pivot_wider(names_from = c(Value, Probability, measure), values_from =  Freq) %>%
mutate(ExcludeSubject = ifelse(High_P100_CS == 0 | High_P50_CS == 0, "Exclude", "Keep"),
Diff_High_CS = High_P100_CS - High_P50_CS,
Diff_High_LP = High_P100_LP - High_P50_LP,
PercDiff_High_LP = 100*(High_P100_LP - High_P50_LP)/ (High_P100_LP + High_P50_LP)) %>%
pivot_longer(c(4:7, 9:11),names_to = c("Value", "Probability", "measure"), names_sep = "_" , values_to = c("Freq"))
CRF_data_Low_100Vs50_long_Avg <- CRF_data_Low_100Vs50_long_Avg %>%
pivot_wider(names_from = c(Value, Probability, measure), values_from =  Freq) %>%
mutate(ExcludeSubject = ifelse(Low_P100_CS == 0 | Low_P50_CS == 0, "Exclude", "Keep"),
Diff_Low_CS = Low_P100_CS - Low_P50_CS,
Diff_Low_LP = Low_P100_LP - Low_P50_LP,
PercDiff_Low_LP = 100*(Low_P100_LP - Low_P50_LP)/ (Low_P100_LP + Low_P50_LP)) %>%
pivot_longer(c(4:7, 9:11),names_to = c("Value", "Probability", "measure"), names_sep = "_" , values_to = c("Freq"))
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/Plot_2_CRF.R', echo=TRUE)
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/Plot_2_CRF.R', echo=TRUE)
warnings()
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/Plot_2_CRF.R', echo=TRUE)
knitr::opts_chunk$set(echo = FALSE)
## Packages for data organisation and plotting
library(tidyverse)
# Package for relative file paths
library(here)
# library(ggpubr)
library(cowplot)
library(ggsignif)
library(patchwork)
################################################################################
## Packages for Data analysis
library(afex)
afex_options(emmeans_model = "multivariate")# use multivariate model for all follow-up tests.
library(emmeans)
# install.packages("devtools")
# devtools::install_github("crsh/papaja")
library(papaja)
library(knitr)
# remotes::install_github("noamross/redoc")
# library(redoc)
CRF_Acquisition_CSPre <- read_csv(here("figures","figure_data","CRF_Acquisition_CSPre.csv"))
CRF_Acquisition_CSPre_Last5s <- read_csv(here("figures","figure_data","CRF_Acquisition_CSPre_Last5s.csv"))
# Test Data
CRF_data_P100_HighvsLow_long <- read_csv(here("figures","figure_data","CRF_data_P100_HighvsLow_long.csv"))
CRF_Acquisition_CSPre <- read_csv(here("figures","figure_data","CRF_Acquisition_CSPre.csv"))
CRF_Acquisition_CSPre_Last5s <- read_csv(here("figures","figure_data","CRF_Acquisition_CSPre_Last5s.csv"))
# Test Data
# CRF_data_P100_HighvsLow_long <- read_csv(here("figures","figure_data","CRF_data_P100_HighvsLow_long.csv"))
# CRF_data_P50_HighvsLow_long <- read_csv(here("figures","figure_data","CRF_data_P50_HighvsLow_long.csv"))
# CRF_data_High_100Vs50_long <- read_csv(here("figures","figure_data","CRF_data_High_100Vs50_long.csv"))
# CRF_data_Low_100Vs50_long <- read_csv(here("figures","figure_data","CRF_data_Low_100Vs50_long.csv"))
CRF_ALL_data_long_Avg <- read_csv(here("figures","figure_data","CRF_ALL_data_long_Avg.csv"))
CRF_Acquisition_CSPre <- read_csv(here("figures","figure_data","CRF_Acquisition_CSPre.csv"))
CRF_Acquisition_CSPre_Last5s <- read_csv(here("figures","figure_data","CRF_Acquisition_CSPre_Last5s.csv"))
# Test Data
# CRF_data_P100_HighvsLow_long <- read_csv(here("figures","figure_data","CRF_data_P100_HighvsLow_long.csv"))
# CRF_data_P50_HighvsLow_long <- read_csv(here("figures","figure_data","CRF_data_P50_HighvsLow_long.csv"))
# CRF_data_High_100Vs50_long <- read_csv(here("figures","figure_data","CRF_data_High_100Vs50_long.csv"))
# CRF_data_Low_100Vs50_long <- read_csv(here("figures","figure_data","CRF_data_Low_100Vs50_long.csv"))
CRF_ALL_data_long_Avg <- read_csv(here("figures","figure_data","CRF_ALL_data_long_Avg.csv"))
view(CRF_ALL_data_long_Avg)
colnames(CRF_ALL_data_long_Avg)
view(rawdata <- CRF_ALL_data_long_Avg %>%
filter(Value == "Diff"))
rawdata <- CRF_ALL_data_long_Avg %>%
filter(Value == "Diff")
# Stage 1 Acquisition Frequency
anova <- aov_4(Freq ~ (TestCondition|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_test_Value <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
anova_test_Value$table
rawdata <- CRF_ALL_data_long_Avg %>%
filter(Value == "Diff",
ExcludeSubject == "Keep")
view(rawdata <- CRF_ALL_data_long_Avg %>%
filter(Value == "Diff",
ExcludeSubject == "Keep"))
56/4
rawdata <- CRF_ALL_data_long_Avg %>%
filter(Value == "Diff",
measure = "LP")
rawdata <- CRF_ALL_data_long_Avg %>%
filter(Value == "Diff",
measure == "LP")
# Stage 1 Acquisition Frequency
anova <- aov_4(Freq ~ (TestCondition|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_test_Value <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
anova_test_Value$table
rawdata <- CRF_ALL_data_long_Avg %>%
filter(Value == "Diff",
measure == "LP",
ExcludeSubject == "Keep")
# Stage 1 Acquisition Frequency
anova <- aov_4(Freq ~ (TestCondition|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_test_Value <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
anova_test_Value$table
## simple effects - linear trend on Day
simple <- emmeans(anova, ~TestCondition)
simple_Test_Value <- apa_print(contrast(simple, interaction = "pairwise", adjust = "tukey"))
## simple effects - linear trend on Day
simple <- emmeans(anova, ~TestCondition)
view(rawdata <- CRF_ALL_data_long_Avg %>%
filter(Value == "Diff",
measure == "LP",
ExcludeSubject == "Keep"))
28/4
rawdata <- CRF_ALL_data_long_Avg %>%
filter(Value == "PercDiff",
measure == "LP",
ExcludeSubject == "Keep")
# Stage 1 Acquisition Frequency
anova <- aov_4(Freq ~ (TestCondition|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_test_Value <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
## simple effects - linear trend on Day
simple <- emmeans(anova, ~TestCondition)
simple_Test_Value <- apa_print(contrast(simple, interaction = "pairwise", adjust = "tukey"))
anova_test_Value$table
# Stage 1 Acquisition Frequency
anova <- mixed(Freq ~ TestCondition + (TestCondition|subject), data = rawdata, method = "S"))
# Stage 1 Acquisition Frequency
anova <- mixed(Freq ~ TestCondition + (TestCondition|subject), data = rawdata, method = "S")
# Stage 1 Acquisition Frequency
anova <- mixed(Freq ~ TestCondition + (TestCondition||subject), data = rawdata, method = "S")
# Stage 1 Acquisition Frequency
anova <- mixed(Freq ~ TestCondition + (subject), data = rawdata, method = "S")
# Stage 1 Acquisition Frequency
anova <- mixed(Freq ~ TestCondition + (0|subject), data = rawdata, method = "S")
# Stage 1 Acquisition Frequency
anova <- mixed(Freq ~ TestCondition + (1|subject), data = rawdata, method = "S")
# Stage 1 Acquisition Frequency
anova <- mixed(Freq ~ TestCondition + (1||subject), data = rawdata, method = "S")
# Stage 1 Acquisition Frequency
anova <- mixed(Freq ~ TestCondition + (1|subject), data = rawdata, method = "S")
anova_test_Value <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
apa_print
anova
# Stage 1 Acquisition Frequency
anova <- mixed(Freq ~ TestCondition + (TestCondition||subject), data = rawdata, method = "S")
rawdata <- CRF_ALL_data_long_Avg %>%
filter(Value == "Diff",
measure == "LP",
ExcludeSubject == "Keep")
# Stage 1 Acquisition Frequency
anova <- aov_4(Freq ~ (TestCondition|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_test_Value <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
anova_test_Value$table
# This analysis is not great - Standard ANOVA, only 4 rats did all 4 tests so this analysis kicks out too many subjects
rawdata <- CRF_ALL_data_long_Avg %>%
filter(Value == "Diff",
measure == "LP")
# Stage 1 Acquisition Frequency
anova <- aov_4(Freq ~ (TestCondition|subject), data = rawdata, anova_table = list(correction = "none", es = "pes"))
anova_test_Value <- apa_print(anova, mse = "FALSE",correction = "none",es = "pes")
anova_test_Value$table
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/MasterProcessingScript_2_ConditionedReinforcement_Acquisition.R', echo=TRUE)
source('~/GitHub/Marios-temp/NIDA_Expts/Experiments/MPNIDA001_Pilots/scripts/Plot_2_CRF.R', echo=TRUE)
